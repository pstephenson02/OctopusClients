### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.CertificateUsageResource
  commentId: T:Octopus.Client.Model.CertificateUsageResource
  id: CertificateUsageResource
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
  - Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
  - Octopus.Client.Model.CertificateUsageResource.ProjectUsages
  - Octopus.Client.Model.CertificateUsageResource.TenantUsages
  langs:
  - csharp
  - vb
  name: CertificateUsageResource
  nameWithType: CertificateUsageResource
  fullName: Octopus.Client.Model.CertificateUsageResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/CertificateUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CertificateUsageResource
    path: ../source/Octopus.Client/Model/CertificateUsageResource.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class CertificateUsageResource : Resource, IResource, IAuditedResource'
    content.vb: >-
      Public Class CertificateUsageResource
          Inherits Resource
          Implements IResource, IAuditedResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.CertificateUsageResource.ProjectUsages
  commentId: P:Octopus.Client.Model.CertificateUsageResource.ProjectUsages
  id: ProjectUsages
  parent: Octopus.Client.Model.CertificateUsageResource
  langs:
  - csharp
  - vb
  name: ProjectUsages
  nameWithType: CertificateUsageResource.ProjectUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.ProjectUsages
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/CertificateUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectUsages
    path: ../source/Octopus.Client/Model/CertificateUsageResource.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ICollection<ProjectResource> ProjectUsages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.ProjectResource}
    content.vb: Public Property ProjectUsages As ICollection(Of ProjectResource)
  overload: Octopus.Client.Model.CertificateUsageResource.ProjectUsages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
  commentId: P:Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
  id: LibraryVariableSetUsages
  parent: Octopus.Client.Model.CertificateUsageResource
  langs:
  - csharp
  - vb
  name: LibraryVariableSetUsages
  nameWithType: CertificateUsageResource.LibraryVariableSetUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/CertificateUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LibraryVariableSetUsages
    path: ../source/Octopus.Client/Model/CertificateUsageResource.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ICollection<LibraryVariableSetResource> LibraryVariableSetUsages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.LibraryVariableSetResource}
    content.vb: Public Property LibraryVariableSetUsages As ICollection(Of LibraryVariableSetResource)
  overload: Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.CertificateUsageResource.TenantUsages
  commentId: P:Octopus.Client.Model.CertificateUsageResource.TenantUsages
  id: TenantUsages
  parent: Octopus.Client.Model.CertificateUsageResource
  langs:
  - csharp
  - vb
  name: TenantUsages
  nameWithType: CertificateUsageResource.TenantUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.TenantUsages
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/CertificateUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TenantUsages
    path: ../source/Octopus.Client/Model/CertificateUsageResource.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ICollection<TenantResource> TenantUsages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.TenantResource}
    content.vb: Public Property TenantUsages As ICollection(Of TenantResource)
  overload: Octopus.Client.Model.CertificateUsageResource.TenantUsages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
  commentId: P:Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
  id: DeploymentTargetUsages
  parent: Octopus.Client.Model.CertificateUsageResource
  langs:
  - csharp
  - vb
  name: DeploymentTargetUsages
  nameWithType: CertificateUsageResource.DeploymentTargetUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/CertificateUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeploymentTargetUsages
    path: ../source/Octopus.Client/Model/CertificateUsageResource.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ICollection<MachineResource> DeploymentTargetUsages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.MachineResource}
    content.vb: Public Property DeploymentTargetUsages As ICollection(Of MachineResource)
  overload: Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.CertificateUsageResource.ProjectUsages*
  commentId: Overload:Octopus.Client.Model.CertificateUsageResource.ProjectUsages
  name: ProjectUsages
  nameWithType: CertificateUsageResource.ProjectUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.ProjectUsages
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.ProjectResource}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.ProjectResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ProjectResource>
  nameWithType: ICollection<ProjectResource>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.ProjectResource>
  nameWithType.vb: ICollection(Of ProjectResource)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.ProjectResource)
  name.vb: ICollection(Of ProjectResource)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectResource
    name: ProjectResource
    nameWithType: ProjectResource
    fullName: Octopus.Client.Model.ProjectResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectResource
    name: ProjectResource
    nameWithType: ProjectResource
    fullName: Octopus.Client.Model.ProjectResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages*
  commentId: Overload:Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
  name: LibraryVariableSetUsages
  nameWithType: CertificateUsageResource.LibraryVariableSetUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.LibraryVariableSetUsages
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.LibraryVariableSetResource}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.LibraryVariableSetResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<LibraryVariableSetResource>
  nameWithType: ICollection<LibraryVariableSetResource>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.LibraryVariableSetResource>
  nameWithType.vb: ICollection(Of LibraryVariableSetResource)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.LibraryVariableSetResource)
  name.vb: ICollection(Of LibraryVariableSetResource)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.LibraryVariableSetResource
    name: LibraryVariableSetResource
    nameWithType: LibraryVariableSetResource
    fullName: Octopus.Client.Model.LibraryVariableSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.LibraryVariableSetResource
    name: LibraryVariableSetResource
    nameWithType: LibraryVariableSetResource
    fullName: Octopus.Client.Model.LibraryVariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.CertificateUsageResource.TenantUsages*
  commentId: Overload:Octopus.Client.Model.CertificateUsageResource.TenantUsages
  name: TenantUsages
  nameWithType: CertificateUsageResource.TenantUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.TenantUsages
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.TenantResource}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.TenantResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TenantResource>
  nameWithType: ICollection<TenantResource>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.TenantResource>
  nameWithType.vb: ICollection(Of TenantResource)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.TenantResource)
  name.vb: ICollection(Of TenantResource)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages*
  commentId: Overload:Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
  name: DeploymentTargetUsages
  nameWithType: CertificateUsageResource.DeploymentTargetUsages
  fullName: Octopus.Client.Model.CertificateUsageResource.DeploymentTargetUsages
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.MachineResource}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.MachineResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MachineResource>
  nameWithType: ICollection<MachineResource>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.MachineResource>
  nameWithType.vb: ICollection(Of MachineResource)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.MachineResource)
  name.vb: ICollection(Of MachineResource)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
