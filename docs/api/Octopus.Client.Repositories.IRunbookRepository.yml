### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IRunbookRepository
  commentId: T:Octopus.Client.Repositories.IRunbookRepository
  id: IRunbookRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IRunbookRepository.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  - Octopus.Client.Repositories.IRunbookRepository.FindByName(Octopus.Client.Model.ProjectResource,System.String)
  - Octopus.Client.Repositories.IRunbookRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  - Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
  - Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
  - Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunParameters)
  - Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunResource)
  langs:
  - csharp
  - vb
  name: IRunbookRepository
  nameWithType: IRunbookRepository
  fullName: Octopus.Client.Repositories.IRunbookRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IRunbookRepository
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface IRunbookRepository : IFindByName<RunbookResource>, IPaginate<RunbookResource>, IGet<RunbookResource>, ICreate<RunbookResource>, IModify<RunbookResource>, IDelete<RunbookResource>'
    content.vb: >-
      Public Interface IRunbookRepository
          Inherits IFindByName(Of RunbookResource), IGet(Of RunbookResource), ICreate(Of RunbookResource), IModify(Of RunbookResource), IDelete(Of RunbookResource)
  inheritedMembers:
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByName(System.String,System.String,System.Object)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindOne(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindMany(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Refresh(Octopus.Client.Model.RunbookResource)
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}.Create(Octopus.Client.Model.RunbookResource,System.Object)
  - Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}.Modify(Octopus.Client.Model.RunbookResource)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}.Delete(Octopus.Client.Model.RunbookResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IRunbookRepository.FindByName(Octopus.Client.Model.ProjectResource,System.String)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.FindByName(Octopus.Client.Model.ProjectResource,System.String)
  id: FindByName(Octopus.Client.Model.ProjectResource,System.String)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: FindByName(ProjectResource, String)
  nameWithType: IRunbookRepository.FindByName(ProjectResource, String)
  fullName: Octopus.Client.Repositories.IRunbookRepository.FindByName(Octopus.Client.Model.ProjectResource, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FindByName
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookResource FindByName(ProjectResource project, string name)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: name
      type: System.String
    return:
      type: Octopus.Client.Model.RunbookResource
    content.vb: Function FindByName(project As ProjectResource, name As String) As RunbookResource
  overload: Octopus.Client.Repositories.IRunbookRepository.FindByName*
- uid: Octopus.Client.Repositories.IRunbookRepository.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  id: CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(ProjectResource, String, String)
  nameWithType: IRunbookRepository.CreateOrModify(ProjectResource, String, String)
  fullName: Octopus.Client.Repositories.IRunbookRepository.CreateOrModify(Octopus.Client.Model.ProjectResource, System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookEditor CreateOrModify(ProjectResource project, string name, string description)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: Octopus.Client.Editors.RunbookEditor
    content.vb: Function CreateOrModify(project As ProjectResource, name As String, description As String) As RunbookEditor
  overload: Octopus.Client.Repositories.IRunbookRepository.CreateOrModify*
- uid: Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
  id: GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: GetRunbookSnapshotTemplate(RunbookResource)
  nameWithType: IRunbookRepository.GetRunbookSnapshotTemplate(RunbookResource)
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetRunbookSnapshotTemplate
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(RunbookResource runbook)
    parameters:
    - id: runbook
      type: Octopus.Client.Model.RunbookResource
    return:
      type: Octopus.Client.Model.RunbookSnapshotTemplateResource
    content.vb: Function GetRunbookSnapshotTemplate(runbook As RunbookResource) As RunbookSnapshotTemplateResource
  overload: Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate*
- uid: Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
  id: GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: GetRunbookRunTemplate(RunbookResource)
  nameWithType: IRunbookRepository.GetRunbookRunTemplate(RunbookResource)
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetRunbookRunTemplate
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookRunTemplateResource GetRunbookRunTemplate(RunbookResource runbook)
    parameters:
    - id: runbook
      type: Octopus.Client.Model.RunbookResource
    return:
      type: Octopus.Client.Model.RunbookRunTemplateResource
    content.vb: Function GetRunbookRunTemplate(runbook As RunbookResource) As RunbookRunTemplateResource
  overload: Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate*
- uid: Octopus.Client.Repositories.IRunbookRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  id: GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: GetPreview(DeploymentPromotionTarget)
  nameWithType: IRunbookRepository.GetPreview(DeploymentPromotionTarget)
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetPreview
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget)
    parameters:
    - id: promotionTarget
      type: Octopus.Client.Model.DeploymentPromotionTarget
    return:
      type: Octopus.Client.Model.RunbookRunPreviewResource
    content.vb: Function GetPreview(promotionTarget As DeploymentPromotionTarget) As RunbookRunPreviewResource
  overload: Octopus.Client.Repositories.IRunbookRepository.GetPreview*
- uid: Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunResource)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunResource)
  id: Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunResource)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: Run(RunbookResource, RunbookRunResource)
  nameWithType: IRunbookRepository.Run(RunbookResource, RunbookRunResource)
  fullName: Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Run
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 14
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookRunResource Run(RunbookResource runbook, RunbookRunResource runbookRun)
    parameters:
    - id: runbook
      type: Octopus.Client.Model.RunbookResource
    - id: runbookRun
      type: Octopus.Client.Model.RunbookRunResource
    return:
      type: Octopus.Client.Model.RunbookRunResource
    content.vb: Function Run(runbook As RunbookResource, runbookRun As RunbookRunResource) As RunbookRunResource
  overload: Octopus.Client.Repositories.IRunbookRepository.Run*
- uid: Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunParameters)
  commentId: M:Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunParameters)
  id: Run(Octopus.Client.Model.RunbookResource,Octopus.Client.Model.RunbookRunParameters)
  parent: Octopus.Client.Repositories.IRunbookRepository
  langs:
  - csharp
  - vb
  name: Run(RunbookResource, RunbookRunParameters)
  nameWithType: IRunbookRepository.Run(RunbookResource, RunbookRunParameters)
  fullName: Octopus.Client.Repositories.IRunbookRepository.Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunParameters)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Run
    path: ../source/Octopus.Client/Repositories/RunbookRepository.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: RunbookRunResource[] Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters)
    parameters:
    - id: runbook
      type: Octopus.Client.Model.RunbookResource
    - id: runbookRunParameters
      type: Octopus.Client.Model.RunbookRunParameters
    return:
      type: Octopus.Client.Model.RunbookRunResource[]
    content.vb: Function Run(runbook As RunbookResource, runbookRunParameters As RunbookRunParameters) As RunbookRunResource()
  overload: Octopus.Client.Repositories.IRunbookRepository.Run*
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByName(System.String,System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<RunbookResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.RunbookResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of RunbookResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.RunbookResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<RunbookResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.RunbookResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of RunbookResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.RunbookResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<RunbookResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.RunbookResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of RunbookResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.RunbookResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<RunbookResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.RunbookResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of RunbookResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.RunbookResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<RunbookResource>, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookResource>.Paginate(Func<ResourceCollection<RunbookResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookResource).Paginate(Func(Of ResourceCollection(Of RunbookResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of RunbookResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<RunbookResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of RunbookResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindOne(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindOne(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<RunbookResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookResource>.FindOne(Func<RunbookResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindOne(System.Func<Octopus.Client.Model.RunbookResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookResource).FindOne(Func(Of RunbookResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindOne(System.Func(Of Octopus.Client.Model.RunbookResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of RunbookResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<RunbookResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of RunbookResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindMany(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindMany(System.Func{Octopus.Client.Model.RunbookResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<RunbookResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookResource>.FindMany(Func<RunbookResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindMany(System.Func<Octopus.Client.Model.RunbookResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookResource).FindMany(Func(Of RunbookResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindMany(System.Func(Of Octopus.Client.Model.RunbookResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of RunbookResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<RunbookResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of RunbookResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<RunbookResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<RunbookResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of RunbookResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<RunbookResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Get(System.String)
  nameWithType.vb: IGet(Of RunbookResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<RunbookResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of RunbookResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<RunbookResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Get(System.String[])
  nameWithType.vb: IGet(Of RunbookResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<RunbookResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of RunbookResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Refresh(Octopus.Client.Model.RunbookResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}.Refresh(Octopus.Client.Model.RunbookResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(RunbookResource)
  nameWithType: IGet<RunbookResource>.Refresh(RunbookResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Refresh(Octopus.Client.Model.RunbookResource)
  nameWithType.vb: IGet(Of RunbookResource).Refresh(RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Refresh(Octopus.Client.Model.RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<RunbookResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of RunbookResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}.Create(Octopus.Client.Model.RunbookResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}.Create(Octopus.Client.Model.RunbookResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(RunbookResource, Object)
  nameWithType: ICreate<RunbookResource>.Create(RunbookResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookResource>.Create(Octopus.Client.Model.RunbookResource, System.Object)
  nameWithType.vb: ICreate(Of RunbookResource).Create(RunbookResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookResource).Create(Octopus.Client.Model.RunbookResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<RunbookResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of RunbookResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}.Modify(Octopus.Client.Model.RunbookResource)
  commentId: M:Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}.Modify(Octopus.Client.Model.RunbookResource)
  parent: Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(RunbookResource)
  nameWithType: IModify<RunbookResource>.Modify(RunbookResource)
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.RunbookResource>.Modify(Octopus.Client.Model.RunbookResource)
  nameWithType.vb: IModify(Of RunbookResource).Modify(RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.RunbookResource).Modify(Octopus.Client.Model.RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<RunbookResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.RunbookResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of RunbookResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.RunbookResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}.Delete(Octopus.Client.Model.RunbookResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}.Delete(Octopus.Client.Model.RunbookResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(RunbookResource)
  nameWithType: IDelete<RunbookResource>.Delete(RunbookResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookResource>.Delete(Octopus.Client.Model.RunbookResource)
  nameWithType.vb: IDelete(Of RunbookResource).Delete(RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookResource).Delete(Octopus.Client.Model.RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<RunbookResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of RunbookResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  isExternal: true
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<RunbookResource>
  nameWithType: IFindByName<RunbookResource>
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: IFindByName(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.RunbookResource)
  name.vb: IFindByName(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  isExternal: true
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<RunbookResource>
  nameWithType: IPaginate<RunbookResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: IPaginate(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookResource)
  name.vb: IPaginate(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<RunbookResource>
  nameWithType: IGet<RunbookResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: IGet(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookResource)
  name.vb: IGet(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<RunbookResource>
  nameWithType: ICreate<RunbookResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: ICreate(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookResource)
  name.vb: ICreate(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.IModify{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IModify`1
  name: IModify<RunbookResource>
  nameWithType: IModify<RunbookResource>
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: IModify(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.RunbookResource)
  name.vb: IModify(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<RunbookResource>
  nameWithType: IDelete<RunbookResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookResource>
  nameWithType.vb: IDelete(Of RunbookResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookResource)
  name.vb: IDelete(Of RunbookResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookResource
    name: RunbookResource
    nameWithType: RunbookResource
    fullName: Octopus.Client.Model.RunbookResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1
  commentId: T:Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TResource>
  nameWithType: IFindByName<TResource>
  fullName: Octopus.Client.Repositories.IFindByName<TResource>
  nameWithType.vb: IFindByName(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource)
  name.vb: IFindByName(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1
  commentId: T:Octopus.Client.Repositories.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IRunbookRepository.FindByName*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.FindByName
  name: FindByName
  nameWithType: IRunbookRepository.FindByName
  fullName: Octopus.Client.Repositories.IRunbookRepository.FindByName
- uid: Octopus.Client.Model.ProjectResource
  commentId: T:Octopus.Client.Model.ProjectResource
  parent: Octopus.Client.Model
  name: ProjectResource
  nameWithType: ProjectResource
  fullName: Octopus.Client.Model.ProjectResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.RunbookResource
  commentId: T:Octopus.Client.Model.RunbookResource
  parent: Octopus.Client.Model
  name: RunbookResource
  nameWithType: RunbookResource
  fullName: Octopus.Client.Model.RunbookResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Repositories.IRunbookRepository.CreateOrModify*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.CreateOrModify
  name: CreateOrModify
  nameWithType: IRunbookRepository.CreateOrModify
  fullName: Octopus.Client.Repositories.IRunbookRepository.CreateOrModify
- uid: Octopus.Client.Editors.RunbookEditor
  commentId: T:Octopus.Client.Editors.RunbookEditor
  parent: Octopus.Client.Editors
  name: RunbookEditor
  nameWithType: RunbookEditor
  fullName: Octopus.Client.Editors.RunbookEditor
- uid: Octopus.Client.Editors
  commentId: N:Octopus.Client.Editors
  name: Octopus.Client.Editors
  nameWithType: Octopus.Client.Editors
  fullName: Octopus.Client.Editors
- uid: Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate
  name: GetRunbookSnapshotTemplate
  nameWithType: IRunbookRepository.GetRunbookSnapshotTemplate
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetRunbookSnapshotTemplate
- uid: Octopus.Client.Model.RunbookSnapshotTemplateResource
  commentId: T:Octopus.Client.Model.RunbookSnapshotTemplateResource
  parent: Octopus.Client.Model
  name: RunbookSnapshotTemplateResource
  nameWithType: RunbookSnapshotTemplateResource
  fullName: Octopus.Client.Model.RunbookSnapshotTemplateResource
- uid: Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate
  name: GetRunbookRunTemplate
  nameWithType: IRunbookRepository.GetRunbookRunTemplate
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetRunbookRunTemplate
- uid: Octopus.Client.Model.RunbookRunTemplateResource
  commentId: T:Octopus.Client.Model.RunbookRunTemplateResource
  parent: Octopus.Client.Model
  name: RunbookRunTemplateResource
  nameWithType: RunbookRunTemplateResource
  fullName: Octopus.Client.Model.RunbookRunTemplateResource
- uid: Octopus.Client.Repositories.IRunbookRepository.GetPreview*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.GetPreview
  name: GetPreview
  nameWithType: IRunbookRepository.GetPreview
  fullName: Octopus.Client.Repositories.IRunbookRepository.GetPreview
- uid: Octopus.Client.Model.DeploymentPromotionTarget
  commentId: T:Octopus.Client.Model.DeploymentPromotionTarget
  parent: Octopus.Client.Model
  name: DeploymentPromotionTarget
  nameWithType: DeploymentPromotionTarget
  fullName: Octopus.Client.Model.DeploymentPromotionTarget
- uid: Octopus.Client.Model.RunbookRunPreviewResource
  commentId: T:Octopus.Client.Model.RunbookRunPreviewResource
  parent: Octopus.Client.Model
  name: RunbookRunPreviewResource
  nameWithType: RunbookRunPreviewResource
  fullName: Octopus.Client.Model.RunbookRunPreviewResource
- uid: Octopus.Client.Repositories.IRunbookRepository.Run*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRepository.Run
  name: Run
  nameWithType: IRunbookRepository.Run
  fullName: Octopus.Client.Repositories.IRunbookRepository.Run
- uid: Octopus.Client.Model.RunbookRunResource
  commentId: T:Octopus.Client.Model.RunbookRunResource
  parent: Octopus.Client.Model
  name: RunbookRunResource
  nameWithType: RunbookRunResource
  fullName: Octopus.Client.Model.RunbookRunResource
- uid: Octopus.Client.Model.RunbookRunParameters
  commentId: T:Octopus.Client.Model.RunbookRunParameters
  parent: Octopus.Client.Model
  name: RunbookRunParameters
  nameWithType: RunbookRunParameters
  fullName: Octopus.Client.Model.RunbookRunParameters
- uid: Octopus.Client.Model.RunbookRunResource[]
  isExternal: true
  name: RunbookRunResource[]
  nameWithType: RunbookRunResource[]
  fullName: Octopus.Client.Model.RunbookRunResource[]
  nameWithType.vb: RunbookRunResource()
  fullName.vb: Octopus.Client.Model.RunbookRunResource()
  name.vb: RunbookRunResource()
  spec.csharp:
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ()
    nameWithType: ()
    fullName: ()
