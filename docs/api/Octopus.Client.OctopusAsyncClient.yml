### YamlMime:ManagedReference
items:
- uid: Octopus.Client.OctopusAsyncClient
  commentId: T:Octopus.Client.OctopusAsyncClient
  id: OctopusAsyncClient
  parent: Octopus.Client
  children:
  - Octopus.Client.OctopusAsyncClient.#ctor(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions,System.Boolean,System.String)
  - Octopus.Client.OctopusAsyncClient.AfterReceivedHttpResponse
  - Octopus.Client.OctopusAsyncClient.BeforeSendingHttpRequest
  - Octopus.Client.OctopusAsyncClient.Create(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions)
  - Octopus.Client.OctopusAsyncClient.Create``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  - Octopus.Client.OctopusAsyncClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  - Octopus.Client.OctopusAsyncClient.Dispose
  - Octopus.Client.OctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.OctopusAsyncClient.ForSystem
  - Octopus.Client.OctopusAsyncClient.Get``1(System.String,System.Object)
  - Octopus.Client.OctopusAsyncClient.GetContent(System.String,System.Object)
  - Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
  - Octopus.Client.OctopusAsyncClient.List``1(System.String,System.Object)
  - Octopus.Client.OctopusAsyncClient.ListAll``1(System.String,System.Object)
  - Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  - Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  - Octopus.Client.OctopusAsyncClient.Post(System.String)
  - Octopus.Client.OctopusAsyncClient.Post``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusAsyncClient.Post``2(System.String,``0,System.Object)
  - Octopus.Client.OctopusAsyncClient.Put(System.String)
  - Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0)
  - Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  - Octopus.Client.OctopusAsyncClient.QualifyUri(System.String,System.Object)
  - Octopus.Client.OctopusAsyncClient.ReceivedOctopusResponse
  - Octopus.Client.OctopusAsyncClient.Repository
  - Octopus.Client.OctopusAsyncClient.RootDocument
  - Octopus.Client.OctopusAsyncClient.SendingOctopusRequest
  - Octopus.Client.OctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  - Octopus.Client.OctopusAsyncClient.SignOut
  - Octopus.Client.OctopusAsyncClient.Update``1(System.String,``0,System.Object)
  langs:
  - csharp
  - vb
  name: OctopusAsyncClient
  nameWithType: OctopusAsyncClient
  fullName: Octopus.Client.OctopusAsyncClient
  type: Class
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusAsyncClient
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nThe Octopus Deploy RESTful HTTP API client.\n"
  example: []
  syntax:
    content: 'public class OctopusAsyncClient : IOctopusAsyncClient, IDisposable'
    content.vb: >-
      Public Class OctopusAsyncClient
          Implements IOctopusAsyncClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.IOctopusAsyncClient
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Octopus.Client.IOctopusAsyncClient.Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.RepositoryScope)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.OctopusAsyncClient.#ctor(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions,System.Boolean,System.String)
  commentId: M:Octopus.Client.OctopusAsyncClient.#ctor(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions,System.Boolean,System.String)
  id: '#ctor(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions,System.Boolean,System.String)'
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: OctopusAsyncClient(OctopusServerEndpoint, OctopusClientOptions, Boolean, String)
  nameWithType: OctopusAsyncClient.OctopusAsyncClient(OctopusServerEndpoint, OctopusClientOptions, Boolean, String)
  fullName: Octopus.Client.OctopusAsyncClient.OctopusAsyncClient(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 37
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: protected OctopusAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, bool addCertificateCallback, string requestingTool)
    parameters:
    - id: serverEndpoint
      type: Octopus.Client.OctopusServerEndpoint
    - id: options
      type: Octopus.Client.OctopusClientOptions
    - id: addCertificateCallback
      type: System.Boolean
    - id: requestingTool
      type: System.String
    content.vb: Protected Sub New(serverEndpoint As OctopusServerEndpoint, options As OctopusClientOptions, addCertificateCallback As Boolean, requestingTool As String)
  overload: Octopus.Client.OctopusAsyncClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Octopus.Client.OctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  id: ForSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: ForSpace(SpaceResource)
  nameWithType: OctopusAsyncClient.ForSpace(SpaceResource)
  fullName: Octopus.Client.OctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSpace
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 109
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusSpaceAsyncRepository ForSpace(SpaceResource space)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.IOctopusSpaceAsyncRepository
    content.vb: Public Function ForSpace(space As SpaceResource) As IOctopusSpaceAsyncRepository
  overload: Octopus.Client.OctopusAsyncClient.ForSpace*
  implements:
  - Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.ForSystem
  commentId: M:Octopus.Client.OctopusAsyncClient.ForSystem
  id: ForSystem
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: ForSystem()
  nameWithType: OctopusAsyncClient.ForSystem()
  fullName: Octopus.Client.OctopusAsyncClient.ForSystem()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSystem
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 115
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusSystemAsyncRepository ForSystem()
    return:
      type: Octopus.Client.IOctopusSystemAsyncRepository
    content.vb: Public Function ForSystem As IOctopusSystemAsyncRepository
  overload: Octopus.Client.OctopusAsyncClient.ForSystem*
  implements:
  - Octopus.Client.IOctopusAsyncClient.ForSystem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.Create(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions)
  commentId: M:Octopus.Client.OctopusAsyncClient.Create(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions)
  id: Create(Octopus.Client.OctopusServerEndpoint,Octopus.Client.OctopusClientOptions)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Create(OctopusServerEndpoint, OctopusClientOptions)
  nameWithType: OctopusAsyncClient.Create(OctopusServerEndpoint, OctopusClientOptions)
  fullName: Octopus.Client.OctopusAsyncClient.Create(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Create
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 120
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static Task<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options = null)
    parameters:
    - id: serverEndpoint
      type: Octopus.Client.OctopusServerEndpoint
    - id: options
      type: Octopus.Client.OctopusClientOptions
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.IOctopusAsyncClient}
    content.vb: Public Shared Function Create(serverEndpoint As OctopusServerEndpoint, options As OctopusClientOptions = Nothing) As Task(Of IOctopusAsyncClient)
  overload: Octopus.Client.OctopusAsyncClient.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
  commentId: P:Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
  id: IsUsingSecureConnection
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: IsUsingSecureConnection
  nameWithType: OctopusAsyncClient.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsUsingSecureConnection
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 168
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nIndicates whether a secure (SSL) connection is being used to communicate with the server.\n"
  example: []
  syntax:
    content: public bool IsUsingSecureConnection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingSecureConnection As Boolean
  overload: Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection*
  implements:
  - Octopus.Client.IOctopusAsyncClient.IsUsingSecureConnection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  commentId: M:Octopus.Client.OctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  id: SignIn(Octopus.Client.Model.LoginCommand)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: SignIn(LoginCommand)
  nameWithType: OctopusAsyncClient.SignIn(LoginCommand)
  fullName: Octopus.Client.OctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SignIn
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 170
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task SignIn(LoginCommand loginCommand)
    parameters:
    - id: loginCommand
      type: Octopus.Client.Model.LoginCommand
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SignIn(loginCommand As LoginCommand) As Task
  overload: Octopus.Client.OctopusAsyncClient.SignIn*
  implements:
  - Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.SignOut
  commentId: M:Octopus.Client.OctopusAsyncClient.SignOut
  id: SignOut
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: SignOut()
  nameWithType: OctopusAsyncClient.SignOut()
  fullName: Octopus.Client.OctopusAsyncClient.SignOut()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SignOut
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 186
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task SignOut()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SignOut As Task
  overload: Octopus.Client.OctopusAsyncClient.SignOut*
  implements:
  - Octopus.Client.IOctopusAsyncClient.SignOut
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.BeforeSendingHttpRequest
  commentId: E:Octopus.Client.OctopusAsyncClient.BeforeSendingHttpRequest
  id: BeforeSendingHttpRequest
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: BeforeSendingHttpRequest
  nameWithType: OctopusAsyncClient.BeforeSendingHttpRequest
  fullName: Octopus.Client.OctopusAsyncClient.BeforeSendingHttpRequest
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: BeforeSendingHttpRequest
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 195
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a request is about to be sent.\n"
  example: []
  syntax:
    content: public event Action<HttpRequestMessage> BeforeSendingHttpRequest
    return:
      type: System.Action{System.Net.Http.HttpRequestMessage}
    content.vb: Public Event BeforeSendingHttpRequest As Action(Of HttpRequestMessage)
  implements:
  - Octopus.Client.IOctopusAsyncClient.BeforeSendingHttpRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.AfterReceivedHttpResponse
  commentId: E:Octopus.Client.OctopusAsyncClient.AfterReceivedHttpResponse
  id: AfterReceivedHttpResponse
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: AfterReceivedHttpResponse
  nameWithType: OctopusAsyncClient.AfterReceivedHttpResponse
  fullName: Octopus.Client.OctopusAsyncClient.AfterReceivedHttpResponse
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AfterReceivedHttpResponse
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 200
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a response has been received.\n"
  example: []
  syntax:
    content: public event Action<HttpResponseMessage> AfterReceivedHttpResponse
    return:
      type: System.Action{System.Net.Http.HttpResponseMessage}
    content.vb: Public Event AfterReceivedHttpResponse As Action(Of HttpResponseMessage)
  implements:
  - Octopus.Client.IOctopusAsyncClient.AfterReceivedHttpResponse
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.RootDocument
  commentId: P:Octopus.Client.OctopusAsyncClient.RootDocument
  id: RootDocument
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: RootDocument
  nameWithType: OctopusAsyncClient.RootDocument
  fullName: Octopus.Client.OctopusAsyncClient.RootDocument
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RootDocument
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 209
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nGets a document that identifies the Octopus Server (from /api) and provides links to the resources available on the\nserver. Instead of hardcoding paths,\nclients should use these link properties to traverse the resources on the server. This document is lazily loaded so\nthat it is only requested once for\nthe current <xref href=\"Octopus.Client.IOctopusAsyncClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RootResource RootDocument { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.RootResource
    content.vb: Public ReadOnly Property RootDocument As RootResource
  overload: Octopus.Client.OctopusAsyncClient.RootDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncClient.SendingOctopusRequest
  commentId: E:Octopus.Client.OctopusAsyncClient.SendingOctopusRequest
  id: SendingOctopusRequest
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: SendingOctopusRequest
  nameWithType: OctopusAsyncClient.SendingOctopusRequest
  fullName: Octopus.Client.OctopusAsyncClient.SendingOctopusRequest
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SendingOctopusRequest
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 214
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a request is about to be sent.\n"
  example: []
  syntax:
    content: public event Action<OctopusRequest> SendingOctopusRequest
    return:
      type: System.Action{Octopus.Client.OctopusRequest}
    content.vb: Public Event SendingOctopusRequest As Action(Of OctopusRequest)
  implements:
  - Octopus.Client.IOctopusAsyncClient.SendingOctopusRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.ReceivedOctopusResponse
  commentId: E:Octopus.Client.OctopusAsyncClient.ReceivedOctopusResponse
  id: ReceivedOctopusResponse
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: ReceivedOctopusResponse
  nameWithType: OctopusAsyncClient.ReceivedOctopusResponse
  fullName: Octopus.Client.OctopusAsyncClient.ReceivedOctopusResponse
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ReceivedOctopusResponse
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 219
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a response is received from the Octopus Server.\n"
  example: []
  syntax:
    content: public event Action<OctopusResponse> ReceivedOctopusResponse
    return:
      type: System.Action{Octopus.Client.OctopusResponse}
    content.vb: Public Event ReceivedOctopusResponse As Action(Of OctopusResponse)
  implements:
  - Octopus.Client.IOctopusAsyncClient.ReceivedOctopusResponse
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.Get``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Get``1(System.String,System.Object)
  id: Get``1(System.String,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Get<TResource>(String, Object)
  nameWithType: OctopusAsyncClient.Get<TResource>(String, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Get<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 230
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a single resource from the server using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public Task<TResource> Get<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resource.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResource}}
      description: "\nThe resource from the server.\n"
    content.vb: Public Function Get(Of TResource)(path As String, pathParameters As Object = Nothing) As Task(Of TResource)
  overload: Octopus.Client.OctopusAsyncClient.Get*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Get``1(System.String,System.Object)
  nameWithType.vb: OctopusAsyncClient.Get(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Get(Of TResource)(System.String, System.Object)
  name.vb: Get(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusAsyncClient.Repository
  commentId: P:Octopus.Client.OctopusAsyncClient.Repository
  id: Repository
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: OctopusAsyncClient.Repository
  fullName: Octopus.Client.OctopusAsyncClient.Repository
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Repository
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 238
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusAsyncRepository Repository { get; protected set; }
    parameters: []
    return:
      type: Octopus.Client.IOctopusAsyncRepository
    content.vb: Public Property Repository As IOctopusAsyncRepository
  overload: Octopus.Client.OctopusAsyncClient.Repository*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Repository
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Octopus.Client.OctopusAsyncClient.List``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.List``1(System.String,System.Object)
  id: List``1(System.String,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: List<TResource>(String, Object)
  nameWithType: OctopusAsyncClient.List<TResource>(String, Object)
  fullName: Octopus.Client.OctopusAsyncClient.List<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: List
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 251
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server using the HTTP GET verb. The collection itself will usually be\nlimited in size (pagination) and links to the next page of data is available in the <xref href=\"Octopus.Client.Model.Resource.Links\" data-throw-if-not-resolved=\"false\"></xref>\nproperty.\n"
  example: []
  syntax:
    content: public Task<ResourceCollection<TResource>> List<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{{TResource}}}
      description: "\nThe collection of resources from the server.\n"
    content.vb: Public Function List(Of TResource)(path As String, pathParameters As Object = Nothing) As Task(Of ResourceCollection(Of TResource))
  overload: Octopus.Client.OctopusAsyncClient.List*
  implements:
  - Octopus.Client.IOctopusAsyncClient.List``1(System.String,System.Object)
  nameWithType.vb: OctopusAsyncClient.List(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.List(Of TResource)(System.String, System.Object)
  name.vb: List(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusAsyncClient.ListAll``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.ListAll``1(System.String,System.Object)
  id: ListAll``1(System.String,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: ListAll<TResource>(String, Object)
  nameWithType: OctopusAsyncClient.ListAll<TResource>(String, Object)
  fullName: Octopus.Client.OctopusAsyncClient.ListAll<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ListAll
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 266
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server using the HTTP GET verb. All pages will be retrieved.\nproperty.\n"
  example: []
  syntax:
    content: public Task<IReadOnlyList<TResource>> ListAll<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{{TResource}}}
      description: "\nThe collection of resources from the server.\n"
    content.vb: Public Function ListAll(Of TResource)(path As String, pathParameters As Object = Nothing) As Task(Of IReadOnlyList(Of TResource))
  overload: Octopus.Client.OctopusAsyncClient.ListAll*
  implements:
  - Octopus.Client.IOctopusAsyncClient.ListAll``1(System.String,System.Object)
  nameWithType.vb: OctopusAsyncClient.ListAll(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.ListAll(Of TResource)(System.String, System.Object)
  name.vb: ListAll(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  id: Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: OctopusAsyncClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.OctopusAsyncClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 287
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server one page at a time using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public Task Paginate<TResource>(string path, object pathParameters, Func<ResourceCollection<TResource>, bool> getNextPage)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
      description: "\nA callback invoked for each page of data found. If the callback returns <code>true</code>, the next\npage will also be requested.\n"
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Paginate(Of TResource)(path As String, pathParameters As Object, getNextPage As Func(Of ResourceCollection(Of TResource), Boolean)) As Task
  overload: Octopus.Client.OctopusAsyncClient.Paginate*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  nameWithType.vb: OctopusAsyncClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
- uid: Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.OctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  id: Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: OctopusAsyncClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.OctopusAsyncClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 306
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server one page at a time using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public Task Paginate<TResource>(string path, Func<ResourceCollection<TResource>, bool> getNextPage)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
      description: "\nA callback invoked for each page of data found. If the callback returns <code>true</code>, the next\npage will also be requested.\n"
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Paginate(Of TResource)(path As String, getNextPage As Func(Of ResourceCollection(Of TResource), Boolean)) As Task
  overload: Octopus.Client.OctopusAsyncClient.Paginate*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  nameWithType.vb: OctopusAsyncClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
- uid: Octopus.Client.OctopusAsyncClient.Create``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Create``1(System.String,``0,System.Object)
  id: Create``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Create<TResource>(String, TResource, Object)
  nameWithType: OctopusAsyncClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Create<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Create
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 322
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nCreates a resource at the given URI on the server using the POST verb, then performs a fresh GET request to fetch\nthe created item.\n"
  example: []
  syntax:
    content: public Task<TResource> Create<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResource}}
      description: "\nThe latest copy of the resource from the server.\n"
    content.vb: Public Function Create(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As Task(Of TResource)
  overload: Octopus.Client.OctopusAsyncClient.Create*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Create``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusAsyncClient.Create(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusAsyncClient.Post``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Post``1(System.String,``0,System.Object)
  id: Post``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Post<TResource>(String, TResource, Object)
  nameWithType: OctopusAsyncClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Post<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 337
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public Task Post<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Post(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As Task
  overload: Octopus.Client.OctopusAsyncClient.Post*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Post``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusAsyncClient.Post(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusAsyncClient.Post``2(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Post``2(System.String,``0,System.Object)
  id: Post``2(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: OctopusAsyncClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 352
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public Task<TResponse> Post<TResource, TResponse>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to post.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    - id: TResponse
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function Post(Of TResource, TResponse)(path As String, resource As TResource, pathParameters As Object = Nothing) As Task(Of TResponse)
  overload: Octopus.Client.OctopusAsyncClient.Post*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Post``2(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusAsyncClient.Post(Of TResource, TResponse)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
- uid: Octopus.Client.OctopusAsyncClient.Post(System.String)
  commentId: M:Octopus.Client.OctopusAsyncClient.Post(System.String)
  id: Post(System.String)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Post(String)
  nameWithType: OctopusAsyncClient.Post(String)
  fullName: Octopus.Client.OctopusAsyncClient.Post(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 363
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public Task Post(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Post(path As String) As Task
  overload: Octopus.Client.OctopusAsyncClient.Post*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Post(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0)
  commentId: M:Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0)
  id: Put``1(System.String,``0)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Put<TResource>(String, TResource)
  nameWithType: OctopusAsyncClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.OctopusAsyncClient.Put<TResource>(System.String, TResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 385
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public Task Put<TResource>(string path, TResource resource)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    typeParameters:
    - id: TResource
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Put(Of TResource)(path As String, resource As TResource) As Task
  overload: Octopus.Client.OctopusAsyncClient.Put*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusAsyncClient.Put``1(System.String,{TResource})
  nameWithType.vb: OctopusAsyncClient.Put(Of TResource)(String, TResource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
- uid: Octopus.Client.OctopusAsyncClient.Put(System.String)
  commentId: M:Octopus.Client.OctopusAsyncClient.Put(System.String)
  id: Put(System.String)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Put(String)
  nameWithType: OctopusAsyncClient.Put(String)
  fullName: Octopus.Client.OctopusAsyncClient.Put(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 406
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public Task Put(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Put(path As String) As Task
  overload: Octopus.Client.OctopusAsyncClient.Put*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusAsyncClient.Put(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Put``1(System.String,``0,System.Object)
  id: Put``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Put<TResource>(String, TResource, Object)
  nameWithType: OctopusAsyncClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Put<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 420
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public Task Put<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Put(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As Task
  overload: Octopus.Client.OctopusAsyncClient.Put*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Put``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusAsyncClient.Put(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  id: Delete(System.String,System.Object,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Delete(String, Object, Object)
  nameWithType: OctopusAsyncClient.Delete(String, Object, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Delete(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Delete
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 433
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nDeletes the resource at the given URI from the server using a the DELETE verb.\n"
  example: []
  syntax:
    content: public Task Delete(string path, object pathParameters = null, object resource = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to delete.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    - id: resource
      type: System.Object
      description: An optional resource to pass as the body of the request.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Delete(path As String, pathParameters As Object = Nothing, resource As Object = Nothing) As Task
  overload: Octopus.Client.OctopusAsyncClient.Delete*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.Update``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.Update``1(System.String,``0,System.Object)
  id: Update``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Update<TResource>(String, TResource, Object)
  nameWithType: OctopusAsyncClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusAsyncClient.Update<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Update
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 451
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nUpdates the resource at the given URI on the server using the PUT verb, then performs a fresh GET request to reload\nthe data.\n"
  example: []
  syntax:
    content: public Task<TResource> Update<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to update.
    - id: resource
      type: '{TResource}'
      description: The resource to update.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResource}}
      description: "\nThe latest copy of the resource from the server.\n"
    content.vb: Public Function Update(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As Task(Of TResource)
  overload: Octopus.Client.OctopusAsyncClient.Update*
  implements:
  - Octopus.Client.IOctopusAsyncClient.Update``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusAsyncClient.Update(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusAsyncClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusAsyncClient.GetContent(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.GetContent(System.String,System.Object)
  id: GetContent(System.String,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: GetContent(String, Object)
  nameWithType: OctopusAsyncClient.GetContent(String, Object)
  fullName: Octopus.Client.OctopusAsyncClient.GetContent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetContent
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 476
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches raw content from the resource at the specified path, using the GET verb.\n"
  example: []
  syntax:
    content: public Task<Stream> GetContent(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to fetch.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream containing the content of the resource.
    content.vb: Public Function GetContent(path As String, pathParameters As Object = Nothing) As Task(Of Stream)
  overload: Octopus.Client.OctopusAsyncClient.GetContent*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusAsyncClient.GetContent(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  commentId: M:Octopus.Client.OctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  id: PutContent(System.String,System.IO.Stream)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: PutContent(String, Stream)
  nameWithType: OctopusAsyncClient.PutContent(String, Stream)
  fullName: Octopus.Client.OctopusAsyncClient.PutContent(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PutContent
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 488
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nCreates or updates the raw content of the resource at the specified path, using the PUT verb.\n"
  example: []
  syntax:
    content: public Task PutContent(string path, Stream contentStream)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to create or update.
    - id: contentStream
      type: System.IO.Stream
      description: A stream containing content of the resource.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PutContent(path As String, contentStream As Stream) As Task
  overload: Octopus.Client.OctopusAsyncClient.PutContent*
  implements:
  - Octopus.Client.IOctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.QualifyUri(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusAsyncClient.QualifyUri(System.String,System.Object)
  id: QualifyUri(System.String,System.Object)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: QualifyUri(String, Object)
  nameWithType: OctopusAsyncClient.QualifyUri(String, Object)
  fullName: Octopus.Client.OctopusAsyncClient.QualifyUri(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: QualifyUri
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 495
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Uri QualifyUri(string path, object parameters = null)
    parameters:
    - id: path
      type: System.String
    - id: parameters
      type: System.Object
    return:
      type: System.Uri
    content.vb: Public Function QualifyUri(path As String, parameters As Object = Nothing) As Uri
  overload: Octopus.Client.OctopusAsyncClient.QualifyUri*
  implements:
  - Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  commentId: M:Octopus.Client.OctopusAsyncClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  id: DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: DispatchRequest<TResponseResource>(OctopusRequest, Boolean)
  nameWithType: OctopusAsyncClient.DispatchRequest<TResponseResource>(OctopusRequest, Boolean)
  fullName: Octopus.Client.OctopusAsyncClient.DispatchRequest<TResponseResource>(Octopus.Client.OctopusRequest, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DispatchRequest
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 504
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: protected virtual Task<OctopusResponse<TResponseResource>> DispatchRequest<TResponseResource>(OctopusRequest request, bool readResponse)
    parameters:
    - id: request
      type: Octopus.Client.OctopusRequest
    - id: readResponse
      type: System.Boolean
    typeParameters:
    - id: TResponseResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.OctopusResponse{{TResponseResource}}}
    content.vb: Protected Overridable Function DispatchRequest(Of TResponseResource)(request As OctopusRequest, readResponse As Boolean) As Task(Of OctopusResponse(Of TResponseResource))
  overload: Octopus.Client.OctopusAsyncClient.DispatchRequest*
  nameWithType.vb: OctopusAsyncClient.DispatchRequest(Of TResponseResource)(OctopusRequest, Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Octopus.Client.OctopusAsyncClient.DispatchRequest(Of TResponseResource)(Octopus.Client.OctopusRequest, System.Boolean)
  name.vb: DispatchRequest(Of TResponseResource)(OctopusRequest, Boolean)
- uid: Octopus.Client.OctopusAsyncClient.Dispose
  commentId: M:Octopus.Client.OctopusAsyncClient.Dispose
  id: Dispose
  parent: Octopus.Client.OctopusAsyncClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OctopusAsyncClient.Dispose()
  fullName: Octopus.Client.OctopusAsyncClient.Dispose()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Dispose
    path: ../source/Octopus.Client/OctopusAsyncClient.cs
    startLine: 635
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Octopus.Client.OctopusAsyncClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.IOctopusAsyncClient
  commentId: T:Octopus.Client.IOctopusAsyncClient
  parent: Octopus.Client
  name: IOctopusAsyncClient
  nameWithType: IOctopusAsyncClient
  fullName: Octopus.Client.IOctopusAsyncClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.RepositoryScope)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  parent: Octopus.Client.OctopusRepositoryExtensions
  definition: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  name: CreateRepository(RepositoryScope)
  nameWithType: OctopusRepositoryExtensions.CreateRepository(RepositoryScope)
  fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.RepositoryScope)
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.RepositoryScope)
    name: CreateRepository
    nameWithType: OctopusRepositoryExtensions.CreateRepository
    fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.RepositoryScope
    name: RepositoryScope
    nameWithType: RepositoryScope
    fullName: Octopus.Client.RepositoryScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.RepositoryScope)
    name: CreateRepository
    nameWithType: OctopusRepositoryExtensions.CreateRepository
    fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.RepositoryScope
    name: RepositoryScope
    nameWithType: RepositoryScope
    fullName: Octopus.Client.RepositoryScope
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  name: CreateRepository(IOctopusAsyncClient, RepositoryScope)
  nameWithType: OctopusRepositoryExtensions.CreateRepository(IOctopusAsyncClient, RepositoryScope)
  fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient, Octopus.Client.RepositoryScope)
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
    name: CreateRepository
    nameWithType: OctopusRepositoryExtensions.CreateRepository
    fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncClient
    name: IOctopusAsyncClient
    nameWithType: IOctopusAsyncClient
    fullName: Octopus.Client.IOctopusAsyncClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.RepositoryScope
    name: RepositoryScope
    nameWithType: RepositoryScope
    fullName: Octopus.Client.RepositoryScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
    name: CreateRepository
    nameWithType: OctopusRepositoryExtensions.CreateRepository
    fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncClient
    name: IOctopusAsyncClient
    nameWithType: IOctopusAsyncClient
    fullName: Octopus.Client.IOctopusAsyncClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.RepositoryScope
    name: RepositoryScope
    nameWithType: RepositoryScope
    fullName: Octopus.Client.RepositoryScope
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusRepositoryExtensions
  commentId: T:Octopus.Client.OctopusRepositoryExtensions
  parent: Octopus.Client
  name: OctopusRepositoryExtensions
  nameWithType: OctopusRepositoryExtensions
  fullName: Octopus.Client.OctopusRepositoryExtensions
- uid: Octopus.Client.OctopusAsyncClient.#ctor*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.#ctor
  name: OctopusAsyncClient
  nameWithType: OctopusAsyncClient.OctopusAsyncClient
  fullName: Octopus.Client.OctopusAsyncClient.OctopusAsyncClient
- uid: Octopus.Client.OctopusServerEndpoint
  commentId: T:Octopus.Client.OctopusServerEndpoint
  parent: Octopus.Client
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint
- uid: Octopus.Client.OctopusClientOptions
  commentId: T:Octopus.Client.OctopusClientOptions
  parent: Octopus.Client
  name: OctopusClientOptions
  nameWithType: OctopusClientOptions
  fullName: Octopus.Client.OctopusClientOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.OctopusAsyncClient.ForSpace*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.ForSpace
  name: ForSpace
  nameWithType: OctopusAsyncClient.ForSpace
  fullName: Octopus.Client.OctopusAsyncClient.ForSpace
- uid: Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.IOctopusAsyncClient
  name: ForSpace(SpaceResource)
  nameWithType: IOctopusAsyncClient.ForSpace(SpaceResource)
  fullName: Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: IOctopusAsyncClient.ForSpace
    fullName: Octopus.Client.IOctopusAsyncClient.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: IOctopusAsyncClient.ForSpace
    fullName: Octopus.Client.IOctopusAsyncClient.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: Octopus.Client.IOctopusSpaceAsyncRepository
  commentId: T:Octopus.Client.IOctopusSpaceAsyncRepository
  parent: Octopus.Client
  name: IOctopusSpaceAsyncRepository
  nameWithType: IOctopusSpaceAsyncRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.OctopusAsyncClient.ForSystem*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.ForSystem
  name: ForSystem
  nameWithType: OctopusAsyncClient.ForSystem
  fullName: Octopus.Client.OctopusAsyncClient.ForSystem
- uid: Octopus.Client.IOctopusAsyncClient.ForSystem
  commentId: M:Octopus.Client.IOctopusAsyncClient.ForSystem
  parent: Octopus.Client.IOctopusAsyncClient
  name: ForSystem()
  nameWithType: IOctopusAsyncClient.ForSystem()
  fullName: Octopus.Client.IOctopusAsyncClient.ForSystem()
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.ForSystem
    name: ForSystem
    nameWithType: IOctopusAsyncClient.ForSystem
    fullName: Octopus.Client.IOctopusAsyncClient.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.ForSystem
    name: ForSystem
    nameWithType: IOctopusAsyncClient.ForSystem
    fullName: Octopus.Client.IOctopusAsyncClient.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusSystemAsyncRepository
  commentId: T:Octopus.Client.IOctopusSystemAsyncRepository
  parent: Octopus.Client
  name: IOctopusSystemAsyncRepository
  nameWithType: IOctopusSystemAsyncRepository
  fullName: Octopus.Client.IOctopusSystemAsyncRepository
- uid: Octopus.Client.OctopusAsyncClient.Create*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Create
  name: Create
  nameWithType: OctopusAsyncClient.Create
  fullName: Octopus.Client.OctopusAsyncClient.Create
- uid: System.Threading.Tasks.Task{Octopus.Client.IOctopusAsyncClient}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.IOctopusAsyncClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IOctopusAsyncClient>
  nameWithType: Task<IOctopusAsyncClient>
  fullName: System.Threading.Tasks.Task<Octopus.Client.IOctopusAsyncClient>
  nameWithType.vb: Task(Of IOctopusAsyncClient)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.IOctopusAsyncClient)
  name.vb: Task(Of IOctopusAsyncClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.IOctopusAsyncClient
    name: IOctopusAsyncClient
    nameWithType: IOctopusAsyncClient
    fullName: Octopus.Client.IOctopusAsyncClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.IOctopusAsyncClient
    name: IOctopusAsyncClient
    nameWithType: IOctopusAsyncClient
    fullName: Octopus.Client.IOctopusAsyncClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
  name: IsUsingSecureConnection
  nameWithType: OctopusAsyncClient.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusAsyncClient.IsUsingSecureConnection
- uid: Octopus.Client.IOctopusAsyncClient.IsUsingSecureConnection
  commentId: P:Octopus.Client.IOctopusAsyncClient.IsUsingSecureConnection
  parent: Octopus.Client.IOctopusAsyncClient
  name: IsUsingSecureConnection
  nameWithType: IOctopusAsyncClient.IsUsingSecureConnection
  fullName: Octopus.Client.IOctopusAsyncClient.IsUsingSecureConnection
- uid: Octopus.Client.OctopusAsyncClient.SignIn*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.SignIn
  name: SignIn
  nameWithType: OctopusAsyncClient.SignIn
  fullName: Octopus.Client.OctopusAsyncClient.SignIn
- uid: Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  commentId: M:Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  parent: Octopus.Client.IOctopusAsyncClient
  name: SignIn(LoginCommand)
  nameWithType: IOctopusAsyncClient.SignIn(LoginCommand)
  fullName: Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
    name: SignIn
    nameWithType: IOctopusAsyncClient.SignIn
    fullName: Octopus.Client.IOctopusAsyncClient.SignIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.LoginCommand
    name: LoginCommand
    nameWithType: LoginCommand
    fullName: Octopus.Client.Model.LoginCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.SignIn(Octopus.Client.Model.LoginCommand)
    name: SignIn
    nameWithType: IOctopusAsyncClient.SignIn
    fullName: Octopus.Client.IOctopusAsyncClient.SignIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.LoginCommand
    name: LoginCommand
    nameWithType: LoginCommand
    fullName: Octopus.Client.Model.LoginCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.LoginCommand
  commentId: T:Octopus.Client.Model.LoginCommand
  parent: Octopus.Client.Model
  name: LoginCommand
  nameWithType: LoginCommand
  fullName: Octopus.Client.Model.LoginCommand
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Octopus.Client.OctopusAsyncClient.SignOut*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.SignOut
  name: SignOut
  nameWithType: OctopusAsyncClient.SignOut
  fullName: Octopus.Client.OctopusAsyncClient.SignOut
- uid: Octopus.Client.IOctopusAsyncClient.SignOut
  commentId: M:Octopus.Client.IOctopusAsyncClient.SignOut
  parent: Octopus.Client.IOctopusAsyncClient
  name: SignOut()
  nameWithType: IOctopusAsyncClient.SignOut()
  fullName: Octopus.Client.IOctopusAsyncClient.SignOut()
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.SignOut
    name: SignOut
    nameWithType: IOctopusAsyncClient.SignOut
    fullName: Octopus.Client.IOctopusAsyncClient.SignOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.SignOut
    name: SignOut
    nameWithType: IOctopusAsyncClient.SignOut
    fullName: Octopus.Client.IOctopusAsyncClient.SignOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.BeforeSendingHttpRequest
  commentId: E:Octopus.Client.IOctopusAsyncClient.BeforeSendingHttpRequest
  parent: Octopus.Client.IOctopusAsyncClient
  name: BeforeSendingHttpRequest
  nameWithType: IOctopusAsyncClient.BeforeSendingHttpRequest
  fullName: Octopus.Client.IOctopusAsyncClient.BeforeSendingHttpRequest
- uid: System.Action{System.Net.Http.HttpRequestMessage}
  commentId: T:System.Action{System.Net.Http.HttpRequestMessage}
  parent: System
  definition: System.Action`1
  name: Action<HttpRequestMessage>
  nameWithType: Action<HttpRequestMessage>
  fullName: System.Action<System.Net.Http.HttpRequestMessage>
  nameWithType.vb: Action(Of HttpRequestMessage)
  fullName.vb: System.Action(Of System.Net.Http.HttpRequestMessage)
  name.vb: Action(Of HttpRequestMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.AfterReceivedHttpResponse
  commentId: E:Octopus.Client.IOctopusAsyncClient.AfterReceivedHttpResponse
  parent: Octopus.Client.IOctopusAsyncClient
  name: AfterReceivedHttpResponse
  nameWithType: IOctopusAsyncClient.AfterReceivedHttpResponse
  fullName: Octopus.Client.IOctopusAsyncClient.AfterReceivedHttpResponse
- uid: System.Action{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Action{System.Net.Http.HttpResponseMessage}
  parent: System
  definition: System.Action`1
  name: Action<HttpResponseMessage>
  nameWithType: Action<HttpResponseMessage>
  fullName: System.Action<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Action(Of HttpResponseMessage)
  fullName.vb: System.Action(Of System.Net.Http.HttpResponseMessage)
  name.vb: Action(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.RootDocument*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.RootDocument
  name: RootDocument
  nameWithType: OctopusAsyncClient.RootDocument
  fullName: Octopus.Client.OctopusAsyncClient.RootDocument
- uid: Octopus.Client.Model.RootResource
  commentId: T:Octopus.Client.Model.RootResource
  parent: Octopus.Client.Model
  name: RootResource
  nameWithType: RootResource
  fullName: Octopus.Client.Model.RootResource
- uid: Octopus.Client.IOctopusAsyncClient.SendingOctopusRequest
  commentId: E:Octopus.Client.IOctopusAsyncClient.SendingOctopusRequest
  parent: Octopus.Client.IOctopusAsyncClient
  name: SendingOctopusRequest
  nameWithType: IOctopusAsyncClient.SendingOctopusRequest
  fullName: Octopus.Client.IOctopusAsyncClient.SendingOctopusRequest
- uid: System.Action{Octopus.Client.OctopusRequest}
  commentId: T:System.Action{Octopus.Client.OctopusRequest}
  parent: System
  definition: System.Action`1
  name: Action<OctopusRequest>
  nameWithType: Action<OctopusRequest>
  fullName: System.Action<Octopus.Client.OctopusRequest>
  nameWithType.vb: Action(Of OctopusRequest)
  fullName.vb: System.Action(Of Octopus.Client.OctopusRequest)
  name.vb: Action(Of OctopusRequest)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.OctopusRequest
    name: OctopusRequest
    nameWithType: OctopusRequest
    fullName: Octopus.Client.OctopusRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.OctopusRequest
    name: OctopusRequest
    nameWithType: OctopusRequest
    fullName: Octopus.Client.OctopusRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.ReceivedOctopusResponse
  commentId: E:Octopus.Client.IOctopusAsyncClient.ReceivedOctopusResponse
  parent: Octopus.Client.IOctopusAsyncClient
  name: ReceivedOctopusResponse
  nameWithType: IOctopusAsyncClient.ReceivedOctopusResponse
  fullName: Octopus.Client.IOctopusAsyncClient.ReceivedOctopusResponse
- uid: System.Action{Octopus.Client.OctopusResponse}
  commentId: T:System.Action{Octopus.Client.OctopusResponse}
  parent: System
  definition: System.Action`1
  name: Action<OctopusResponse>
  nameWithType: Action<OctopusResponse>
  fullName: System.Action<Octopus.Client.OctopusResponse>
  nameWithType.vb: Action(Of OctopusResponse)
  fullName.vb: System.Action(Of Octopus.Client.OctopusResponse)
  name.vb: Action(Of OctopusResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.OctopusResponse
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.OctopusResponse
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Get*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Get
  name: Get
  nameWithType: OctopusAsyncClient.Get
  fullName: Octopus.Client.OctopusAsyncClient.Get
- uid: Octopus.Client.IOctopusAsyncClient.Get``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Get``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: Get<TResource>(String, Object)
  nameWithType: IOctopusAsyncClient.Get<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Get<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Get(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Get(Of TResource)(System.String, System.Object)
  name.vb: Get(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Get``1(System.String,System.Object)
    name: Get<TResource>
    nameWithType: IOctopusAsyncClient.Get<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Get<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Get``1(System.String,System.Object)
    name: Get(Of TResource)
    nameWithType: IOctopusAsyncClient.Get(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Get(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResource}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResource>
  nameWithType: Task<TResource>
  fullName: System.Threading.Tasks.Task<TResource>
  nameWithType.vb: Task(Of TResource)
  fullName.vb: System.Threading.Tasks.Task(Of TResource)
  name.vb: Task(Of TResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Repository*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Repository
  name: Repository
  nameWithType: OctopusAsyncClient.Repository
  fullName: Octopus.Client.OctopusAsyncClient.Repository
- uid: Octopus.Client.IOctopusAsyncClient.Repository
  commentId: P:Octopus.Client.IOctopusAsyncClient.Repository
  parent: Octopus.Client.IOctopusAsyncClient
  name: Repository
  nameWithType: IOctopusAsyncClient.Repository
  fullName: Octopus.Client.IOctopusAsyncClient.Repository
- uid: Octopus.Client.IOctopusAsyncRepository
  commentId: T:Octopus.Client.IOctopusAsyncRepository
  parent: Octopus.Client
  name: IOctopusAsyncRepository
  nameWithType: IOctopusAsyncRepository
  fullName: Octopus.Client.IOctopusAsyncRepository
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.OctopusAsyncClient.List*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.List
  name: List
  nameWithType: OctopusAsyncClient.List
  fullName: Octopus.Client.OctopusAsyncClient.List
- uid: Octopus.Client.IOctopusAsyncClient.List``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.List``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: List<TResource>(String, Object)
  nameWithType: IOctopusAsyncClient.List<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.List<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusAsyncClient.List(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.List(Of TResource)(System.String, System.Object)
  name.vb: List(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.List``1(System.String,System.Object)
    name: List<TResource>
    nameWithType: IOctopusAsyncClient.List<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.List<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.List``1(System.String,System.Object)
    name: List(Of TResource)
    nameWithType: IOctopusAsyncClient.List(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.List(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{{TResource}}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceCollection<TResource>>
  nameWithType: Task<ResourceCollection<TResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ResourceCollection<TResource>>
  nameWithType.vb: Task(Of ResourceCollection(Of TResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ResourceCollection(Of TResource))
  name.vb: Task(Of ResourceCollection(Of TResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.OctopusAsyncClient.ListAll*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.ListAll
  name: ListAll
  nameWithType: OctopusAsyncClient.ListAll
  fullName: Octopus.Client.OctopusAsyncClient.ListAll
- uid: Octopus.Client.IOctopusAsyncClient.ListAll``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.ListAll``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: ListAll<TResource>(String, Object)
  nameWithType: IOctopusAsyncClient.ListAll<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.ListAll<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusAsyncClient.ListAll(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.ListAll(Of TResource)(System.String, System.Object)
  name.vb: ListAll(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.ListAll``1(System.String,System.Object)
    name: ListAll<TResource>
    nameWithType: IOctopusAsyncClient.ListAll<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.ListAll<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.ListAll``1(System.String,System.Object)
    name: ListAll(Of TResource)
    nameWithType: IOctopusAsyncClient.ListAll(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.ListAll(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{{TResource}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IReadOnlyList<TResource>>
  nameWithType: Task<IReadOnlyList<TResource>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<TResource>>
  nameWithType.vb: Task(Of IReadOnlyList(Of TResource))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyList(Of TResource))
  name.vb: Task(Of IReadOnlyList(Of TResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Paginate*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Paginate
  name: Paginate
  nameWithType: OctopusAsyncClient.Paginate
  fullName: Octopus.Client.OctopusAsyncClient.Paginate
- uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  commentId: M:Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusAsyncClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusAsyncClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusAsyncClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusAsyncClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
  commentId: T:System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ResourceCollection<TResource>, Boolean>
  nameWithType: Func<ResourceCollection<TResource>, Boolean>
  fullName: System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>
  nameWithType.vb: Func(Of ResourceCollection(Of TResource), Boolean)
  fullName.vb: System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean)
  name.vb: Func(Of ResourceCollection(Of TResource), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  isExternal: true
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusAsyncClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusAsyncClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusAsyncClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusAsyncClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  commentId: M:Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusAsyncClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusAsyncClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusAsyncClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusAsyncClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  isExternal: true
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusAsyncClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusAsyncClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusAsyncClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusAsyncClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
  name: Create<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Create<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Create(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
    name: Create<TResource>
    nameWithType: IOctopusAsyncClient.Create<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Create<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
    name: Create(Of TResource)
    nameWithType: IOctopusAsyncClient.Create(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Create(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResource}'
  commentId: '!:TResource'
  definition: TResource
  name: TResource
  nameWithType: TResource
  fullName: TResource
- uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
  isExternal: true
  name: Create<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Create<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Create(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
    name: Create<TResource>
    nameWithType: IOctopusAsyncClient.Create<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Create<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Create``1(System.String,``0,System.Object)
    name: Create(Of TResource)
    nameWithType: IOctopusAsyncClient.Create(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Create(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TResource
  name: TResource
  nameWithType: TResource
  fullName: TResource
- uid: Octopus.Client.OctopusAsyncClient.Post*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Post
  name: Post
  nameWithType: OctopusAsyncClient.Post
  fullName: Octopus.Client.OctopusAsyncClient.Post
- uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
  name: Post<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Post(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
    name: Post<TResource>
    nameWithType: IOctopusAsyncClient.Post<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
    name: Post(Of TResource)
    nameWithType: IOctopusAsyncClient.Post(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Post(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
  isExternal: true
  name: Post<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Post(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
    name: Post<TResource>
    nameWithType: IOctopusAsyncClient.Post<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``1(System.String,``0,System.Object)
    name: Post(Of TResource)
    nameWithType: IOctopusAsyncClient.Post(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Post(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Post(Of TResource, TResponse)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
    name: Post<TResource, TResponse>
    nameWithType: IOctopusAsyncClient.Post<TResource, TResponse>
    fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource, TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
    name: Post(Of TResource, TResponse)
    nameWithType: IOctopusAsyncClient.Post(Of TResource, TResponse)
    fullName: Octopus.Client.IOctopusAsyncClient.Post(Of TResource, TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
  isExternal: true
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Post(Of TResource, TResponse)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
    name: Post<TResource, TResponse>
    nameWithType: IOctopusAsyncClient.Post<TResource, TResponse>
    fullName: Octopus.Client.IOctopusAsyncClient.Post<TResource, TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Post``2(System.String,``0,System.Object)
    name: Post(Of TResource, TResponse)
    nameWithType: IOctopusAsyncClient.Post(Of TResource, TResponse)
    fullName: Octopus.Client.IOctopusAsyncClient.Post(Of TResource, TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Post(System.String)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Post(System.String)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: Post(String)
  nameWithType: IOctopusAsyncClient.Post(String)
  fullName: Octopus.Client.IOctopusAsyncClient.Post(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Post(System.String)
    name: Post
    nameWithType: IOctopusAsyncClient.Post
    fullName: Octopus.Client.IOctopusAsyncClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Post(System.String)
    name: Post
    nameWithType: IOctopusAsyncClient.Post
    fullName: Octopus.Client.IOctopusAsyncClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Exceptions.OctopusSecurityException
  commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
  name: OctopusSecurityException
  nameWithType: OctopusSecurityException
  fullName: Octopus.Client.Exceptions.OctopusSecurityException
- uid: Octopus.Client.Exceptions.OctopusServerException
  commentId: T:Octopus.Client.Exceptions.OctopusServerException
  name: OctopusServerException
  nameWithType: OctopusServerException
  fullName: Octopus.Client.Exceptions.OctopusServerException
- uid: Octopus.Client.Exceptions.OctopusValidationException
  commentId: T:Octopus.Client.Exceptions.OctopusValidationException
  name: OctopusValidationException
  nameWithType: OctopusValidationException
  fullName: Octopus.Client.Exceptions.OctopusValidationException
- uid: Octopus.Client.Exceptions.OctopusResourceNotFoundException
  commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
  name: OctopusResourceNotFoundException
  nameWithType: OctopusResourceNotFoundException
  fullName: Octopus.Client.Exceptions.OctopusResourceNotFoundException
- uid: Octopus.Client.OctopusAsyncClient.Put*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Put
  name: Put
  nameWithType: OctopusAsyncClient.Put
  fullName: Octopus.Client.OctopusAsyncClient.Put
- uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,{TResource})
  commentId: M:Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
  name: Put<TResource>(String, TResource)
  nameWithType: IOctopusAsyncClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>(System.String, TResource)
  nameWithType.vb: IOctopusAsyncClient.Put(Of TResource)(String, TResource)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
    name: Put<TResource>
    nameWithType: IOctopusAsyncClient.Put<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
    name: Put(Of TResource)
    nameWithType: IOctopusAsyncClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
  isExternal: true
  name: Put<TResource>(String, TResource)
  nameWithType: IOctopusAsyncClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>(System.String, TResource)
  nameWithType.vb: IOctopusAsyncClient.Put(Of TResource)(String, TResource)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
    name: Put<TResource>
    nameWithType: IOctopusAsyncClient.Put<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0)
    name: Put(Of TResource)
    nameWithType: IOctopusAsyncClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Put(System.String)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Put(System.String)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: Put(String)
  nameWithType: IOctopusAsyncClient.Put(String)
  fullName: Octopus.Client.IOctopusAsyncClient.Put(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Put(System.String)
    name: Put
    nameWithType: IOctopusAsyncClient.Put
    fullName: Octopus.Client.IOctopusAsyncClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Put(System.String)
    name: Put
    nameWithType: IOctopusAsyncClient.Put
    fullName: Octopus.Client.IOctopusAsyncClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
  name: Put<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Put(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
    name: Put<TResource>
    nameWithType: IOctopusAsyncClient.Put<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
    name: Put(Of TResource)
    nameWithType: IOctopusAsyncClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
  isExternal: true
  name: Put<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Put(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
    name: Put<TResource>
    nameWithType: IOctopusAsyncClient.Put<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Put``1(System.String,``0,System.Object)
    name: Put(Of TResource)
    nameWithType: IOctopusAsyncClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Delete*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Delete
  name: Delete
  nameWithType: OctopusAsyncClient.Delete
  fullName: Octopus.Client.OctopusAsyncClient.Delete
- uid: Octopus.Client.IOctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Delete(System.String,System.Object,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: Delete(String, Object, Object)
  nameWithType: IOctopusAsyncClient.Delete(String, Object, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Delete(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Delete(System.String,System.Object,System.Object)
    name: Delete
    nameWithType: IOctopusAsyncClient.Delete
    fullName: Octopus.Client.IOctopusAsyncClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Delete(System.String,System.Object,System.Object)
    name: Delete
    nameWithType: IOctopusAsyncClient.Delete
    fullName: Octopus.Client.IOctopusAsyncClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Update*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Update
  name: Update
  nameWithType: OctopusAsyncClient.Update
  fullName: Octopus.Client.OctopusAsyncClient.Update
- uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  definition: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
  name: Update<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Update<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Update(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
    name: Update<TResource>
    nameWithType: IOctopusAsyncClient.Update<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Update<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
    name: Update(Of TResource)
    nameWithType: IOctopusAsyncClient.Update(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Update(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
  isExternal: true
  name: Update<TResource>(String, TResource, Object)
  nameWithType: IOctopusAsyncClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.Update<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusAsyncClient.Update(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusAsyncClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
    name: Update<TResource>
    nameWithType: IOctopusAsyncClient.Update<TResource>
    fullName: Octopus.Client.IOctopusAsyncClient.Update<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.Update``1(System.String,``0,System.Object)
    name: Update(Of TResource)
    nameWithType: IOctopusAsyncClient.Update(Of TResource)
    fullName: Octopus.Client.IOctopusAsyncClient.Update(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.GetContent*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.GetContent
  name: GetContent
  nameWithType: OctopusAsyncClient.GetContent
  fullName: Octopus.Client.OctopusAsyncClient.GetContent
- uid: Octopus.Client.IOctopusAsyncClient.GetContent(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.GetContent(System.String,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: GetContent(String, Object)
  nameWithType: IOctopusAsyncClient.GetContent(String, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.GetContent(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.GetContent(System.String,System.Object)
    name: GetContent
    nameWithType: IOctopusAsyncClient.GetContent
    fullName: Octopus.Client.IOctopusAsyncClient.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.GetContent(System.String,System.Object)
    name: GetContent
    nameWithType: IOctopusAsyncClient.GetContent
    fullName: Octopus.Client.IOctopusAsyncClient.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.PutContent*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.PutContent
  name: PutContent
  nameWithType: OctopusAsyncClient.PutContent
  fullName: Octopus.Client.OctopusAsyncClient.PutContent
- uid: Octopus.Client.IOctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  commentId: M:Octopus.Client.IOctopusAsyncClient.PutContent(System.String,System.IO.Stream)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: PutContent(String, Stream)
  nameWithType: IOctopusAsyncClient.PutContent(String, Stream)
  fullName: Octopus.Client.IOctopusAsyncClient.PutContent(System.String, System.IO.Stream)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.PutContent(System.String,System.IO.Stream)
    name: PutContent
    nameWithType: IOctopusAsyncClient.PutContent
    fullName: Octopus.Client.IOctopusAsyncClient.PutContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.PutContent(System.String,System.IO.Stream)
    name: PutContent
    nameWithType: IOctopusAsyncClient.PutContent
    fullName: Octopus.Client.IOctopusAsyncClient.PutContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Octopus.Client.OctopusAsyncClient.QualifyUri*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.QualifyUri
  name: QualifyUri
  nameWithType: OctopusAsyncClient.QualifyUri
  fullName: Octopus.Client.OctopusAsyncClient.QualifyUri
- uid: Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String,System.Object)
  parent: Octopus.Client.IOctopusAsyncClient
  isExternal: true
  name: QualifyUri(String, Object)
  nameWithType: IOctopusAsyncClient.QualifyUri(String, Object)
  fullName: Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String,System.Object)
    name: QualifyUri
    nameWithType: IOctopusAsyncClient.QualifyUri
    fullName: Octopus.Client.IOctopusAsyncClient.QualifyUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusAsyncClient.QualifyUri(System.String,System.Object)
    name: QualifyUri
    nameWithType: IOctopusAsyncClient.QualifyUri
    fullName: Octopus.Client.IOctopusAsyncClient.QualifyUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Octopus.Client.OctopusAsyncClient.DispatchRequest*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.DispatchRequest
  name: DispatchRequest
  nameWithType: OctopusAsyncClient.DispatchRequest
  fullName: Octopus.Client.OctopusAsyncClient.DispatchRequest
- uid: Octopus.Client.OctopusRequest
  commentId: T:Octopus.Client.OctopusRequest
  parent: Octopus.Client
  name: OctopusRequest
  nameWithType: OctopusRequest
  fullName: Octopus.Client.OctopusRequest
- uid: System.Threading.Tasks.Task{Octopus.Client.OctopusResponse{{TResponseResource}}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.OctopusResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OctopusResponse<TResponseResource>>
  nameWithType: Task<OctopusResponse<TResponseResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.OctopusResponse<TResponseResource>>
  nameWithType.vb: Task(Of OctopusResponse(Of TResponseResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.OctopusResponse(Of TResponseResource))
  name.vb: Task(Of OctopusResponse(Of TResponseResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncClient.Dispose*
  commentId: Overload:Octopus.Client.OctopusAsyncClient.Dispose
  name: Dispose
  nameWithType: OctopusAsyncClient.Dispose
  fullName: Octopus.Client.OctopusAsyncClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
