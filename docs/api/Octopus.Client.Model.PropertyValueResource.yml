### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.PropertyValueResource
  commentId: T:Octopus.Client.Model.PropertyValueResource
  id: PropertyValueResource
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.PropertyValueResource.#ctor(Octopus.Client.Model.SensitiveValue)
  - Octopus.Client.Model.PropertyValueResource.#ctor(System.String)
  - Octopus.Client.Model.PropertyValueResource.#ctor(System.String,System.Boolean)
  - Octopus.Client.Model.PropertyValueResource.IsSensitive
  - Octopus.Client.Model.PropertyValueResource.op_Implicit(System.String)~Octopus.Client.Model.PropertyValueResource
  - Octopus.Client.Model.PropertyValueResource.SensitiveValue
  - Octopus.Client.Model.PropertyValueResource.Value
  langs:
  - csharp
  - vb
  name: PropertyValueResource
  nameWithType: PropertyValueResource
  fullName: Octopus.Client.Model.PropertyValueResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PropertyValueResource
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nProperty-values can be sensitive or non-sensitive.\n"
  example: []
  syntax:
    content: public class PropertyValueResource
    content.vb: Public Class PropertyValueResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.PropertyValueResource.#ctor(System.String)
  commentId: M:Octopus.Client.Model.PropertyValueResource.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: PropertyValueResource(String)
  nameWithType: PropertyValueResource.PropertyValueResource(String)
  fullName: Octopus.Client.Model.PropertyValueResource.PropertyValueResource(System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public PropertyValueResource(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: Octopus.Client.Model.PropertyValueResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PropertyValueResource.#ctor(System.String,System.Boolean)
  commentId: M:Octopus.Client.Model.PropertyValueResource.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: PropertyValueResource(String, Boolean)
  nameWithType: PropertyValueResource.PropertyValueResource(String, Boolean)
  fullName: Octopus.Client.Model.PropertyValueResource.PropertyValueResource(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public PropertyValueResource(string value, bool isSensitive)
    parameters:
    - id: value
      type: System.String
    - id: isSensitive
      type: System.Boolean
    content.vb: Public Sub New(value As String, isSensitive As Boolean)
  overload: Octopus.Client.Model.PropertyValueResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PropertyValueResource.#ctor(Octopus.Client.Model.SensitiveValue)
  commentId: M:Octopus.Client.Model.PropertyValueResource.#ctor(Octopus.Client.Model.SensitiveValue)
  id: '#ctor(Octopus.Client.Model.SensitiveValue)'
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: PropertyValueResource(SensitiveValue)
  nameWithType: PropertyValueResource.PropertyValueResource(SensitiveValue)
  fullName: Octopus.Client.Model.PropertyValueResource.PropertyValueResource(Octopus.Client.Model.SensitiveValue)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonConstructor]

      public PropertyValueResource(SensitiveValue sensitiveValue)
    parameters:
    - id: sensitiveValue
      type: Octopus.Client.Model.SensitiveValue
    content.vb: >-
      <JsonConstructor>

      Public Sub New(sensitiveValue As SensitiveValue)
  overload: Octopus.Client.Model.PropertyValueResource.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PropertyValueResource.IsSensitive
  commentId: P:Octopus.Client.Model.PropertyValueResource.IsSensitive
  id: IsSensitive
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: IsSensitive
  nameWithType: PropertyValueResource.IsSensitive
  fullName: Octopus.Client.Model.PropertyValueResource.IsSensitive
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsSensitive
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 36
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsSensitive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSensitive As Boolean
  overload: Octopus.Client.Model.PropertyValueResource.IsSensitive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PropertyValueResource.Value
  commentId: P:Octopus.Client.Model.PropertyValueResource.Value
  id: Value
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PropertyValueResource.Value
  fullName: Octopus.Client.Model.PropertyValueResource.Value
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Value
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 38
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Octopus.Client.Model.PropertyValueResource.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PropertyValueResource.SensitiveValue
  commentId: P:Octopus.Client.Model.PropertyValueResource.SensitiveValue
  id: SensitiveValue
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: SensitiveValue
  nameWithType: PropertyValueResource.SensitiveValue
  fullName: Octopus.Client.Model.PropertyValueResource.SensitiveValue
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SensitiveValue
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 40
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public SensitiveValue SensitiveValue { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.SensitiveValue
    content.vb: Public ReadOnly Property SensitiveValue As SensitiveValue
  overload: Octopus.Client.Model.PropertyValueResource.SensitiveValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PropertyValueResource.op_Implicit(System.String)~Octopus.Client.Model.PropertyValueResource
  commentId: M:Octopus.Client.Model.PropertyValueResource.op_Implicit(System.String)~Octopus.Client.Model.PropertyValueResource
  id: op_Implicit(System.String)~Octopus.Client.Model.PropertyValueResource
  parent: Octopus.Client.Model.PropertyValueResource
  langs:
  - csharp
  - vb
  name: Implicit(String to PropertyValueResource)
  nameWithType: PropertyValueResource.Implicit(String to PropertyValueResource)
  fullName: Octopus.Client.Model.PropertyValueResource.Implicit(System.String to Octopus.Client.Model.PropertyValueResource)
  type: Operator
  source:
    remote:
      path: source/Octopus.Client/Model/PropertyValueResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: op_Implicit
    path: ../source/Octopus.Client/Model/PropertyValueResource.cs
    startLine: 42
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static implicit operator PropertyValueResource(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: Octopus.Client.Model.PropertyValueResource
    content.vb: Public Shared Widening Operator CType(value As String) As PropertyValueResource
  overload: Octopus.Client.Model.PropertyValueResource.op_Implicit*
  nameWithType.vb: PropertyValueResource.Widening(String to PropertyValueResource)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.Model.PropertyValueResource.Widening(System.String to Octopus.Client.Model.PropertyValueResource)
  name.vb: Widening(String to PropertyValueResource)
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.PropertyValueResource.#ctor*
  commentId: Overload:Octopus.Client.Model.PropertyValueResource.#ctor
  name: PropertyValueResource
  nameWithType: PropertyValueResource.PropertyValueResource
  fullName: Octopus.Client.Model.PropertyValueResource.PropertyValueResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.SensitiveValue
  commentId: T:Octopus.Client.Model.SensitiveValue
  parent: Octopus.Client.Model
  name: SensitiveValue
  nameWithType: SensitiveValue
  fullName: Octopus.Client.Model.SensitiveValue
- uid: Octopus.Client.Model.PropertyValueResource.IsSensitive*
  commentId: Overload:Octopus.Client.Model.PropertyValueResource.IsSensitive
  name: IsSensitive
  nameWithType: PropertyValueResource.IsSensitive
  fullName: Octopus.Client.Model.PropertyValueResource.IsSensitive
- uid: Octopus.Client.Model.PropertyValueResource.Value*
  commentId: Overload:Octopus.Client.Model.PropertyValueResource.Value
  name: Value
  nameWithType: PropertyValueResource.Value
  fullName: Octopus.Client.Model.PropertyValueResource.Value
- uid: Octopus.Client.Model.PropertyValueResource.SensitiveValue*
  commentId: Overload:Octopus.Client.Model.PropertyValueResource.SensitiveValue
  name: SensitiveValue
  nameWithType: PropertyValueResource.SensitiveValue
  fullName: Octopus.Client.Model.PropertyValueResource.SensitiveValue
- uid: Octopus.Client.Model.PropertyValueResource.op_Implicit*
  commentId: Overload:Octopus.Client.Model.PropertyValueResource.op_Implicit
  name: Implicit
  nameWithType: PropertyValueResource.Implicit
  fullName: Octopus.Client.Model.PropertyValueResource.Implicit
  nameWithType.vb: PropertyValueResource.Widening
  fullName.vb: Octopus.Client.Model.PropertyValueResource.Widening
  name.vb: Widening
- uid: Octopus.Client.Model.PropertyValueResource
  commentId: T:Octopus.Client.Model.PropertyValueResource
  parent: Octopus.Client.Model
  name: PropertyValueResource
  nameWithType: PropertyValueResource
  fullName: Octopus.Client.Model.PropertyValueResource
