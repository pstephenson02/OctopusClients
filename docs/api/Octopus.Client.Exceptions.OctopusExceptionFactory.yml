### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Exceptions.OctopusExceptionFactory
  commentId: T:Octopus.Client.Exceptions.OctopusExceptionFactory
  id: OctopusExceptionFactory
  parent: Octopus.Client.Exceptions
  children:
  - Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Int32,System.String)
  - Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.Http.HttpResponseMessage)
  - Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.WebException,System.Net.HttpWebResponse)
  langs:
  - csharp
  - vb
  name: OctopusExceptionFactory
  nameWithType: OctopusExceptionFactory
  fullName: Octopus.Client.Exceptions.OctopusExceptionFactory
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusExceptionFactory
    path: ../source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Exceptions
  summary: "\nFactory for mapping HTTP errors into Octopus exceptions.\n"
  example: []
  syntax:
    content: public static class OctopusExceptionFactory
    content.vb: Public Module OctopusExceptionFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.WebException,System.Net.HttpWebResponse)
  commentId: M:Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.WebException,System.Net.HttpWebResponse)
  id: CreateException(System.Net.WebException,System.Net.HttpWebResponse)
  parent: Octopus.Client.Exceptions.OctopusExceptionFactory
  langs:
  - csharp
  - vb
  name: CreateException(WebException, HttpWebResponse)
  nameWithType: OctopusExceptionFactory.CreateException(WebException, HttpWebResponse)
  fullName: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.WebException, System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateException
    path: ../source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
    startLine: 21
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Exceptions
  summary: "\nCreates the appropriate <xref href=\"Octopus.Client.Exceptions.OctopusException\" data-throw-if-not-resolved=\"false\"></xref> from a HTTP response.\n"
  example: []
  syntax:
    content: public static OctopusException CreateException(WebException webException, HttpWebResponse response)
    parameters:
    - id: webException
      type: System.Net.WebException
      description: The web exception.
    - id: response
      type: System.Net.HttpWebResponse
      description: The response.
    return:
      type: Octopus.Client.Exceptions.OctopusException
      description: A rich exception describing the problem.
    content.vb: Public Shared Function CreateException(webException As WebException, response As HttpWebResponse) As OctopusException
  overload: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.Http.HttpResponseMessage)
  commentId: M:Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.Http.HttpResponseMessage)
  id: CreateException(System.Net.Http.HttpResponseMessage)
  parent: Octopus.Client.Exceptions.OctopusExceptionFactory
  langs:
  - csharp
  - vb
  name: CreateException(HttpResponseMessage)
  nameWithType: OctopusExceptionFactory.CreateException(HttpResponseMessage)
  fullName: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Net.Http.HttpResponseMessage)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateException
    path: ../source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
    startLine: 42
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Exceptions
  summary: "\nCreates the appropriate <xref href=\"Octopus.Client.Exceptions.OctopusException\" data-throw-if-not-resolved=\"false\"></xref> from a HTTP response.\n"
  example: []
  syntax:
    content: public static Task<OctopusException> CreateException(HttpResponseMessage response)
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
      description: The response.
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Exceptions.OctopusException}
      description: A rich exception describing the problem.
    content.vb: Public Shared Function CreateException(response As HttpResponseMessage) As Task(Of OctopusException)
  overload: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Int32,System.String)
  commentId: M:Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Int32,System.String)
  id: CreateException(System.Int32,System.String)
  parent: Octopus.Client.Exceptions.OctopusExceptionFactory
  langs:
  - csharp
  - vb
  name: CreateException(Int32, String)
  nameWithType: OctopusExceptionFactory.CreateException(Int32, String)
  fullName: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateException
    path: ../source/Octopus.Client/Exceptions/OctopusExceptionFactory.cs
    startLine: 51
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Exceptions
  syntax:
    content: public static OctopusException CreateException(int statusCode, string body)
    parameters:
    - id: statusCode
      type: System.Int32
    - id: body
      type: System.String
    return:
      type: Octopus.Client.Exceptions.OctopusException
    content.vb: Public Shared Function CreateException(statusCode As Integer, body As String) As OctopusException
  overload: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Octopus.Client.Exceptions
  commentId: N:Octopus.Client.Exceptions
  name: Octopus.Client.Exceptions
  nameWithType: Octopus.Client.Exceptions
  fullName: Octopus.Client.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Exceptions.OctopusException
  commentId: T:Octopus.Client.Exceptions.OctopusException
  parent: Octopus.Client.Exceptions
  name: OctopusException
  nameWithType: OctopusException
  fullName: Octopus.Client.Exceptions.OctopusException
- uid: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException*
  commentId: Overload:Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException
  name: CreateException
  nameWithType: OctopusExceptionFactory.CreateException
  fullName: Octopus.Client.Exceptions.OctopusExceptionFactory.CreateException
- uid: System.Net.WebException
  commentId: T:System.Net.WebException
  parent: System.Net
  isExternal: true
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.Net.HttpWebResponse
  commentId: T:System.Net.HttpWebResponse
  parent: System.Net
  isExternal: true
  name: HttpWebResponse
  nameWithType: HttpWebResponse
  fullName: System.Net.HttpWebResponse
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Threading.Tasks.Task{Octopus.Client.Exceptions.OctopusException}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Exceptions.OctopusException}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OctopusException>
  nameWithType: Task<OctopusException>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Exceptions.OctopusException>
  nameWithType.vb: Task(Of OctopusException)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Exceptions.OctopusException)
  name.vb: Task(Of OctopusException)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Exceptions.OctopusException
    name: OctopusException
    nameWithType: OctopusException
    fullName: Octopus.Client.Exceptions.OctopusException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Exceptions.OctopusException
    name: OctopusException
    nameWithType: OctopusException
    fullName: Octopus.Client.Exceptions.OctopusException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
