### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository
  commentId: T:Octopus.Client.Repositories.Async.IBuildInformationRepository
  id: IBuildInformationRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource})
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.Get(System.String)
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds(System.Int32,System.Int32)
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds(System.String,System.Int32,System.Int32)
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,Octopus.Client.Model.OverwriteMode)
  - Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,System.Boolean)
  langs:
  - csharp
  - vb
  name: IBuildInformationRepository
  nameWithType: IBuildInformationRepository
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IBuildInformationRepository
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 78
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface IBuildInformationRepository
    content.vb: Public Interface IBuildInformationRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.Get(System.String)
  id: Get(System.String)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: IBuildInformationRepository.Get(String)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Get(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 80
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<OctopusPackageVersionBuildInformationMappedResource> Get(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
    content.vb: Function Get(id As String) As Task(Of OctopusPackageVersionBuildInformationMappedResource)
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.Get*
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,Octopus.Client.Model.OverwriteMode)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,Octopus.Client.Model.OverwriteMode)
  id: Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,Octopus.Client.Model.OverwriteMode)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: Push(String, String, OctopusBuildInformation, OverwriteMode)
  nameWithType: IBuildInformationRepository.Push(String, String, OctopusBuildInformation, OverwriteMode)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String, System.String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, Octopus.Client.Model.OverwriteMode)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Push
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 81
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode)
    parameters:
    - id: packageId
      type: System.String
    - id: version
      type: System.String
    - id: octopusMetadata
      type: Octopus.Client.Model.BuildInformation.OctopusBuildInformation
    - id: overwriteMode
      type: Octopus.Client.Model.OverwriteMode
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
    content.vb: Function Push(packageId As String, version As String, octopusMetadata As OctopusBuildInformation, overwriteMode As OverwriteMode) As Task(Of OctopusPackageVersionBuildInformationMappedResource)
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push*
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,System.Boolean)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,System.Boolean)
  id: Push(System.String,System.String,Octopus.Client.Model.BuildInformation.OctopusBuildInformation,System.Boolean)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: Push(String, String, OctopusBuildInformation, Boolean)
  nameWithType: IBuildInformationRepository.Push(String, String, OctopusBuildInformation, Boolean)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push(System.String, System.String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Push
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 82
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: >-
      [Obsolete]

      Task<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, bool replaceExisting)
    parameters:
    - id: packageId
      type: System.String
    - id: version
      type: System.String
    - id: octopusMetadata
      type: Octopus.Client.Model.BuildInformation.OctopusBuildInformation
    - id: replaceExisting
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
    content.vb: >-
      <Obsolete>

      Function Push(packageId As String, version As String, octopusMetadata As OctopusBuildInformation, replaceExisting As Boolean) As Task(Of OctopusPackageVersionBuildInformationMappedResource)
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds(System.String,System.Int32,System.Int32)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds(System.String,System.Int32,System.Int32)
  id: ListBuilds(System.String,System.Int32,System.Int32)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: ListBuilds(String, Int32, Int32)
  nameWithType: IBuildInformationRepository.ListBuilds(String, Int32, Int32)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ListBuilds
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 85
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(string packageId, int skip = 0, int take = 30)
    parameters:
    - id: packageId
      type: System.String
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}}
    content.vb: Function ListBuilds(packageId As String, skip As Integer = 0, take As Integer = 30) As Task(Of ResourceCollection(Of OctopusPackageVersionBuildInformationMappedResource))
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds*
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds(System.Int32,System.Int32)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds(System.Int32,System.Int32)
  id: LatestBuilds(System.Int32,System.Int32)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: LatestBuilds(Int32, Int32)
  nameWithType: IBuildInformationRepository.LatestBuilds(Int32, Int32)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LatestBuilds
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 86
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(int skip = 0, int take = 30)
    parameters:
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}}
    content.vb: Function LatestBuilds(skip As Integer = 0, take As Integer = 30) As Task(Of ResourceCollection(Of OctopusPackageVersionBuildInformationMappedResource))
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds*
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  id: Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: Delete(OctopusPackageVersionBuildInformationMappedResource)
  nameWithType: IBuildInformationRepository.Delete(OctopusPackageVersionBuildInformationMappedResource)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Delete
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 87
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation)
    parameters:
    - id: buildInformation
      type: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Delete(buildInformation As OctopusPackageVersionBuildInformationMappedResource) As Task
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete*
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource})
  commentId: M:Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource})
  id: DeleteBuilds(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource})
  parent: Octopus.Client.Repositories.Async.IBuildInformationRepository
  langs:
  - csharp
  - vb
  name: DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>)
  nameWithType: IBuildInformationRepository.DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>)
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds(System.Collections.Generic.IReadOnlyList<Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeleteBuilds
    path: ../source/Octopus.Client/Repositories/Async/BuildInformationRepository.cs
    startLine: 88
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource> builds)
    parameters:
    - id: builds
      type: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteBuilds(builds As IReadOnlyList(Of OctopusPackageVersionBuildInformationMappedResource)) As Task
  overload: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds*
  nameWithType.vb: IBuildInformationRepository.DeleteBuilds(IReadOnlyList(Of OctopusPackageVersionBuildInformationMappedResource))
  fullName.vb: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds(System.Collections.Generic.IReadOnlyList(Of Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource))
  name.vb: DeleteBuilds(IReadOnlyList(Of OctopusPackageVersionBuildInformationMappedResource))
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Get*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.Get
  name: Get
  nameWithType: IBuildInformationRepository.Get
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OctopusPackageVersionBuildInformationMappedResource>
  nameWithType: Task<OctopusPackageVersionBuildInformationMappedResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource>
  nameWithType.vb: Task(Of OctopusPackageVersionBuildInformationMappedResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  name.vb: Task(Of OctopusPackageVersionBuildInformationMappedResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.Push
  name: Push
  nameWithType: IBuildInformationRepository.Push
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Push
- uid: Octopus.Client.Model.BuildInformation.OctopusBuildInformation
  commentId: T:Octopus.Client.Model.BuildInformation.OctopusBuildInformation
  parent: Octopus.Client.Model.BuildInformation
  name: OctopusBuildInformation
  nameWithType: OctopusBuildInformation
  fullName: Octopus.Client.Model.BuildInformation.OctopusBuildInformation
- uid: Octopus.Client.Model.OverwriteMode
  commentId: T:Octopus.Client.Model.OverwriteMode
  parent: Octopus.Client.Model
  name: OverwriteMode
  nameWithType: OverwriteMode
  fullName: Octopus.Client.Model.OverwriteMode
- uid: Octopus.Client.Model.BuildInformation
  commentId: N:Octopus.Client.Model.BuildInformation
  name: Octopus.Client.Model.BuildInformation
  nameWithType: Octopus.Client.Model.BuildInformation
  fullName: Octopus.Client.Model.BuildInformation
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds
  name: ListBuilds
  nameWithType: IBuildInformationRepository.ListBuilds
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.ListBuilds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>>
  nameWithType: Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource>>
  nameWithType.vb: Task(Of ResourceCollection(Of OctopusPackageVersionBuildInformationMappedResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource))
  name.vb: Task(Of ResourceCollection(Of OctopusPackageVersionBuildInformationMappedResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds
  name: LatestBuilds
  nameWithType: IBuildInformationRepository.LatestBuilds
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.LatestBuilds
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete
  name: Delete
  nameWithType: IBuildInformationRepository.Delete
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.Delete
- uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  commentId: T:Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  parent: Octopus.Client.Model.BuildInformation
  name: OctopusPackageVersionBuildInformationMappedResource
  nameWithType: OctopusPackageVersionBuildInformationMappedResource
  fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds
  name: DeleteBuilds
  nameWithType: IBuildInformationRepository.DeleteBuilds
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository.DeleteBuilds
- uid: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
  commentId: T:System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>
  nameWithType: IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>
  fullName: System.Collections.Generic.IReadOnlyList<Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource>
  nameWithType.vb: IReadOnlyList(Of OctopusPackageVersionBuildInformationMappedResource)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
  name.vb: IReadOnlyList(Of OctopusPackageVersionBuildInformationMappedResource)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
    name: OctopusPackageVersionBuildInformationMappedResource
    nameWithType: OctopusPackageVersionBuildInformationMappedResource
    fullName: Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
