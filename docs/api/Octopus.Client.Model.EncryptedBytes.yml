### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.EncryptedBytes
  commentId: T:Octopus.Client.Model.EncryptedBytes
  id: EncryptedBytes
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.EncryptedBytes.#ctor(System.Byte[],System.Byte[])
  - Octopus.Client.Model.EncryptedBytes.Ciphertext
  - Octopus.Client.Model.EncryptedBytes.FromBase64(System.String)
  - Octopus.Client.Model.EncryptedBytes.Salt
  - Octopus.Client.Model.EncryptedBytes.ToBase64
  langs:
  - csharp
  - vb
  name: EncryptedBytes
  nameWithType: EncryptedBytes
  fullName: Octopus.Client.Model.EncryptedBytes
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EncryptedBytes
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public class EncryptedBytes
    content.vb: Public Class EncryptedBytes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.EncryptedBytes.#ctor(System.Byte[],System.Byte[])
  commentId: M:Octopus.Client.Model.EncryptedBytes.#ctor(System.Byte[],System.Byte[])
  id: '#ctor(System.Byte[],System.Byte[])'
  parent: Octopus.Client.Model.EncryptedBytes
  langs:
  - csharp
  - vb
  name: EncryptedBytes(Byte[], Byte[])
  nameWithType: EncryptedBytes.EncryptedBytes(Byte[], Byte[])
  fullName: Octopus.Client.Model.EncryptedBytes.EncryptedBytes(System.Byte[], System.Byte[])
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public EncryptedBytes(byte[] ciphertext, byte[] salt)
    parameters:
    - id: ciphertext
      type: System.Byte[]
    - id: salt
      type: System.Byte[]
    content.vb: Public Sub New(ciphertext As Byte(), salt As Byte())
  overload: Octopus.Client.Model.EncryptedBytes.#ctor*
  nameWithType.vb: EncryptedBytes.EncryptedBytes(Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.EncryptedBytes.EncryptedBytes(System.Byte(), System.Byte())
  name.vb: EncryptedBytes(Byte(), Byte())
- uid: Octopus.Client.Model.EncryptedBytes.Ciphertext
  commentId: P:Octopus.Client.Model.EncryptedBytes.Ciphertext
  id: Ciphertext
  parent: Octopus.Client.Model.EncryptedBytes
  langs:
  - csharp
  - vb
  name: Ciphertext
  nameWithType: EncryptedBytes.Ciphertext
  fullName: Octopus.Client.Model.EncryptedBytes.Ciphertext
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Ciphertext
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public byte[] Ciphertext { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Ciphertext As Byte()
  overload: Octopus.Client.Model.EncryptedBytes.Ciphertext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.EncryptedBytes.Salt
  commentId: P:Octopus.Client.Model.EncryptedBytes.Salt
  id: Salt
  parent: Octopus.Client.Model.EncryptedBytes
  langs:
  - csharp
  - vb
  name: Salt
  nameWithType: EncryptedBytes.Salt
  fullName: Octopus.Client.Model.EncryptedBytes.Salt
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Salt
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public byte[] Salt { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Salt As Byte()
  overload: Octopus.Client.Model.EncryptedBytes.Salt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.EncryptedBytes.ToBase64
  commentId: M:Octopus.Client.Model.EncryptedBytes.ToBase64
  id: ToBase64
  parent: Octopus.Client.Model.EncryptedBytes
  langs:
  - csharp
  - vb
  name: ToBase64()
  nameWithType: EncryptedBytes.ToBase64()
  fullName: Octopus.Client.Model.EncryptedBytes.ToBase64()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ToBase64
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string ToBase64()
    return:
      type: System.String
    content.vb: Public Function ToBase64 As String
  overload: Octopus.Client.Model.EncryptedBytes.ToBase64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EncryptedBytes.FromBase64(System.String)
  commentId: M:Octopus.Client.Model.EncryptedBytes.FromBase64(System.String)
  id: FromBase64(System.String)
  parent: Octopus.Client.Model.EncryptedBytes
  langs:
  - csharp
  - vb
  name: FromBase64(String)
  nameWithType: EncryptedBytes.FromBase64(String)
  fullName: Octopus.Client.Model.EncryptedBytes.FromBase64(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/EncryptedBytes.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FromBase64
    path: ../source/Octopus.Client/Model/EncryptedBytes.cs
    startLine: 35
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static EncryptedBytes FromBase64(string base64)
    parameters:
    - id: base64
      type: System.String
    return:
      type: Octopus.Client.Model.EncryptedBytes
    content.vb: Public Shared Function FromBase64(base64 As String) As EncryptedBytes
  overload: Octopus.Client.Model.EncryptedBytes.FromBase64*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.EncryptedBytes.#ctor*
  commentId: Overload:Octopus.Client.Model.EncryptedBytes.#ctor
  name: EncryptedBytes
  nameWithType: EncryptedBytes.EncryptedBytes
  fullName: Octopus.Client.Model.EncryptedBytes.EncryptedBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.EncryptedBytes.Ciphertext*
  commentId: Overload:Octopus.Client.Model.EncryptedBytes.Ciphertext
  name: Ciphertext
  nameWithType: EncryptedBytes.Ciphertext
  fullName: Octopus.Client.Model.EncryptedBytes.Ciphertext
- uid: Octopus.Client.Model.EncryptedBytes.Salt*
  commentId: Overload:Octopus.Client.Model.EncryptedBytes.Salt
  name: Salt
  nameWithType: EncryptedBytes.Salt
  fullName: Octopus.Client.Model.EncryptedBytes.Salt
- uid: Octopus.Client.Model.EncryptedBytes.ToBase64*
  commentId: Overload:Octopus.Client.Model.EncryptedBytes.ToBase64
  name: ToBase64
  nameWithType: EncryptedBytes.ToBase64
  fullName: Octopus.Client.Model.EncryptedBytes.ToBase64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.EncryptedBytes.FromBase64*
  commentId: Overload:Octopus.Client.Model.EncryptedBytes.FromBase64
  name: FromBase64
  nameWithType: EncryptedBytes.FromBase64
  fullName: Octopus.Client.Model.EncryptedBytes.FromBase64
- uid: Octopus.Client.Model.EncryptedBytes
  commentId: T:Octopus.Client.Model.EncryptedBytes
  parent: Octopus.Client.Model
  name: EncryptedBytes
  nameWithType: EncryptedBytes
  fullName: Octopus.Client.Model.EncryptedBytes
