### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.ITagSetRepository
  commentId: T:Octopus.Client.Repositories.ITagSetRepository
  id: ITagSetRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String)
  - Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String,System.String)
  - Octopus.Client.Repositories.ITagSetRepository.Sort(System.String[])
  langs:
  - csharp
  - vb
  name: ITagSetRepository
  nameWithType: ITagSetRepository
  fullName: Octopus.Client.Repositories.ITagSetRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/TagSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ITagSetRepository
    path: ../source/Octopus.Client/Repositories/TagSetRepository.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface ITagSetRepository : ICreate<TagSetResource>, IModify<TagSetResource>, IGet<TagSetResource>, IDelete<TagSetResource>, IFindByName<TagSetResource>, IPaginate<TagSetResource>, IGetAll<TagSetResource>'
    content.vb: >-
      Public Interface ITagSetRepository
          Inherits ICreate(Of TagSetResource), IModify(Of TagSetResource), IGet(Of TagSetResource), IDelete(Of TagSetResource), IFindByName(Of TagSetResource), IGetAll(Of TagSetResource)
  inheritedMembers:
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}.Create(Octopus.Client.Model.TagSetResource,System.Object)
  - Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}.Modify(Octopus.Client.Model.TagSetResource)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Refresh(Octopus.Client.Model.TagSetResource)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}.Delete(Octopus.Client.Model.TagSetResource)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByName(System.String,System.String,System.Object)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.TagSetResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindOne(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindMany(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}.GetAll
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.ITagSetRepository.Sort(System.String[])
  commentId: M:Octopus.Client.Repositories.ITagSetRepository.Sort(System.String[])
  id: Sort(System.String[])
  parent: Octopus.Client.Repositories.ITagSetRepository
  langs:
  - csharp
  - vb
  name: Sort(String[])
  nameWithType: ITagSetRepository.Sort(String[])
  fullName: Octopus.Client.Repositories.ITagSetRepository.Sort(System.String[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/TagSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Sort
    path: ../source/Octopus.Client/Repositories/TagSetRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: void Sort(string[] tagSetIdsInOrder)
    parameters:
    - id: tagSetIdsInOrder
      type: System.String[]
    content.vb: Sub Sort(tagSetIdsInOrder As String())
  overload: Octopus.Client.Repositories.ITagSetRepository.Sort*
  nameWithType.vb: ITagSetRepository.Sort(String())
  fullName.vb: Octopus.Client.Repositories.ITagSetRepository.Sort(System.String())
  name.vb: Sort(String())
- uid: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String)
  commentId: M:Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String)
  id: CreateOrModify(System.String)
  parent: Octopus.Client.Repositories.ITagSetRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String)
  nameWithType: ITagSetRepository.CreateOrModify(String)
  fullName: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/TagSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/TagSetRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: TagSetEditor CreateOrModify(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Octopus.Client.Editors.TagSetEditor
    content.vb: Function CreateOrModify(name As String) As TagSetEditor
  overload: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify*
- uid: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String,System.String)
  commentId: M:Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String,System.String)
  id: CreateOrModify(System.String,System.String)
  parent: Octopus.Client.Repositories.ITagSetRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, String)
  nameWithType: ITagSetRepository.CreateOrModify(String, String)
  fullName: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/TagSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/TagSetRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: TagSetEditor CreateOrModify(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: Octopus.Client.Editors.TagSetEditor
    content.vb: Function CreateOrModify(name As String, description As String) As TagSetEditor
  overload: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify*
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}.Create(Octopus.Client.Model.TagSetResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}.Create(Octopus.Client.Model.TagSetResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(TagSetResource, Object)
  nameWithType: ICreate<TagSetResource>.Create(TagSetResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.TagSetResource>.Create(Octopus.Client.Model.TagSetResource, System.Object)
  nameWithType.vb: ICreate(Of TagSetResource).Create(TagSetResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.TagSetResource).Create(Octopus.Client.Model.TagSetResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TagSetResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.TagSetResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TagSetResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.TagSetResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}.Modify(Octopus.Client.Model.TagSetResource)
  commentId: M:Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}.Modify(Octopus.Client.Model.TagSetResource)
  parent: Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TagSetResource)
  nameWithType: IModify<TagSetResource>.Modify(TagSetResource)
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.TagSetResource>.Modify(Octopus.Client.Model.TagSetResource)
  nameWithType.vb: IModify(Of TagSetResource).Modify(TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.TagSetResource).Modify(Octopus.Client.Model.TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TagSetResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.TagSetResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TagSetResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.TagSetResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<TagSetResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Get(System.String)
  nameWithType.vb: IGet(Of TagSetResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TagSetResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TagSetResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<TagSetResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TagSetResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TagSetResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TagSetResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Refresh(Octopus.Client.Model.TagSetResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}.Refresh(Octopus.Client.Model.TagSetResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TagSetResource)
  nameWithType: IGet<TagSetResource>.Refresh(TagSetResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Refresh(Octopus.Client.Model.TagSetResource)
  nameWithType.vb: IGet(Of TagSetResource).Refresh(TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Refresh(Octopus.Client.Model.TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TagSetResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TagSetResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}.Delete(Octopus.Client.Model.TagSetResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}.Delete(Octopus.Client.Model.TagSetResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TagSetResource)
  nameWithType: IDelete<TagSetResource>.Delete(TagSetResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.TagSetResource>.Delete(Octopus.Client.Model.TagSetResource)
  nameWithType.vb: IDelete(Of TagSetResource).Delete(TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.TagSetResource).Delete(Octopus.Client.Model.TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TagSetResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.TagSetResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TagSetResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.TagSetResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByName(System.String,System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TagSetResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.TagSetResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TagSetResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.TagSetResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TagSetResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.TagSetResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TagSetResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.TagSetResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TagSetResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.TagSetResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TagSetResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.TagSetResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TagSetResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.TagSetResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TagSetResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.TagSetResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.TagSetResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.TagSetResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<TagSetResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TagSetResource>.Paginate(Func<ResourceCollection<TagSetResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.TagSetResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TagSetResource).Paginate(Func(Of ResourceCollection(Of TagSetResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.TagSetResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TagSetResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TagSetResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TagSetResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindOne(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindOne(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<TagSetResource, Boolean>, String, Object)
  nameWithType: IPaginate<TagSetResource>.FindOne(Func<TagSetResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindOne(System.Func<Octopus.Client.Model.TagSetResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TagSetResource).FindOne(Func(Of TagSetResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindOne(System.Func(Of Octopus.Client.Model.TagSetResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TagSetResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TagSetResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TagSetResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindMany(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindMany(System.Func{Octopus.Client.Model.TagSetResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<TagSetResource, Boolean>, String, Object)
  nameWithType: IPaginate<TagSetResource>.FindMany(Func<TagSetResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindMany(System.Func<Octopus.Client.Model.TagSetResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TagSetResource).FindMany(Func(Of TagSetResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindMany(System.Func(Of Octopus.Client.Model.TagSetResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TagSetResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TagSetResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TagSetResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<TagSetResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TagSetResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TagSetResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TagSetResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}.GetAll
  commentId: M:Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}.GetAll
  parent: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}
  definition: Octopus.Client.Repositories.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<TagSetResource>.GetAll()
  fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.TagSetResource>.GetAll()
  nameWithType.vb: IGetAll(Of TagSetResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.TagSetResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<TagSetResource>.GetAll
    fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.TagSetResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of TagSetResource).GetAll
    fullName: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.TagSetResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<TagSetResource>
  nameWithType: ICreate<TagSetResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: ICreate(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.TagSetResource)
  name.vb: ICreate(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IModify{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IModify`1
  name: IModify<TagSetResource>
  nameWithType: IModify<TagSetResource>
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IModify(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.TagSetResource)
  name.vb: IModify(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<TagSetResource>
  nameWithType: IGet<TagSetResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IGet(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.TagSetResource)
  name.vb: IGet(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<TagSetResource>
  nameWithType: IDelete<TagSetResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IDelete(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.TagSetResource)
  name.vb: IDelete(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  isExternal: true
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TagSetResource>
  nameWithType: IFindByName<TagSetResource>
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IFindByName(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.TagSetResource)
  name.vb: IFindByName(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  isExternal: true
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TagSetResource>
  nameWithType: IPaginate<TagSetResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IPaginate(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.TagSetResource)
  name.vb: IPaginate(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll`1.GetAll
  commentId: M:Octopus.Client.Repositories.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<TResource>.GetAll()
  fullName: Octopus.Client.Repositories.IGetAll<TResource>.GetAll()
  nameWithType.vb: IGetAll(Of TResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of TResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<TResource>.GetAll
    fullName: Octopus.Client.Repositories.IGetAll<TResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of TResource).GetAll
    fullName: Octopus.Client.Repositories.IGetAll(Of TResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}
  commentId: T:Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.TagSetResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGetAll`1
  name: IGetAll<TagSetResource>
  nameWithType: IGetAll<TagSetResource>
  fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.TagSetResource>
  nameWithType.vb: IGetAll(Of TagSetResource)
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.TagSetResource)
  name.vb: IGetAll(Of TagSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TagSetResource
    name: TagSetResource
    nameWithType: TagSetResource
    fullName: Octopus.Client.Model.TagSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1
  commentId: T:Octopus.Client.Repositories.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1
  commentId: T:Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TResource>
  nameWithType: IFindByName<TResource>
  fullName: Octopus.Client.Repositories.IFindByName<TResource>
  nameWithType.vb: IFindByName(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource)
  name.vb: IFindByName(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll`1
  commentId: T:Octopus.Client.Repositories.IGetAll`1
  name: IGetAll<TResource>
  nameWithType: IGetAll<TResource>
  fullName: Octopus.Client.Repositories.IGetAll<TResource>
  nameWithType.vb: IGetAll(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of TResource)
  name.vb: IGetAll(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ITagSetRepository.Sort*
  commentId: Overload:Octopus.Client.Repositories.ITagSetRepository.Sort
  name: Sort
  nameWithType: ITagSetRepository.Sort
  fullName: Octopus.Client.Repositories.ITagSetRepository.Sort
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify*
  commentId: Overload:Octopus.Client.Repositories.ITagSetRepository.CreateOrModify
  name: CreateOrModify
  nameWithType: ITagSetRepository.CreateOrModify
  fullName: Octopus.Client.Repositories.ITagSetRepository.CreateOrModify
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Editors.TagSetEditor
  commentId: T:Octopus.Client.Editors.TagSetEditor
  parent: Octopus.Client.Editors
  name: TagSetEditor
  nameWithType: TagSetEditor
  fullName: Octopus.Client.Editors.TagSetEditor
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors
  commentId: N:Octopus.Client.Editors
  name: Octopus.Client.Editors
  nameWithType: Octopus.Client.Editors
  fullName: Octopus.Client.Editors
