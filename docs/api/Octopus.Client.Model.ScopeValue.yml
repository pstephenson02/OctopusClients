### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.ScopeValue
  commentId: T:Octopus.Client.Model.ScopeValue
  id: ScopeValue
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.ScopeValue.#ctor
  - Octopus.Client.Model.ScopeValue.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - Octopus.Client.Model.ScopeValue.#ctor(System.String)
  - Octopus.Client.Model.ScopeValue.#ctor(System.String,System.String[])
  - Octopus.Client.Model.ScopeValue.op_Implicit(System.String)~Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: ScopeValue
  nameWithType: ScopeValue
  fullName: Octopus.Client.Model.ScopeValue
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ScopeValue
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class ScopeValue : ReferenceCollection, ISerializable, IDeserializationCallback, ISet<string>, ICollection<string>, IEnumerable<string>, IEnumerable'
    content.vb: >-
      Public Class ScopeValue
          Inherits ReferenceCollection
          Implements ISerializable, IDeserializationCallback, ISet(Of String), ICollection(Of String), IEnumerable(Of String), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.HashSet{System.String}
  - Octopus.Client.Model.ReferenceCollection
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Collections.Generic.ISet{System.String}
  - System.Collections.Generic.ICollection{System.String}
  - System.Collections.Generic.IEnumerable{System.String}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable{System.String})
  - Octopus.Client.Model.ReferenceCollection.Clone
  - Octopus.Client.Model.ReferenceCollection.ToString
  - Octopus.Client.Model.ReferenceCollection.One(System.String)
  - System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#Add(System.String)
  - System.Collections.Generic.HashSet{System.String}.Clear
  - System.Collections.Generic.HashSet{System.String}.Contains(System.String)
  - System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32)
  - System.Collections.Generic.HashSet{System.String}.Remove(System.String)
  - System.Collections.Generic.HashSet{System.String}.GetEnumerator
  - System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.HashSet{System.String}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.HashSet{System.String}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.HashSet{System.String}.OnDeserialization(System.Object)
  - System.Collections.Generic.HashSet{System.String}.Add(System.String)
  - System.Collections.Generic.HashSet{System.String}.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.IntersectWith(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.ExceptWith(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.IsSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.IsSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.Overlaps(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.SetEquals(System.Collections.Generic.IEnumerable{System.String})
  - System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[])
  - System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32,System.Int32)
  - System.Collections.Generic.HashSet{System.String}.RemoveWhere(System.Predicate{System.String})
  - System.Collections.Generic.HashSet{System.String}.TrimExcess
  - System.Collections.Generic.HashSet{System.String}.CreateSetComparer
  - System.Collections.Generic.HashSet{System.String}.Count
  - System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.HashSet{System.String}.Comparer
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.CommaSeperate
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.ScopeValue.#ctor
  commentId: M:Octopus.Client.Model.ScopeValue.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: ScopeValue()
  nameWithType: ScopeValue.ScopeValue()
  fullName: Octopus.Client.Model.ScopeValue.ScopeValue()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [Obsolete("For serialization only")]

      public ScopeValue()
    content.vb: >-
      <Obsolete("For serialization only")>

      Public Sub New
  overload: Octopus.Client.Model.ScopeValue.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: For serialization only
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.ScopeValue.#ctor(System.String)
  commentId: M:Octopus.Client.Model.ScopeValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: ScopeValue(String)
  nameWithType: ScopeValue.ScopeValue(String)
  fullName: Octopus.Client.Model.ScopeValue.ScopeValue(System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ScopeValue(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: Octopus.Client.Model.ScopeValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.ScopeValue.#ctor(System.String,System.String[])
  commentId: M:Octopus.Client.Model.ScopeValue.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: ScopeValue(String, String[])
  nameWithType: ScopeValue.ScopeValue(String, String[])
  fullName: Octopus.Client.Model.ScopeValue.ScopeValue(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ScopeValue(string value, params string[] additionalValues)
    parameters:
    - id: value
      type: System.String
    - id: additionalValues
      type: System.String[]
    content.vb: Public Sub New(value As String, ParamArray additionalValues As String())
  overload: Octopus.Client.Model.ScopeValue.#ctor*
  nameWithType.vb: ScopeValue.ScopeValue(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ScopeValue.ScopeValue(System.String, System.String())
  name.vb: ScopeValue(String, String())
- uid: Octopus.Client.Model.ScopeValue.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Octopus.Client.Model.ScopeValue.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: ScopeValue(IEnumerable<String>)
  nameWithType: ScopeValue.ScopeValue(IEnumerable<String>)
  fullName: Octopus.Client.Model.ScopeValue.ScopeValue(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ScopeValue(IEnumerable<string> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Sub New(items As IEnumerable(Of String))
  overload: Octopus.Client.Model.ScopeValue.#ctor*
  nameWithType.vb: ScopeValue.ScopeValue(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ScopeValue.ScopeValue(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ScopeValue(IEnumerable(Of String))
- uid: Octopus.Client.Model.ScopeValue.op_Implicit(System.String)~Octopus.Client.Model.ScopeValue
  commentId: M:Octopus.Client.Model.ScopeValue.op_Implicit(System.String)~Octopus.Client.Model.ScopeValue
  id: op_Implicit(System.String)~Octopus.Client.Model.ScopeValue
  parent: Octopus.Client.Model.ScopeValue
  langs:
  - csharp
  - vb
  name: Implicit(String to ScopeValue)
  nameWithType: ScopeValue.Implicit(String to ScopeValue)
  fullName: Octopus.Client.Model.ScopeValue.Implicit(System.String to Octopus.Client.Model.ScopeValue)
  type: Operator
  source:
    remote:
      path: source/Octopus.Client/Model/ScopeValue.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: op_Implicit
    path: ../source/Octopus.Client/Model/ScopeValue.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static implicit operator ScopeValue(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: Octopus.Client.Model.ScopeValue
    content.vb: Public Shared Widening Operator CType(value As String) As ScopeValue
  overload: Octopus.Client.Model.ScopeValue.op_Implicit*
  nameWithType.vb: ScopeValue.Widening(String to ScopeValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.Model.ScopeValue.Widening(System.String to Octopus.Client.Model.ScopeValue)
  name.vb: Widening(String to ScopeValue)
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ReferenceCollection
  commentId: T:Octopus.Client.Model.ReferenceCollection
  parent: Octopus.Client.Model
  name: ReferenceCollection
  nameWithType: ReferenceCollection
  fullName: Octopus.Client.Model.ReferenceCollection
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullName.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable{System.String})
  parent: Octopus.Client.Model.ReferenceCollection
  isExternal: true
  name: ReplaceAll(IEnumerable<String>)
  nameWithType: ReferenceCollection.ReplaceAll(IEnumerable<String>)
  fullName: Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: ReferenceCollection.ReplaceAll(IEnumerable(Of String))
  fullName.vb: Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ReplaceAll(IEnumerable(Of String))
  spec.csharp:
  - uid: Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable{System.String})
    name: ReplaceAll
    nameWithType: ReferenceCollection.ReplaceAll
    fullName: Octopus.Client.Model.ReferenceCollection.ReplaceAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.ReferenceCollection.ReplaceAll(System.Collections.Generic.IEnumerable{System.String})
    name: ReplaceAll
    nameWithType: ReferenceCollection.ReplaceAll
    fullName: Octopus.Client.Model.ReferenceCollection.ReplaceAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ReferenceCollection.Clone
  commentId: M:Octopus.Client.Model.ReferenceCollection.Clone
  parent: Octopus.Client.Model.ReferenceCollection
  name: Clone()
  nameWithType: ReferenceCollection.Clone()
  fullName: Octopus.Client.Model.ReferenceCollection.Clone()
  spec.csharp:
  - uid: Octopus.Client.Model.ReferenceCollection.Clone
    name: Clone
    nameWithType: ReferenceCollection.Clone
    fullName: Octopus.Client.Model.ReferenceCollection.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.ReferenceCollection.Clone
    name: Clone
    nameWithType: ReferenceCollection.Clone
    fullName: Octopus.Client.Model.ReferenceCollection.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ReferenceCollection.ToString
  commentId: M:Octopus.Client.Model.ReferenceCollection.ToString
  parent: Octopus.Client.Model.ReferenceCollection
  name: ToString()
  nameWithType: ReferenceCollection.ToString()
  fullName: Octopus.Client.Model.ReferenceCollection.ToString()
  spec.csharp:
  - uid: Octopus.Client.Model.ReferenceCollection.ToString
    name: ToString
    nameWithType: ReferenceCollection.ToString
    fullName: Octopus.Client.Model.ReferenceCollection.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.ReferenceCollection.ToString
    name: ToString
    nameWithType: ReferenceCollection.ToString
    fullName: Octopus.Client.Model.ReferenceCollection.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ReferenceCollection.One(System.String)
  commentId: M:Octopus.Client.Model.ReferenceCollection.One(System.String)
  parent: Octopus.Client.Model.ReferenceCollection
  isExternal: true
  name: One(String)
  nameWithType: ReferenceCollection.One(String)
  fullName: Octopus.Client.Model.ReferenceCollection.One(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.ReferenceCollection.One(System.String)
    name: One
    nameWithType: ReferenceCollection.One
    fullName: Octopus.Client.Model.ReferenceCollection.One
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.ReferenceCollection.One(System.String)
    name: One
    nameWithType: ReferenceCollection.One
    fullName: Octopus.Client.Model.ReferenceCollection.One
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#Add(System.String)
  commentId: M:System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#Add(System.String)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<String>.Add(String)
  nameWithType: HashSet<String>.ICollection<String>.Add(String)
  fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.Generic.ICollection<System.String>.Add(System.String)
  nameWithType.vb: HashSet(Of String).System.Collections.Generic.ICollection<T>.Add(String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).System.Collections.Generic.ICollection<T>.Add(System.String)
  name.vb: System.Collections.Generic.ICollection<T>.Add(String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<String>.Add
    nameWithType: HashSet<String>.ICollection<String>.Add
    fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.Generic.ICollection<System.String>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: HashSet(Of String).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.Generic.HashSet(Of System.String).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Clear
  commentId: M:System.Collections.Generic.HashSet{System.String}.Clear
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Clear
  name: Clear()
  nameWithType: HashSet<String>.Clear()
  fullName: System.Collections.Generic.HashSet<System.String>.Clear()
  nameWithType.vb: HashSet(Of String).Clear()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Clear
    name: Clear
    nameWithType: HashSet<String>.Clear
    fullName: System.Collections.Generic.HashSet<System.String>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Clear
    name: Clear
    nameWithType: HashSet(Of String).Clear
    fullName: System.Collections.Generic.HashSet(Of System.String).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Contains(System.String)
  commentId: M:System.Collections.Generic.HashSet{System.String}.Contains(System.String)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Contains(`0)
  name: Contains(String)
  nameWithType: HashSet<String>.Contains(String)
  fullName: System.Collections.Generic.HashSet<System.String>.Contains(System.String)
  nameWithType.vb: HashSet(Of String).Contains(String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Contains(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Contains(`0)
    name: Contains
    nameWithType: HashSet<String>.Contains
    fullName: System.Collections.Generic.HashSet<System.String>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Contains(`0)
    name: Contains
    nameWithType: HashSet(Of String).Contains
    fullName: System.Collections.Generic.HashSet(Of System.String).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32)
  commentId: M:System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  name: CopyTo(String[], Int32)
  nameWithType: HashSet<String>.CopyTo(String[], Int32)
  fullName: System.Collections.Generic.HashSet<System.String>.CopyTo(System.String[], System.Int32)
  nameWithType.vb: HashSet(Of String).CopyTo(String(), Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).CopyTo(System.String(), System.Int32)
  name.vb: CopyTo(String(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HashSet<String>.CopyTo
    fullName: System.Collections.Generic.HashSet<System.String>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HashSet(Of String).CopyTo
    fullName: System.Collections.Generic.HashSet(Of System.String).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Remove(System.String)
  commentId: M:System.Collections.Generic.HashSet{System.String}.Remove(System.String)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Remove(`0)
  name: Remove(String)
  nameWithType: HashSet<String>.Remove(String)
  fullName: System.Collections.Generic.HashSet<System.String>.Remove(System.String)
  nameWithType.vb: HashSet(Of String).Remove(String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Remove(`0)
    name: Remove
    nameWithType: HashSet<String>.Remove
    fullName: System.Collections.Generic.HashSet<System.String>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Remove(`0)
    name: Remove
    nameWithType: HashSet(Of String).Remove
    fullName: System.Collections.Generic.HashSet(Of System.String).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.GetEnumerator
  commentId: M:System.Collections.Generic.HashSet{System.String}.GetEnumerator
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: HashSet<String>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<System.String>.GetEnumerator()
  nameWithType.vb: HashSet(Of String).GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HashSet<String>.GetEnumerator
    fullName: System.Collections.Generic.HashSet<System.String>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HashSet(Of String).GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of System.String).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<String>.GetEnumerator()
  nameWithType: HashSet<String>.IEnumerable<String>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
  nameWithType.vb: HashSet(Of String).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<String>.GetEnumerator
    nameWithType: HashSet<String>.IEnumerable<String>.GetEnumerator
    fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: HashSet(Of String).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of System.String).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet{System.String}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: HashSet<String>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: HashSet(Of String).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: HashSet<String>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: HashSet(Of String).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of System.String).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.HashSet{System.String}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HashSet<String>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.HashSet<System.String>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: HashSet(Of String).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: HashSet<String>.GetObjectData
    fullName: System.Collections.Generic.HashSet<System.String>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: HashSet(Of String).GetObjectData
    fullName: System.Collections.Generic.HashSet(Of System.String).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.HashSet{System.String}.OnDeserialization(System.Object)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  name: OnDeserialization(Object)
  nameWithType: HashSet<String>.OnDeserialization(Object)
  fullName: System.Collections.Generic.HashSet<System.String>.OnDeserialization(System.Object)
  nameWithType.vb: HashSet(Of String).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: HashSet<String>.OnDeserialization
    fullName: System.Collections.Generic.HashSet<System.String>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: HashSet(Of String).OnDeserialization
    fullName: System.Collections.Generic.HashSet(Of System.String).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Add(System.String)
  commentId: M:System.Collections.Generic.HashSet{System.String}.Add(System.String)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Add(`0)
  name: Add(String)
  nameWithType: HashSet<String>.Add(String)
  fullName: System.Collections.Generic.HashSet<System.String>.Add(System.String)
  nameWithType.vb: HashSet(Of String).Add(String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Add(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Add(`0)
    name: Add
    nameWithType: HashSet<String>.Add
    fullName: System.Collections.Generic.HashSet<System.String>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Add(`0)
    name: Add
    nameWithType: HashSet(Of String).Add
    fullName: System.Collections.Generic.HashSet(Of System.String).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  name: UnionWith(IEnumerable<String>)
  nameWithType: HashSet<String>.UnionWith(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.UnionWith(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).UnionWith(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).UnionWith(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: UnionWith(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: HashSet<String>.UnionWith
    fullName: System.Collections.Generic.HashSet<System.String>.UnionWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: HashSet(Of String).UnionWith
    fullName: System.Collections.Generic.HashSet(Of System.String).UnionWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.IntersectWith(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.IntersectWith(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  name: IntersectWith(IEnumerable<String>)
  nameWithType: HashSet<String>.IntersectWith(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.IntersectWith(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).IntersectWith(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).IntersectWith(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IntersectWith(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: HashSet<String>.IntersectWith
    fullName: System.Collections.Generic.HashSet<System.String>.IntersectWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: HashSet(Of String).IntersectWith
    fullName: System.Collections.Generic.HashSet(Of System.String).IntersectWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.ExceptWith(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.ExceptWith(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  name: ExceptWith(IEnumerable<String>)
  nameWithType: HashSet<String>.ExceptWith(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.ExceptWith(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).ExceptWith(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).ExceptWith(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ExceptWith(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: HashSet<String>.ExceptWith
    fullName: System.Collections.Generic.HashSet<System.String>.ExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: HashSet(Of String).ExceptWith
    fullName: System.Collections.Generic.HashSet(Of System.String).ExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  name: SymmetricExceptWith(IEnumerable<String>)
  nameWithType: HashSet<String>.SymmetricExceptWith(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).SymmetricExceptWith(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SymmetricExceptWith(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: HashSet<String>.SymmetricExceptWith
    fullName: System.Collections.Generic.HashSet<System.String>.SymmetricExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: HashSet(Of String).SymmetricExceptWith
    fullName: System.Collections.Generic.HashSet(Of System.String).SymmetricExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.IsSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.IsSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsSubsetOf(IEnumerable<String>)
  nameWithType: HashSet<String>.IsSubsetOf(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.IsSubsetOf(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).IsSubsetOf(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).IsSubsetOf(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsSubsetOf(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: HashSet<String>.IsSubsetOf
    fullName: System.Collections.Generic.HashSet<System.String>.IsSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: HashSet(Of String).IsSubsetOf
    fullName: System.Collections.Generic.HashSet(Of System.String).IsSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsProperSubsetOf(IEnumerable<String>)
  nameWithType: HashSet<String>.IsProperSubsetOf(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).IsProperSubsetOf(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsProperSubsetOf(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: HashSet<String>.IsProperSubsetOf
    fullName: System.Collections.Generic.HashSet<System.String>.IsProperSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: HashSet(Of String).IsProperSubsetOf
    fullName: System.Collections.Generic.HashSet(Of System.String).IsProperSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.IsSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.IsSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsSupersetOf(IEnumerable<String>)
  nameWithType: HashSet<String>.IsSupersetOf(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.IsSupersetOf(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).IsSupersetOf(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).IsSupersetOf(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsSupersetOf(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: HashSet<String>.IsSupersetOf
    fullName: System.Collections.Generic.HashSet<System.String>.IsSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: HashSet(Of String).IsSupersetOf
    fullName: System.Collections.Generic.HashSet(Of System.String).IsSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  name: IsProperSupersetOf(IEnumerable<String>)
  nameWithType: HashSet<String>.IsProperSupersetOf(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).IsProperSupersetOf(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsProperSupersetOf(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: HashSet<String>.IsProperSupersetOf
    fullName: System.Collections.Generic.HashSet<System.String>.IsProperSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: HashSet(Of String).IsProperSupersetOf
    fullName: System.Collections.Generic.HashSet(Of System.String).IsProperSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Overlaps(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.Overlaps(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  name: Overlaps(IEnumerable<String>)
  nameWithType: HashSet<String>.Overlaps(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.Overlaps(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).Overlaps(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Overlaps(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Overlaps(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: HashSet<String>.Overlaps
    fullName: System.Collections.Generic.HashSet<System.String>.Overlaps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: HashSet(Of String).Overlaps
    fullName: System.Collections.Generic.HashSet(Of System.String).Overlaps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.SetEquals(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.SetEquals(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  name: SetEquals(IEnumerable<String>)
  nameWithType: HashSet<String>.SetEquals(IEnumerable<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.SetEquals(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: HashSet(Of String).SetEquals(IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).SetEquals(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SetEquals(IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: HashSet<String>.SetEquals
    fullName: System.Collections.Generic.HashSet<System.String>.SetEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: HashSet(Of String).SetEquals
    fullName: System.Collections.Generic.HashSet(Of System.String).SetEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[])
  commentId: M:System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[])
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  name: CopyTo(String[])
  nameWithType: HashSet<String>.CopyTo(String[])
  fullName: System.Collections.Generic.HashSet<System.String>.CopyTo(System.String[])
  nameWithType.vb: HashSet(Of String).CopyTo(String())
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).CopyTo(System.String())
  name.vb: CopyTo(String())
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: HashSet<String>.CopyTo
    fullName: System.Collections.Generic.HashSet<System.String>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: HashSet(Of String).CopyTo
    fullName: System.Collections.Generic.HashSet(Of System.String).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.HashSet{System.String}.CopyTo(System.String[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  name: CopyTo(String[], Int32, Int32)
  nameWithType: HashSet<String>.CopyTo(String[], Int32, Int32)
  fullName: System.Collections.Generic.HashSet<System.String>.CopyTo(System.String[], System.Int32, System.Int32)
  nameWithType.vb: HashSet(Of String).CopyTo(String(), Int32, Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).CopyTo(System.String(), System.Int32, System.Int32)
  name.vb: CopyTo(String(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: HashSet<String>.CopyTo
    fullName: System.Collections.Generic.HashSet<System.String>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: HashSet(Of String).CopyTo
    fullName: System.Collections.Generic.HashSet(Of System.String).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.RemoveWhere(System.Predicate{System.String})
  commentId: M:System.Collections.Generic.HashSet{System.String}.RemoveWhere(System.Predicate{System.String})
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  name: RemoveWhere(Predicate<String>)
  nameWithType: HashSet<String>.RemoveWhere(Predicate<String>)
  fullName: System.Collections.Generic.HashSet<System.String>.RemoveWhere(System.Predicate<System.String>)
  nameWithType.vb: HashSet(Of String).RemoveWhere(Predicate(Of String))
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).RemoveWhere(System.Predicate(Of System.String))
  name.vb: RemoveWhere(Predicate(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
    name: RemoveWhere
    nameWithType: HashSet<String>.RemoveWhere
    fullName: System.Collections.Generic.HashSet<System.String>.RemoveWhere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
    name: RemoveWhere
    nameWithType: HashSet(Of String).RemoveWhere
    fullName: System.Collections.Generic.HashSet(Of System.String).RemoveWhere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.TrimExcess
  commentId: M:System.Collections.Generic.HashSet{System.String}.TrimExcess
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.TrimExcess
  name: TrimExcess()
  nameWithType: HashSet<String>.TrimExcess()
  fullName: System.Collections.Generic.HashSet<System.String>.TrimExcess()
  nameWithType.vb: HashSet(Of String).TrimExcess()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.TrimExcess
    name: TrimExcess
    nameWithType: HashSet<String>.TrimExcess
    fullName: System.Collections.Generic.HashSet<System.String>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.TrimExcess
    name: TrimExcess
    nameWithType: HashSet(Of String).TrimExcess
    fullName: System.Collections.Generic.HashSet(Of System.String).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.CreateSetComparer
  commentId: M:System.Collections.Generic.HashSet{System.String}.CreateSetComparer
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.CreateSetComparer
  name: CreateSetComparer()
  nameWithType: HashSet<String>.CreateSetComparer()
  fullName: System.Collections.Generic.HashSet<System.String>.CreateSetComparer()
  nameWithType.vb: HashSet(Of String).CreateSetComparer()
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).CreateSetComparer()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CreateSetComparer
    name: CreateSetComparer
    nameWithType: HashSet<String>.CreateSetComparer
    fullName: System.Collections.Generic.HashSet<System.String>.CreateSetComparer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CreateSetComparer
    name: CreateSetComparer
    nameWithType: HashSet(Of String).CreateSetComparer
    fullName: System.Collections.Generic.HashSet(Of System.String).CreateSetComparer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{System.String}.Count
  commentId: P:System.Collections.Generic.HashSet{System.String}.Count
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Count
  name: Count
  nameWithType: HashSet<String>.Count
  fullName: System.Collections.Generic.HashSet<System.String>.Count
  nameWithType.vb: HashSet(Of String).Count
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Count
- uid: System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.HashSet{System.String}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<String>.IsReadOnly
  nameWithType: HashSet<String>.ICollection<String>.IsReadOnly
  fullName: System.Collections.Generic.HashSet<System.String>.System.Collections.Generic.ICollection<System.String>.IsReadOnly
  nameWithType.vb: HashSet(Of String).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.HashSet{System.String}.Comparer
  commentId: P:System.Collections.Generic.HashSet{System.String}.Comparer
  parent: System.Collections.Generic.HashSet{System.String}
  definition: System.Collections.Generic.HashSet`1.Comparer
  name: Comparer
  nameWithType: HashSet<String>.Comparer
  fullName: System.Collections.Generic.HashSet<System.String>.Comparer
  nameWithType.vb: HashSet(Of String).Comparer
  fullName.vb: System.Collections.Generic.HashSet(Of System.String).Comparer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  commentId: M:Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  parent: Octopus.Client.Extensions.StringExtensions
  definition: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  name: NewLineSeperate()
  nameWithType: StringExtensions.NewLineSeperate()
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate()
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.CommaSeperate
  commentId: M:Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  parent: Octopus.Client.Extensions.StringExtensions
  definition: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  name: CommaSeperate()
  nameWithType: StringExtensions.CommaSeperate()
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate()
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  isExternal: true
  name: ICollection<T>.Add(T)
  nameWithType: HashSet<T>.ICollection<T>.Add(T)
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    nameWithType: HashSet<T>.ICollection<T>.Add
    fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: HashSet(Of T).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Clear
  commentId: M:System.Collections.Generic.HashSet`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: HashSet<T>.Clear()
  fullName: System.Collections.Generic.HashSet<T>.Clear()
  nameWithType.vb: HashSet(Of T).Clear()
  fullName.vb: System.Collections.Generic.HashSet(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Clear
    name: Clear
    nameWithType: HashSet<T>.Clear
    fullName: System.Collections.Generic.HashSet<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Clear
    name: Clear
    nameWithType: HashSet(Of T).Clear
    fullName: System.Collections.Generic.HashSet(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: HashSet<T>.Contains(T)
  fullName: System.Collections.Generic.HashSet<T>.Contains(T)
  nameWithType.vb: HashSet(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.HashSet(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Contains(`0)
    name: Contains
    nameWithType: HashSet<T>.Contains
    fullName: System.Collections.Generic.HashSet<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Contains(`0)
    name: Contains
    nameWithType: HashSet(Of T).Contains
    fullName: System.Collections.Generic.HashSet(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: HashSet<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HashSet<T>.CopyTo
    fullName: System.Collections.Generic.HashSet<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HashSet(Of T).CopyTo
    fullName: System.Collections.Generic.HashSet(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: HashSet<T>.Remove(T)
  fullName: System.Collections.Generic.HashSet<T>.Remove(T)
  nameWithType.vb: HashSet(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.HashSet(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Remove(`0)
    name: Remove
    nameWithType: HashSet<T>.Remove
    fullName: System.Collections.Generic.HashSet<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Remove(`0)
    name: Remove
    nameWithType: HashSet(Of T).Remove
    fullName: System.Collections.Generic.HashSet(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: HashSet<T>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()
  nameWithType.vb: HashSet(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HashSet<T>.GetEnumerator
    fullName: System.Collections.Generic.HashSet<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HashSet(Of T).GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: HashSet<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: HashSet<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: HashSet<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: HashSet<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: HashSet(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.HashSet(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: HashSet<T>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.HashSet<T>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: HashSet(Of T).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.HashSet(Of T).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: HashSet<T>.GetObjectData
    fullName: System.Collections.Generic.HashSet<T>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: HashSet(Of T).GetObjectData
    fullName: System.Collections.Generic.HashSet(Of T).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  isExternal: true
  name: OnDeserialization(Object)
  nameWithType: HashSet<T>.OnDeserialization(Object)
  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization(System.Object)
  nameWithType.vb: HashSet(Of T).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.HashSet(Of T).OnDeserialization(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: HashSet<T>.OnDeserialization
    fullName: System.Collections.Generic.HashSet<T>.OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
    name: OnDeserialization
    nameWithType: HashSet(Of T).OnDeserialization
    fullName: System.Collections.Generic.HashSet(Of T).OnDeserialization
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  commentId: M:System.Collections.Generic.HashSet`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: HashSet<T>.Add(T)
  fullName: System.Collections.Generic.HashSet<T>.Add(T)
  nameWithType.vb: HashSet(Of T).Add(T)
  fullName.vb: System.Collections.Generic.HashSet(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Add(`0)
    name: Add
    nameWithType: HashSet<T>.Add
    fullName: System.Collections.Generic.HashSet<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Add(`0)
    name: Add
    nameWithType: HashSet(Of T).Add
    fullName: System.Collections.Generic.HashSet(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: UnionWith(IEnumerable<T>)
  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: HashSet<T>.UnionWith
    fullName: System.Collections.Generic.HashSet<T>.UnionWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    nameWithType: HashSet(Of T).UnionWith
    fullName: System.Collections.Generic.HashSet(Of T).UnionWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IntersectWith(IEnumerable<T>)
  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: HashSet<T>.IntersectWith
    fullName: System.Collections.Generic.HashSet<T>.IntersectWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    nameWithType: HashSet(Of T).IntersectWith
    fullName: System.Collections.Generic.HashSet(Of T).IntersectWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: ExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: HashSet<T>.ExceptWith
    fullName: System.Collections.Generic.HashSet<T>.ExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    nameWithType: HashSet(Of T).ExceptWith
    fullName: System.Collections.Generic.HashSet(Of T).ExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: HashSet<T>.SymmetricExceptWith
    fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    nameWithType: HashSet(Of T).SymmetricExceptWith
    fullName: System.Collections.Generic.HashSet(Of T).SymmetricExceptWith
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: HashSet<T>.IsSubsetOf
    fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    nameWithType: HashSet(Of T).IsSubsetOf
    fullName: System.Collections.Generic.HashSet(Of T).IsSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: HashSet<T>.IsProperSubsetOf
    fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    nameWithType: HashSet(Of T).IsProperSubsetOf
    fullName: System.Collections.Generic.HashSet(Of T).IsProperSubsetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: HashSet<T>.IsSupersetOf
    fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    nameWithType: HashSet(Of T).IsSupersetOf
    fullName: System.Collections.Generic.HashSet(Of T).IsSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: HashSet<T>.IsProperSupersetOf
    fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    nameWithType: HashSet(Of T).IsProperSupersetOf
    fullName: System.Collections.Generic.HashSet(Of T).IsProperSupersetOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Overlaps(IEnumerable<T>)
  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: HashSet<T>.Overlaps
    fullName: System.Collections.Generic.HashSet<T>.Overlaps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    nameWithType: HashSet(Of T).Overlaps
    fullName: System.Collections.Generic.HashSet(Of T).Overlaps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: SetEquals(IEnumerable<T>)
  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: HashSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: HashSet<T>.SetEquals
    fullName: System.Collections.Generic.HashSet<T>.SetEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    nameWithType: HashSet(Of T).SetEquals
    fullName: System.Collections.Generic.HashSet(Of T).SetEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: HashSet<T>.CopyTo(T[])
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])
  nameWithType.vb: HashSet(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: HashSet<T>.CopyTo
    fullName: System.Collections.Generic.HashSet<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: HashSet(Of T).CopyTo
    fullName: System.Collections.Generic.HashSet(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32, Int32)
  nameWithType: HashSet<T>.CopyTo(T[], Int32, Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[], System.Int32, System.Int32)
  nameWithType.vb: HashSet(Of T).CopyTo(T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of T).CopyTo(T(), System.Int32, System.Int32)
  name.vb: CopyTo(T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: HashSet<T>.CopyTo
    fullName: System.Collections.Generic.HashSet<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: HashSet(Of T).CopyTo
    fullName: System.Collections.Generic.HashSet(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  commentId: M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  isExternal: true
  name: RemoveWhere(Predicate<T>)
  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)
  nameWithType.vb: HashSet(Of T).RemoveWhere(Predicate(Of T))
  fullName.vb: System.Collections.Generic.HashSet(Of T).RemoveWhere(System.Predicate(Of T))
  name.vb: RemoveWhere(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
    name: RemoveWhere
    nameWithType: HashSet<T>.RemoveWhere
    fullName: System.Collections.Generic.HashSet<T>.RemoveWhere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
    name: RemoveWhere
    nameWithType: HashSet(Of T).RemoveWhere
    fullName: System.Collections.Generic.HashSet(Of T).RemoveWhere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  commentId: M:System.Collections.Generic.HashSet`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: HashSet<T>.TrimExcess()
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()
  nameWithType.vb: HashSet(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.HashSet(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.TrimExcess
    name: TrimExcess
    nameWithType: HashSet<T>.TrimExcess
    fullName: System.Collections.Generic.HashSet<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.TrimExcess
    name: TrimExcess
    nameWithType: HashSet(Of T).TrimExcess
    fullName: System.Collections.Generic.HashSet(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.CreateSetComparer
  commentId: M:System.Collections.Generic.HashSet`1.CreateSetComparer
  isExternal: true
  name: CreateSetComparer()
  nameWithType: HashSet<T>.CreateSetComparer()
  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer()
  nameWithType.vb: HashSet(Of T).CreateSetComparer()
  fullName.vb: System.Collections.Generic.HashSet(Of T).CreateSetComparer()
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1.CreateSetComparer
    name: CreateSetComparer
    nameWithType: HashSet<T>.CreateSetComparer
    fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1.CreateSetComparer
    name: CreateSetComparer
    nameWithType: HashSet(Of T).CreateSetComparer
    fullName: System.Collections.Generic.HashSet(Of T).CreateSetComparer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1.Count
  commentId: P:System.Collections.Generic.HashSet`1.Count
  isExternal: true
  name: Count
  nameWithType: HashSet<T>.Count
  fullName: System.Collections.Generic.HashSet<T>.Count
  nameWithType.vb: HashSet(Of T).Count
  fullName.vb: System.Collections.Generic.HashSet(Of T).Count
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: HashSet<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.HashSet(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.HashSet`1.Comparer
  commentId: P:System.Collections.Generic.HashSet`1.Comparer
  isExternal: true
  name: Comparer
  nameWithType: HashSet<T>.Comparer
  fullName: System.Collections.Generic.HashSet<T>.Comparer
  nameWithType.vb: HashSet(Of T).Comparer
  fullName.vb: System.Collections.Generic.HashSet(Of T).Comparer
- uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExternal: true
  name: NewLineSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.NewLineSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: StringExtensions.NewLineSeperate(IEnumerable(Of Object))
  fullName.vb: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: NewLineSeperate(IEnumerable(Of Object))
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Extensions.StringExtensions
  commentId: T:Octopus.Client.Extensions.StringExtensions
  parent: Octopus.Client.Extensions
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Octopus.Client.Extensions.StringExtensions
- uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExternal: true
  name: CommaSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.CommaSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: StringExtensions.CommaSeperate(IEnumerable(Of Object))
  fullName.vb: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: CommaSeperate(IEnumerable(Of Object))
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Extensions
  commentId: N:Octopus.Client.Extensions
  name: Octopus.Client.Extensions
  nameWithType: Octopus.Client.Extensions
  fullName: Octopus.Client.Extensions
- uid: Octopus.Client.Model.ScopeValue.#ctor*
  commentId: Overload:Octopus.Client.Model.ScopeValue.#ctor
  name: ScopeValue
  nameWithType: ScopeValue.ScopeValue
  fullName: Octopus.Client.Model.ScopeValue.ScopeValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.ScopeValue.op_Implicit*
  commentId: Overload:Octopus.Client.Model.ScopeValue.op_Implicit
  name: Implicit
  nameWithType: ScopeValue.Implicit
  fullName: Octopus.Client.Model.ScopeValue.Implicit
  nameWithType.vb: ScopeValue.Widening
  fullName.vb: Octopus.Client.Model.ScopeValue.Widening
  name.vb: Widening
- uid: Octopus.Client.Model.ScopeValue
  commentId: T:Octopus.Client.Model.ScopeValue
  parent: Octopus.Client.Model
  name: ScopeValue
  nameWithType: ScopeValue
  fullName: Octopus.Client.Model.ScopeValue
