### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IRunbookProcessRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookProcessRepository
  id: IRunbookProcessRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  langs:
  - csharp
  - vb
  name: IRunbookProcessRepository
  nameWithType: IRunbookProcessRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookProcessRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookProcessRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IRunbookProcessRepository
    path: ../source/Octopus.Client/Repositories/Async/RunbookProcessRepository.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: 'public interface IRunbookProcessRepository : IGet<RunbookProcessResource>, IModify<RunbookProcessResource>'
    content.vb: >-
      Public Interface IRunbookProcessRepository
          Inherits IGet(Of RunbookProcessResource), IModify(Of RunbookProcessResource)
  inheritedMembers:
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String)
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String[])
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Refresh(Octopus.Client.Model.RunbookProcessResource)
  - Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}.Modify(Octopus.Client.Model.RunbookProcessResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  commentId: M:Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  id: GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  parent: Octopus.Client.Repositories.Async.IRunbookProcessRepository
  langs:
  - csharp
  - vb
  name: GetTemplate(RunbookProcessResource)
  nameWithType: IRunbookProcessRepository.GetTemplate(RunbookProcessResource)
  fullName: Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookProcessRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetTemplate
    path: ../source/Octopus.Client/Repositories/Async/RunbookProcessRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<RunbookSnapshotTemplateResource> GetTemplate(RunbookProcessResource runbookProcess)
    parameters:
    - id: runbookProcess
      type: Octopus.Client.Model.RunbookProcessResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotTemplateResource}
    content.vb: Function GetTemplate(runbookProcess As RunbookProcessResource) As Task(Of RunbookSnapshotTemplateResource)
  overload: Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<RunbookProcessResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Get(System.String)
  nameWithType.vb: IGet(Of RunbookProcessResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<RunbookProcessResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of RunbookProcessResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<RunbookProcessResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Get(System.String[])
  nameWithType.vb: IGet(Of RunbookProcessResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<RunbookProcessResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of RunbookProcessResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Refresh(Octopus.Client.Model.RunbookProcessResource)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}.Refresh(Octopus.Client.Model.RunbookProcessResource)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(RunbookProcessResource)
  nameWithType: IGet<RunbookProcessResource>.Refresh(RunbookProcessResource)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Refresh(Octopus.Client.Model.RunbookProcessResource)
  nameWithType.vb: IGet(Of RunbookProcessResource).Refresh(RunbookProcessResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Refresh(Octopus.Client.Model.RunbookProcessResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<RunbookProcessResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of RunbookProcessResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}.Modify(Octopus.Client.Model.RunbookProcessResource)
  commentId: M:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}.Modify(Octopus.Client.Model.RunbookProcessResource)
  parent: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}
  definition: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(RunbookProcessResource)
  nameWithType: IModify<RunbookProcessResource>.Modify(RunbookProcessResource)
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookProcessResource>.Modify(Octopus.Client.Model.RunbookProcessResource)
  nameWithType.vb: IModify(Of RunbookProcessResource).Modify(RunbookProcessResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookProcessResource).Modify(Octopus.Client.Model.RunbookProcessResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<RunbookProcessResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookProcessResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of RunbookProcessResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookProcessResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}
  commentId: T:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookProcessResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IGet`1
  name: IGet<RunbookProcessResource>
  nameWithType: IGet<RunbookProcessResource>
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookProcessResource>
  nameWithType.vb: IGet(Of RunbookProcessResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookProcessResource)
  name.vb: IGet(Of RunbookProcessResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}
  commentId: T:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookProcessResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IModify`1
  name: IModify<RunbookProcessResource>
  nameWithType: IModify<RunbookProcessResource>
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookProcessResource>
  nameWithType.vb: IModify(Of RunbookProcessResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookProcessResource)
  name.vb: IModify(Of RunbookProcessResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookProcessResource
    name: RunbookProcessResource
    nameWithType: RunbookProcessResource
    fullName: Octopus.Client.Model.RunbookProcessResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1
  commentId: T:Octopus.Client.Repositories.Async.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1
  commentId: T:Octopus.Client.Repositories.Async.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate
  name: GetTemplate
  nameWithType: IRunbookProcessRepository.GetTemplate
  fullName: Octopus.Client.Repositories.Async.IRunbookProcessRepository.GetTemplate
- uid: Octopus.Client.Model.RunbookProcessResource
  commentId: T:Octopus.Client.Model.RunbookProcessResource
  parent: Octopus.Client.Model
  name: RunbookProcessResource
  nameWithType: RunbookProcessResource
  fullName: Octopus.Client.Model.RunbookProcessResource
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotTemplateResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotTemplateResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RunbookSnapshotTemplateResource>
  nameWithType: Task<RunbookSnapshotTemplateResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.RunbookSnapshotTemplateResource>
  nameWithType.vb: Task(Of RunbookSnapshotTemplateResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.RunbookSnapshotTemplateResource)
  name.vb: Task(Of RunbookSnapshotTemplateResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotTemplateResource
    name: RunbookSnapshotTemplateResource
    nameWithType: RunbookSnapshotTemplateResource
    fullName: Octopus.Client.Model.RunbookSnapshotTemplateResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotTemplateResource
    name: RunbookSnapshotTemplateResource
    nameWithType: RunbookSnapshotTemplateResource
    fullName: Octopus.Client.Model.RunbookSnapshotTemplateResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
