### YamlMime:ManagedReference
items:
- uid: Octopus.Client.OctopusServerEndpoint
  commentId: T:Octopus.Client.OctopusServerEndpoint
  id: OctopusServerEndpoint
  parent: Octopus.Client
  children:
  - Octopus.Client.OctopusServerEndpoint.#ctor(Octopus.Client.ILinkResolver,System.String,System.Net.ICredentials)
  - Octopus.Client.OctopusServerEndpoint.#ctor(System.String)
  - Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String)
  - Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String,System.Net.ICredentials)
  - Octopus.Client.OctopusServerEndpoint.ApiKey
  - Octopus.Client.OctopusServerEndpoint.AsUser(System.String)
  - Octopus.Client.OctopusServerEndpoint.Credentials
  - Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
  - Octopus.Client.OctopusServerEndpoint.OctopusServer
  - Octopus.Client.OctopusServerEndpoint.Proxy
  langs:
  - csharp
  - vb
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint
  type: Class
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusServerEndpoint
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSpecifies the location and credentials to use when communicating with an Octopus Deploy server.\n"
  example: []
  syntax:
    content: public class OctopusServerEndpoint
    content.vb: Public Class OctopusServerEndpoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.OctopusServerEndpoint.#ctor(System.String)
  commentId: M:Octopus.Client.OctopusServerEndpoint.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: OctopusServerEndpoint(String)
  nameWithType: OctopusServerEndpoint.OctopusServerEndpoint(String)
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServerEndpoint(System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.OctopusServerEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class. Since no API key is provided, only\nvery limited functionality will be available.\n"
  example: []
  syntax:
    content: public OctopusServerEndpoint(string octopusServerAddress)
    parameters:
    - id: octopusServerAddress
      type: System.String
      description: "\nThe URI of the Octopus Server. Ideally this should end with <code>/api</code>. If it ends with any other segment, the\nclient\nwill assume Octopus runs under a virtual directory.\n"
    content.vb: Public Sub New(octopusServerAddress As String)
  overload: Octopus.Client.OctopusServerEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String)
  commentId: M:Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: OctopusServerEndpoint(String, String)
  nameWithType: OctopusServerEndpoint.OctopusServerEndpoint(String, String)
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServerEndpoint(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 41
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.OctopusServerEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OctopusServerEndpoint(string octopusServerAddress, string apiKey)
    parameters:
    - id: octopusServerAddress
      type: System.String
      description: "\nThe URI of the Octopus Server. Ideally this should end with <code>/api</code>. If it ends with any other segment, the\nclient\nwill assume Octopus runs under a virtual directory.\n"
    - id: apiKey
      type: System.String
      description: "\nThe API key to use when connecting to the Octopus Server. For more information on API keys, please\nsee the API documentation on authentication\n(https://github.com/OctopusDeploy/OctopusDeploy-Api/blob/master/sections/authentication.md).\n"
    content.vb: Public Sub New(octopusServerAddress As String, apiKey As String)
  overload: Octopus.Client.OctopusServerEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String,System.Net.ICredentials)
  commentId: M:Octopus.Client.OctopusServerEndpoint.#ctor(System.String,System.String,System.Net.ICredentials)
  id: '#ctor(System.String,System.String,System.Net.ICredentials)'
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: OctopusServerEndpoint(String, String, ICredentials)
  nameWithType: OctopusServerEndpoint.OctopusServerEndpoint(String, String, ICredentials)
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServerEndpoint(System.String, System.String, System.Net.ICredentials)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 63
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.OctopusServerEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OctopusServerEndpoint(string octopusServerAddress, string apiKey, ICredentials credentials)
    parameters:
    - id: octopusServerAddress
      type: System.String
      description: "\nThe URI of the Octopus Server. Ideally this should end with <code>/api</code>. If it ends with any other segment, the\nclient\nwill assume Octopus runs under a virtual directory.\n"
    - id: apiKey
      type: System.String
      description: "\nThe API key to use when connecting to the Octopus Server. For more information on API keys, please\nsee the API documentation on authentication\n(https://github.com/OctopusDeploy/OctopusDeploy-Api/blob/master/sections/authentication.md).\n"
    - id: credentials
      type: System.Net.ICredentials
      description: "\nAdditional credentials to use when communicating to servers that require integrated/basic\nauthentication.\n"
    content.vb: Public Sub New(octopusServerAddress As String, apiKey As String, credentials As ICredentials)
  overload: Octopus.Client.OctopusServerEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusServerEndpoint.#ctor(Octopus.Client.ILinkResolver,System.String,System.Net.ICredentials)
  commentId: M:Octopus.Client.OctopusServerEndpoint.#ctor(Octopus.Client.ILinkResolver,System.String,System.Net.ICredentials)
  id: '#ctor(Octopus.Client.ILinkResolver,System.String,System.Net.ICredentials)'
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: OctopusServerEndpoint(ILinkResolver, String, ICredentials)
  nameWithType: OctopusServerEndpoint.OctopusServerEndpoint(ILinkResolver, String, ICredentials)
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServerEndpoint(Octopus.Client.ILinkResolver, System.String, System.Net.ICredentials)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 89
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.OctopusServerEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OctopusServerEndpoint(ILinkResolver octopusServer, string apiKey, ICredentials credentials)
    parameters:
    - id: octopusServer
      type: Octopus.Client.ILinkResolver
      description: The resolver that should be used to turn relative links into full URIs.
    - id: apiKey
      type: System.String
      description: "\nThe API key to use when connecting to the Octopus Server. For more information on API keys, please\nsee the API documentation on authentication\n(https://github.com/OctopusDeploy/OctopusDeploy-Api/blob/master/sections/authentication.md).\n"
    - id: credentials
      type: System.Net.ICredentials
      description: "\nAdditional credentials to use when communicating to servers that require integrated/basic\nauthentication.\n"
    content.vb: Public Sub New(octopusServer As ILinkResolver, apiKey As String, credentials As ICredentials)
  overload: Octopus.Client.OctopusServerEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusServerEndpoint.OctopusServer
  commentId: P:Octopus.Client.OctopusServerEndpoint.OctopusServer
  id: OctopusServer
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: OctopusServer
  nameWithType: OctopusServerEndpoint.OctopusServer
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServer
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusServer
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 103
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nThe URI of the Octopus Server. Ideally this should end with <code>/api</code>. If it ends with any other segment, the\nclient  will assume Octopus runs under a virtual directory.\n"
  example: []
  syntax:
    content: public ILinkResolver OctopusServer { get; }
    parameters: []
    return:
      type: Octopus.Client.ILinkResolver
    content.vb: Public ReadOnly Property OctopusServer As ILinkResolver
  overload: Octopus.Client.OctopusServerEndpoint.OctopusServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
  commentId: P:Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
  id: IsUsingSecureConnection
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: IsUsingSecureConnection
  nameWithType: OctopusServerEndpoint.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsUsingSecureConnection
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 108
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nIndicates whether a secure (SSL) connection is being used to communicate with the server.\n"
  example: []
  syntax:
    content: public bool IsUsingSecureConnection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingSecureConnection As Boolean
  overload: Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusServerEndpoint.ApiKey
  commentId: P:Octopus.Client.OctopusServerEndpoint.ApiKey
  id: ApiKey
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: OctopusServerEndpoint.ApiKey
  fullName: Octopus.Client.OctopusServerEndpoint.ApiKey
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ApiKey
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 115
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nGets the API key to use when connecting to the Octopus Server. For more information on API keys, please see the API\ndocumentation on authentication\n(https://github.com/OctopusDeploy/OctopusDeploy-Api/blob/master/sections/authentication.md).\n"
  example: []
  syntax:
    content: public string ApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ApiKey As String
  overload: Octopus.Client.OctopusServerEndpoint.ApiKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusServerEndpoint.Credentials
  commentId: P:Octopus.Client.OctopusServerEndpoint.Credentials
  id: Credentials
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: OctopusServerEndpoint.Credentials
  fullName: Octopus.Client.OctopusServerEndpoint.Credentials
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Credentials
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 120
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nGets the additional credentials to use when communicating to servers that require integrated/basic authentication.\n"
  example: []
  syntax:
    content: public ICredentials Credentials { get; }
    parameters: []
    return:
      type: System.Net.ICredentials
    content.vb: Public ReadOnly Property Credentials As ICredentials
  overload: Octopus.Client.OctopusServerEndpoint.Credentials*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusServerEndpoint.AsUser(System.String)
  commentId: M:Octopus.Client.OctopusServerEndpoint.AsUser(System.String)
  id: AsUser(System.String)
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: AsUser(String)
  nameWithType: OctopusServerEndpoint.AsUser(String)
  fullName: Octopus.Client.OctopusServerEndpoint.AsUser(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AsUser
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 127
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nRecreates the endpoint using the API key of a new user.\n"
  example: []
  syntax:
    content: public OctopusServerEndpoint AsUser(string newUserApiKey)
    parameters:
    - id: newUserApiKey
      type: System.String
      description: The new user API key.
    return:
      type: Octopus.Client.OctopusServerEndpoint
      description: An endpoint with a new user.
    content.vb: Public Function AsUser(newUserApiKey As String) As OctopusServerEndpoint
  overload: Octopus.Client.OctopusServerEndpoint.AsUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusServerEndpoint.Proxy
  commentId: P:Octopus.Client.OctopusServerEndpoint.Proxy
  id: Proxy
  parent: Octopus.Client.OctopusServerEndpoint
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: OctopusServerEndpoint.Proxy
  fullName: Octopus.Client.OctopusServerEndpoint.Proxy
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusServerEndpoint.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Proxy
    path: ../source/Octopus.Client/OctopusServerEndpoint.cs
    startLine: 135
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nA proxy that should be used to connect to the endpoint.\n"
  example: []
  syntax:
    content: public IWebProxy Proxy { get; set; }
    parameters: []
    return:
      type: System.Net.IWebProxy
    content.vb: Public Property Proxy As IWebProxy
  overload: Octopus.Client.OctopusServerEndpoint.Proxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.OctopusServerEndpoint
  commentId: T:Octopus.Client.OctopusServerEndpoint
  parent: Octopus.Client
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint
- uid: Octopus.Client.OctopusServerEndpoint.#ctor*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.#ctor
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint.OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServerEndpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Octopus.Client.ILinkResolver
  commentId: T:Octopus.Client.ILinkResolver
  parent: Octopus.Client
  name: ILinkResolver
  nameWithType: ILinkResolver
  fullName: Octopus.Client.ILinkResolver
- uid: Octopus.Client.OctopusServerEndpoint.OctopusServer*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.OctopusServer
  name: OctopusServer
  nameWithType: OctopusServerEndpoint.OctopusServer
  fullName: Octopus.Client.OctopusServerEndpoint.OctopusServer
- uid: Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
  name: IsUsingSecureConnection
  nameWithType: OctopusServerEndpoint.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusServerEndpoint.IsUsingSecureConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.OctopusServerEndpoint.ApiKey*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.ApiKey
  name: ApiKey
  nameWithType: OctopusServerEndpoint.ApiKey
  fullName: Octopus.Client.OctopusServerEndpoint.ApiKey
- uid: Octopus.Client.OctopusServerEndpoint.Credentials*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.Credentials
  name: Credentials
  nameWithType: OctopusServerEndpoint.Credentials
  fullName: Octopus.Client.OctopusServerEndpoint.Credentials
- uid: Octopus.Client.OctopusServerEndpoint.AsUser*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.AsUser
  name: AsUser
  nameWithType: OctopusServerEndpoint.AsUser
  fullName: Octopus.Client.OctopusServerEndpoint.AsUser
- uid: Octopus.Client.OctopusServerEndpoint.Proxy*
  commentId: Overload:Octopus.Client.OctopusServerEndpoint.Proxy
  name: Proxy
  nameWithType: OctopusServerEndpoint.Proxy
  fullName: Octopus.Client.OctopusServerEndpoint.Proxy
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
