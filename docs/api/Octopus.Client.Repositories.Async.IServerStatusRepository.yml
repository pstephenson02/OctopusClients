### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository
  commentId: T:Octopus.Client.Repositories.Async.IServerStatusRepository
  id: IServerStatusRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth
  - Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus
  - Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  langs:
  - csharp
  - vb
  name: IServerStatusRepository
  nameWithType: IServerStatusRepository
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IServerStatusRepository
    path: ../source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface IServerStatusRepository
    content.vb: Public Interface IServerStatusRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus
  commentId: M:Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus
  id: GetServerStatus
  parent: Octopus.Client.Repositories.Async.IServerStatusRepository
  langs:
  - csharp
  - vb
  name: GetServerStatus()
  nameWithType: IServerStatusRepository.GetServerStatus()
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetServerStatus
    path: ../source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ServerStatusResource> GetServerStatus()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusResource}
    content.vb: Function GetServerStatus As Task(Of ServerStatusResource)
  overload: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus*
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  commentId: M:Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  id: GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  parent: Octopus.Client.Repositories.Async.IServerStatusRepository
  langs:
  - csharp
  - vb
  name: GetSystemInfo(ServerStatusResource)
  nameWithType: IServerStatusRepository.GetSystemInfo(ServerStatusResource)
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetSystemInfo
    path: ../source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<SystemInfoResource> GetSystemInfo(ServerStatusResource status)
    parameters:
    - id: status
      type: Octopus.Client.Model.ServerStatusResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.SystemInfoResource}
    content.vb: Function GetSystemInfo(status As ServerStatusResource) As Task(Of SystemInfoResource)
  overload: Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo*
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth
  commentId: M:Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth
  id: GetServerHealth
  parent: Octopus.Client.Repositories.Async.IServerStatusRepository
  langs:
  - csharp
  - vb
  name: GetServerHealth()
  nameWithType: IServerStatusRepository.GetServerHealth()
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetServerHealth
    path: ../source/Octopus.Client/Repositories/Async/ServerStatusRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ServerStatusHealthResource> GetServerHealth()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusHealthResource}
    content.vb: Function GetServerHealth As Task(Of ServerStatusHealthResource)
  overload: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus*
  commentId: Overload:Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus
  name: GetServerStatus
  nameWithType: IServerStatusRepository.GetServerStatus
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerStatus
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServerStatusResource>
  nameWithType: Task<ServerStatusResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ServerStatusResource>
  nameWithType.vb: Task(Of ServerStatusResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ServerStatusResource)
  name.vb: Task(Of ServerStatusResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ServerStatusResource
    name: ServerStatusResource
    nameWithType: ServerStatusResource
    fullName: Octopus.Client.Model.ServerStatusResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ServerStatusResource
    name: ServerStatusResource
    nameWithType: ServerStatusResource
    fullName: Octopus.Client.Model.ServerStatusResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo*
  commentId: Overload:Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo
  name: GetSystemInfo
  nameWithType: IServerStatusRepository.GetSystemInfo
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetSystemInfo
- uid: Octopus.Client.Model.ServerStatusResource
  commentId: T:Octopus.Client.Model.ServerStatusResource
  parent: Octopus.Client.Model
  name: ServerStatusResource
  nameWithType: ServerStatusResource
  fullName: Octopus.Client.Model.ServerStatusResource
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.SystemInfoResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.SystemInfoResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SystemInfoResource>
  nameWithType: Task<SystemInfoResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.SystemInfoResource>
  nameWithType.vb: Task(Of SystemInfoResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.SystemInfoResource)
  name.vb: Task(Of SystemInfoResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SystemInfoResource
    name: SystemInfoResource
    nameWithType: SystemInfoResource
    fullName: Octopus.Client.Model.SystemInfoResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SystemInfoResource
    name: SystemInfoResource
    nameWithType: SystemInfoResource
    fullName: Octopus.Client.Model.SystemInfoResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth*
  commentId: Overload:Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth
  name: GetServerHealth
  nameWithType: IServerStatusRepository.GetServerHealth
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository.GetServerHealth
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusHealthResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ServerStatusHealthResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServerStatusHealthResource>
  nameWithType: Task<ServerStatusHealthResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ServerStatusHealthResource>
  nameWithType.vb: Task(Of ServerStatusHealthResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ServerStatusHealthResource)
  name.vb: Task(Of ServerStatusHealthResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ServerStatusHealthResource
    name: ServerStatusHealthResource
    nameWithType: ServerStatusHealthResource
    fullName: Octopus.Client.Model.ServerStatusHealthResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ServerStatusHealthResource
    name: ServerStatusHealthResource
    nameWithType: ServerStatusHealthResource
    fullName: Octopus.Client.Model.ServerStatusHealthResource
  - name: )
    nameWithType: )
    fullName: )
