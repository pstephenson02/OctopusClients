### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IProjectGroupRepository
  commentId: T:Octopus.Client.Repositories.IProjectGroupRepository
  id: IProjectGroupRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String)
  - Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String,System.String)
  - Octopus.Client.Repositories.IProjectGroupRepository.GetProjects(Octopus.Client.Model.ProjectGroupResource)
  langs:
  - csharp
  - vb
  name: IProjectGroupRepository
  nameWithType: IProjectGroupRepository
  fullName: Octopus.Client.Repositories.IProjectGroupRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/ProjectGroupRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IProjectGroupRepository
    path: ../source/Octopus.Client/Repositories/ProjectGroupRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface IProjectGroupRepository : IFindByName<ProjectGroupResource>, IPaginate<ProjectGroupResource>, IGet<ProjectGroupResource>, ICreate<ProjectGroupResource>, IModify<ProjectGroupResource>, IDelete<ProjectGroupResource>, IGetAll<ProjectGroupResource>'
    content.vb: >-
      Public Interface IProjectGroupRepository
          Inherits IFindByName(Of ProjectGroupResource), IGet(Of ProjectGroupResource), ICreate(Of ProjectGroupResource), IModify(Of ProjectGroupResource), IDelete(Of ProjectGroupResource), IGetAll(Of ProjectGroupResource)
  inheritedMembers:
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByName(System.String,System.String,System.Object)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ProjectGroupResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindOne(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindMany(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Refresh(Octopus.Client.Model.ProjectGroupResource)
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}.Create(Octopus.Client.Model.ProjectGroupResource,System.Object)
  - Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}.Modify(Octopus.Client.Model.ProjectGroupResource)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}.Delete(Octopus.Client.Model.ProjectGroupResource)
  - Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}.GetAll
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IProjectGroupRepository.GetProjects(Octopus.Client.Model.ProjectGroupResource)
  commentId: M:Octopus.Client.Repositories.IProjectGroupRepository.GetProjects(Octopus.Client.Model.ProjectGroupResource)
  id: GetProjects(Octopus.Client.Model.ProjectGroupResource)
  parent: Octopus.Client.Repositories.IProjectGroupRepository
  langs:
  - csharp
  - vb
  name: GetProjects(ProjectGroupResource)
  nameWithType: IProjectGroupRepository.GetProjects(ProjectGroupResource)
  fullName: Octopus.Client.Repositories.IProjectGroupRepository.GetProjects(Octopus.Client.Model.ProjectGroupResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/ProjectGroupRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetProjects
    path: ../source/Octopus.Client/Repositories/ProjectGroupRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: List<ProjectResource> GetProjects(ProjectGroupResource projectGroup)
    parameters:
    - id: projectGroup
      type: Octopus.Client.Model.ProjectGroupResource
    return:
      type: System.Collections.Generic.List{Octopus.Client.Model.ProjectResource}
    content.vb: Function GetProjects(projectGroup As ProjectGroupResource) As List(Of ProjectResource)
  overload: Octopus.Client.Repositories.IProjectGroupRepository.GetProjects*
- uid: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String)
  commentId: M:Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String)
  id: CreateOrModify(System.String)
  parent: Octopus.Client.Repositories.IProjectGroupRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String)
  nameWithType: IProjectGroupRepository.CreateOrModify(String)
  fullName: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/ProjectGroupRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/ProjectGroupRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: ProjectGroupEditor CreateOrModify(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Octopus.Client.Editors.ProjectGroupEditor
    content.vb: Function CreateOrModify(name As String) As ProjectGroupEditor
  overload: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify*
- uid: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String,System.String)
  commentId: M:Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String,System.String)
  id: CreateOrModify(System.String,System.String)
  parent: Octopus.Client.Repositories.IProjectGroupRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, String)
  nameWithType: IProjectGroupRepository.CreateOrModify(String, String)
  fullName: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/ProjectGroupRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/ProjectGroupRepository.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: ProjectGroupEditor CreateOrModify(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: Octopus.Client.Editors.ProjectGroupEditor
    content.vb: Function CreateOrModify(name As String, description As String) As ProjectGroupEditor
  overload: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify*
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByName(System.String,System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<ProjectGroupResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.ProjectGroupResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of ProjectGroupResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.ProjectGroupResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<ProjectGroupResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.ProjectGroupResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of ProjectGroupResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.ProjectGroupResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<ProjectGroupResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.ProjectGroupResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of ProjectGroupResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.ProjectGroupResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<ProjectGroupResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.ProjectGroupResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of ProjectGroupResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.ProjectGroupResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ProjectGroupResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ProjectGroupResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<ProjectGroupResource>, Boolean>, String, Object)
  nameWithType: IPaginate<ProjectGroupResource>.Paginate(Func<ResourceCollection<ProjectGroupResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.ProjectGroupResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of ProjectGroupResource).Paginate(Func(Of ResourceCollection(Of ProjectGroupResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.ProjectGroupResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of ProjectGroupResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<ProjectGroupResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of ProjectGroupResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindOne(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindOne(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<ProjectGroupResource, Boolean>, String, Object)
  nameWithType: IPaginate<ProjectGroupResource>.FindOne(Func<ProjectGroupResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindOne(System.Func<Octopus.Client.Model.ProjectGroupResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of ProjectGroupResource).FindOne(Func(Of ProjectGroupResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindOne(System.Func(Of Octopus.Client.Model.ProjectGroupResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of ProjectGroupResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<ProjectGroupResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of ProjectGroupResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindMany(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindMany(System.Func{Octopus.Client.Model.ProjectGroupResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<ProjectGroupResource, Boolean>, String, Object)
  nameWithType: IPaginate<ProjectGroupResource>.FindMany(Func<ProjectGroupResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindMany(System.Func<Octopus.Client.Model.ProjectGroupResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of ProjectGroupResource).FindMany(Func(Of ProjectGroupResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindMany(System.Func(Of Octopus.Client.Model.ProjectGroupResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of ProjectGroupResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<ProjectGroupResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of ProjectGroupResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<ProjectGroupResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of ProjectGroupResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<ProjectGroupResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of ProjectGroupResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<ProjectGroupResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Get(System.String)
  nameWithType.vb: IGet(Of ProjectGroupResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<ProjectGroupResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of ProjectGroupResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<ProjectGroupResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Get(System.String[])
  nameWithType.vb: IGet(Of ProjectGroupResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<ProjectGroupResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of ProjectGroupResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Refresh(Octopus.Client.Model.ProjectGroupResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}.Refresh(Octopus.Client.Model.ProjectGroupResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(ProjectGroupResource)
  nameWithType: IGet<ProjectGroupResource>.Refresh(ProjectGroupResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Refresh(Octopus.Client.Model.ProjectGroupResource)
  nameWithType.vb: IGet(Of ProjectGroupResource).Refresh(ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Refresh(Octopus.Client.Model.ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<ProjectGroupResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of ProjectGroupResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}.Create(Octopus.Client.Model.ProjectGroupResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}.Create(Octopus.Client.Model.ProjectGroupResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(ProjectGroupResource, Object)
  nameWithType: ICreate<ProjectGroupResource>.Create(ProjectGroupResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.ProjectGroupResource>.Create(Octopus.Client.Model.ProjectGroupResource, System.Object)
  nameWithType.vb: ICreate(Of ProjectGroupResource).Create(ProjectGroupResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.ProjectGroupResource).Create(Octopus.Client.Model.ProjectGroupResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<ProjectGroupResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.ProjectGroupResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of ProjectGroupResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.ProjectGroupResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}.Modify(Octopus.Client.Model.ProjectGroupResource)
  commentId: M:Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}.Modify(Octopus.Client.Model.ProjectGroupResource)
  parent: Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(ProjectGroupResource)
  nameWithType: IModify<ProjectGroupResource>.Modify(ProjectGroupResource)
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.ProjectGroupResource>.Modify(Octopus.Client.Model.ProjectGroupResource)
  nameWithType.vb: IModify(Of ProjectGroupResource).Modify(ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.ProjectGroupResource).Modify(Octopus.Client.Model.ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<ProjectGroupResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.ProjectGroupResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of ProjectGroupResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.ProjectGroupResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}.Delete(Octopus.Client.Model.ProjectGroupResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}.Delete(Octopus.Client.Model.ProjectGroupResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(ProjectGroupResource)
  nameWithType: IDelete<ProjectGroupResource>.Delete(ProjectGroupResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.ProjectGroupResource>.Delete(Octopus.Client.Model.ProjectGroupResource)
  nameWithType.vb: IDelete(Of ProjectGroupResource).Delete(ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.ProjectGroupResource).Delete(Octopus.Client.Model.ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<ProjectGroupResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.ProjectGroupResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of ProjectGroupResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.ProjectGroupResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}.GetAll
  commentId: M:Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}.GetAll
  parent: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}
  definition: Octopus.Client.Repositories.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<ProjectGroupResource>.GetAll()
  fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.ProjectGroupResource>.GetAll()
  nameWithType.vb: IGetAll(Of ProjectGroupResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.ProjectGroupResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<ProjectGroupResource>.GetAll
    fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.ProjectGroupResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of ProjectGroupResource).GetAll
    fullName: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.ProjectGroupResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  isExternal: true
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<ProjectGroupResource>
  nameWithType: IFindByName<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IFindByName(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IFindByName(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  isExternal: true
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<ProjectGroupResource>
  nameWithType: IPaginate<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IPaginate(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IPaginate(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<ProjectGroupResource>
  nameWithType: IGet<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IGet(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IGet(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<ProjectGroupResource>
  nameWithType: ICreate<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: ICreate(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: ICreate(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IModify{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IModify`1
  name: IModify<ProjectGroupResource>
  nameWithType: IModify<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IModify(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IModify(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<ProjectGroupResource>
  nameWithType: IDelete<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IDelete(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IDelete(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll`1.GetAll
  commentId: M:Octopus.Client.Repositories.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<TResource>.GetAll()
  fullName: Octopus.Client.Repositories.IGetAll<TResource>.GetAll()
  nameWithType.vb: IGetAll(Of TResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of TResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<TResource>.GetAll
    fullName: Octopus.Client.Repositories.IGetAll<TResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of TResource).GetAll
    fullName: Octopus.Client.Repositories.IGetAll(Of TResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}
  commentId: T:Octopus.Client.Repositories.IGetAll{Octopus.Client.Model.ProjectGroupResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGetAll`1
  name: IGetAll<ProjectGroupResource>
  nameWithType: IGetAll<ProjectGroupResource>
  fullName: Octopus.Client.Repositories.IGetAll<Octopus.Client.Model.ProjectGroupResource>
  nameWithType.vb: IGetAll(Of ProjectGroupResource)
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of Octopus.Client.Model.ProjectGroupResource)
  name.vb: IGetAll(Of ProjectGroupResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectGroupResource
    name: ProjectGroupResource
    nameWithType: ProjectGroupResource
    fullName: Octopus.Client.Model.ProjectGroupResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1
  commentId: T:Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TResource>
  nameWithType: IFindByName<TResource>
  fullName: Octopus.Client.Repositories.IFindByName<TResource>
  nameWithType.vb: IFindByName(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource)
  name.vb: IFindByName(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1
  commentId: T:Octopus.Client.Repositories.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGetAll`1
  commentId: T:Octopus.Client.Repositories.IGetAll`1
  name: IGetAll<TResource>
  nameWithType: IGetAll<TResource>
  fullName: Octopus.Client.Repositories.IGetAll<TResource>
  nameWithType.vb: IGetAll(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGetAll(Of TResource)
  name.vb: IGetAll(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IProjectGroupRepository.GetProjects*
  commentId: Overload:Octopus.Client.Repositories.IProjectGroupRepository.GetProjects
  name: GetProjects
  nameWithType: IProjectGroupRepository.GetProjects
  fullName: Octopus.Client.Repositories.IProjectGroupRepository.GetProjects
- uid: Octopus.Client.Model.ProjectGroupResource
  commentId: T:Octopus.Client.Model.ProjectGroupResource
  parent: Octopus.Client.Model
  name: ProjectGroupResource
  nameWithType: ProjectGroupResource
  fullName: Octopus.Client.Model.ProjectGroupResource
- uid: System.Collections.Generic.List{Octopus.Client.Model.ProjectResource}
  commentId: T:System.Collections.Generic.List{Octopus.Client.Model.ProjectResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProjectResource>
  nameWithType: List<ProjectResource>
  fullName: System.Collections.Generic.List<Octopus.Client.Model.ProjectResource>
  nameWithType.vb: List(Of ProjectResource)
  fullName.vb: System.Collections.Generic.List(Of Octopus.Client.Model.ProjectResource)
  name.vb: List(Of ProjectResource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectResource
    name: ProjectResource
    nameWithType: ProjectResource
    fullName: Octopus.Client.Model.ProjectResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectResource
    name: ProjectResource
    nameWithType: ProjectResource
    fullName: Octopus.Client.Model.ProjectResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify*
  commentId: Overload:Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify
  name: CreateOrModify
  nameWithType: IProjectGroupRepository.CreateOrModify
  fullName: Octopus.Client.Repositories.IProjectGroupRepository.CreateOrModify
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Editors.ProjectGroupEditor
  commentId: T:Octopus.Client.Editors.ProjectGroupEditor
  parent: Octopus.Client.Editors
  name: ProjectGroupEditor
  nameWithType: ProjectGroupEditor
  fullName: Octopus.Client.Editors.ProjectGroupEditor
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors
  commentId: N:Octopus.Client.Editors
  name: Octopus.Client.Editors
  nameWithType: Octopus.Client.Editors
  fullName: Octopus.Client.Editors
