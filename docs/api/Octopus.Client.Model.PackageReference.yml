### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.PackageReference
  commentId: T:Octopus.Client.Model.PackageReference
  id: PackageReference
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.PackageReference.#ctor
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String)
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String)
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String)
  - Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Octopus.Client.Model.PackageReference.AcquisitionLocation
  - Octopus.Client.Model.PackageReference.Clone
  - Octopus.Client.Model.PackageReference.FeedId
  - Octopus.Client.Model.PackageReference.Id
  - Octopus.Client.Model.PackageReference.IsPrimaryPackage
  - Octopus.Client.Model.PackageReference.Name
  - Octopus.Client.Model.PackageReference.PackageId
  - Octopus.Client.Model.PackageReference.Properties
  langs:
  - csharp
  - vb
  name: PackageReference
  nameWithType: PackageReference
  fullName: Octopus.Client.Model.PackageReference
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PackageReference
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nRepresents a reference from a deployment-process (specifically an action or action-template) to a package.\nMay be named or un-named.\n"
  example: []
  syntax:
    content: public class PackageReference
    content.vb: Public Class PackageReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  id: '#ctor(System.String,System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String, String, PackageAcquisitionLocation)
  nameWithType: PackageReference.PackageReference(String, String, String, PackageAcquisitionLocation)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String, System.String, Octopus.Client.Model.PackageAcquisitionLocation)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nConstructs a named package-reference. \n"
  example: []
  syntax:
    content: public PackageReference(string name, string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation)
    parameters:
    - id: name
      type: System.String
      description: The package-reference name.
    - id: packageId
      type: System.String
      description: The package ID or a variable-expression
    - id: feedId
      type: System.String
      description: The feed ID or a variable-expression
    - id: acquisitionLocation
      type: Octopus.Client.Model.PackageAcquisitionLocation
      description: The location the package should be acquired
    content.vb: Public Sub New(name As String, packageId As String, feedId As String, acquisitionLocation As PackageAcquisitionLocation)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String, String, String)
  nameWithType: PackageReference.PackageReference(String, String, String, String)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 40
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nConstructs a named package-reference. \n"
  example: []
  syntax:
    content: public PackageReference(string name, string packageId, string feedId, string acquisitionLocation)
    parameters:
    - id: name
      type: System.String
      description: The package-reference name.
    - id: packageId
      type: System.String
      description: The package ID or a variable-expression
    - id: feedId
      type: System.String
      description: The feed ID or a variable-expression
    - id: acquisitionLocation
      type: System.String
      description: >-
        The location the package should be acquired.

        May be one <xref href="Octopus.Client.Model.PackageAcquisitionLocation" data-throw-if-not-resolved="false"></xref> or a variable-expression.
    content.vb: Public Sub New(name As String, packageId As String, feedId As String, acquisitionLocation As String)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)
  id: '#ctor(System.String,System.String,Octopus.Client.Model.PackageAcquisitionLocation)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String, PackageAcquisitionLocation)
  nameWithType: PackageReference.PackageReference(String, String, PackageAcquisitionLocation)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String, Octopus.Client.Model.PackageAcquisitionLocation)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 48
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nConstructs a primary package (an un-named package reference)\n"
  example: []
  syntax:
    content: public PackageReference(string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation)
    parameters:
    - id: packageId
      type: System.String
    - id: feedId
      type: System.String
    - id: acquisitionLocation
      type: Octopus.Client.Model.PackageAcquisitionLocation
    content.vb: Public Sub New(packageId As String, feedId As String, acquisitionLocation As PackageAcquisitionLocation)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String, String)
  nameWithType: PackageReference.PackageReference(String, String, String)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 56
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nConstructs a primary package (an un-named package reference)\n"
  example: []
  syntax:
    content: public PackageReference(string packageId, string feedId, string acquisitionLocation)
    parameters:
    - id: packageId
      type: System.String
    - id: feedId
      type: System.String
    - id: acquisitionLocation
      type: System.String
    content.vb: Public Sub New(packageId As String, feedId As String, acquisitionLocation As String)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String)
  nameWithType: PackageReference.PackageReference(String, String)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 64
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nConstructs a primary package (an un-named package reference)\n"
  example: []
  syntax:
    content: public PackageReference(string packageId, string feedId)
    parameters:
    - id: packageId
      type: System.String
    - id: feedId
      type: System.String
    content.vb: Public Sub New(packageId As String, feedId As String)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor
  commentId: M:Octopus.Client.Model.PackageReference.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference()
  nameWithType: PackageReference.PackageReference()
  fullName: Octopus.Client.Model.PackageReference.PackageReference()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 68
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public PackageReference()
    content.vb: Public Sub New
  overload: Octopus.Client.Model.PackageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Octopus.Client.Model.PackageReference.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageReference(String, String, String, String, String)
  nameWithType: PackageReference.PackageReference(String, String, String, String, String)
  fullName: Octopus.Client.Model.PackageReference.PackageReference(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 76
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nFor JSON deserialization only\n"
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      protected PackageReference(string id, string name, string packageId, string feedId, string acquisitionLocation)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: packageId
      type: System.String
    - id: feedId
      type: System.String
    - id: acquisitionLocation
      type: System.String
    content.vb: >-
      <JsonConstructor>

      Protected Sub New(id As String, name As String, packageId As String, feedId As String, acquisitionLocation As String)
  overload: Octopus.Client.Model.PackageReference.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Octopus.Client.Model.PackageReference.Id
  commentId: P:Octopus.Client.Model.PackageReference.Id
  id: Id
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PackageReference.Id
  fullName: Octopus.Client.Model.PackageReference.Id
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Id
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 93
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nThe ID of the package reference.\nIt should be noted this is *not* the Package ID (e.g. Acme.Web)\nThis field is unique identifier which will be set by the Octopus Server when the package reference\nis created.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Octopus.Client.Model.PackageReference.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.Name
  commentId: P:Octopus.Client.Model.PackageReference.Name
  id: Name
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PackageReference.Name
  fullName: Octopus.Client.Model.PackageReference.Name
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Name
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 102
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nAn name for the package-reference.\nThis may be empty, and should be empty for deployment actions with a single package reference.\nThis is used to discriminate the package-references. Package ID isn&apos;t suitable because an action may potentially\nhave multiple references to the same package ID (e.g. if you wanted to use different versions of the same package).\nAlso, the package ID may be a variable-expression. \n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Octopus.Client.Model.PackageReference.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.PackageId
  commentId: P:Octopus.Client.Model.PackageReference.PackageId
  id: PackageId
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: PackageId
  nameWithType: PackageReference.PackageId
  fullName: Octopus.Client.Model.PackageReference.PackageId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PackageId
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 111
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nPackage ID or a variable-expression \n"
  example: []
  syntax:
    content: public string PackageId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PackageId As String
  overload: Octopus.Client.Model.PackageReference.PackageId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.FeedId
  commentId: P:Octopus.Client.Model.PackageReference.FeedId
  id: FeedId
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: FeedId
  nameWithType: PackageReference.FeedId
  fullName: Octopus.Client.Model.PackageReference.FeedId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FeedId
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 116
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nFeed ID or a variable-expression\n"
  example: []
  syntax:
    content: public string FeedId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FeedId As String
  overload: Octopus.Client.Model.PackageReference.FeedId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.AcquisitionLocation
  commentId: P:Octopus.Client.Model.PackageReference.AcquisitionLocation
  id: AcquisitionLocation
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: AcquisitionLocation
  nameWithType: PackageReference.AcquisitionLocation
  fullName: Octopus.Client.Model.PackageReference.AcquisitionLocation
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AcquisitionLocation
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 122
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nThe package-acquisition location.\nOne of <xref href=\"Octopus.Client.Model.PackageAcquisitionLocation\" data-throw-if-not-resolved=\"false\"></xref> or a variable-expression \n"
  example: []
  syntax:
    content: public string AcquisitionLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AcquisitionLocation As String
  overload: Octopus.Client.Model.PackageReference.AcquisitionLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReference.Properties
  commentId: P:Octopus.Client.Model.PackageReference.Properties
  id: Properties
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: PackageReference.Properties
  fullName: Octopus.Client.Model.PackageReference.Properties
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Properties
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 124
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(ObjectCreationHandling = ObjectCreationHandling.Reuse)]

      public IDictionary<string, string> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty(ObjectCreationHandling:=ObjectCreationHandling.Reuse)>

      Public ReadOnly Property Properties As IDictionary(Of String, String)
  overload: Octopus.Client.Model.PackageReference.Properties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ObjectCreationHandling
      type: Newtonsoft.Json.ObjectCreationHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PackageReference.IsPrimaryPackage
  commentId: P:Octopus.Client.Model.PackageReference.IsPrimaryPackage
  id: IsPrimaryPackage
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: IsPrimaryPackage
  nameWithType: PackageReference.IsPrimaryPackage
  fullName: Octopus.Client.Model.PackageReference.IsPrimaryPackage
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsPrimaryPackage
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 127
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonIgnore]

      public bool IsPrimaryPackage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property IsPrimaryPackage As Boolean
  overload: Octopus.Client.Model.PackageReference.IsPrimaryPackage*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PackageReference.Clone
  commentId: M:Octopus.Client.Model.PackageReference.Clone
  id: Clone
  parent: Octopus.Client.Model.PackageReference
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PackageReference.Clone()
  fullName: Octopus.Client.Model.PackageReference.Clone()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReference.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Clone
    path: ../source/Octopus.Client/Model/PackageReference.cs
    startLine: 130
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public PackageReference Clone()
    return:
      type: Octopus.Client.Model.PackageReference
    content.vb: Public Function Clone As PackageReference
  overload: Octopus.Client.Model.PackageReference.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.PackageReference.#ctor*
  commentId: Overload:Octopus.Client.Model.PackageReference.#ctor
  name: PackageReference
  nameWithType: PackageReference.PackageReference
  fullName: Octopus.Client.Model.PackageReference.PackageReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.PackageAcquisitionLocation
  commentId: T:Octopus.Client.Model.PackageAcquisitionLocation
  parent: Octopus.Client.Model
  name: PackageAcquisitionLocation
  nameWithType: PackageAcquisitionLocation
  fullName: Octopus.Client.Model.PackageAcquisitionLocation
- uid: Octopus.Client.Model.PackageReference.Id*
  commentId: Overload:Octopus.Client.Model.PackageReference.Id
  name: Id
  nameWithType: PackageReference.Id
  fullName: Octopus.Client.Model.PackageReference.Id
- uid: Octopus.Client.Model.PackageReference.Name*
  commentId: Overload:Octopus.Client.Model.PackageReference.Name
  name: Name
  nameWithType: PackageReference.Name
  fullName: Octopus.Client.Model.PackageReference.Name
- uid: Octopus.Client.Model.PackageReference.PackageId*
  commentId: Overload:Octopus.Client.Model.PackageReference.PackageId
  name: PackageId
  nameWithType: PackageReference.PackageId
  fullName: Octopus.Client.Model.PackageReference.PackageId
- uid: Octopus.Client.Model.PackageReference.FeedId*
  commentId: Overload:Octopus.Client.Model.PackageReference.FeedId
  name: FeedId
  nameWithType: PackageReference.FeedId
  fullName: Octopus.Client.Model.PackageReference.FeedId
- uid: Octopus.Client.Model.PackageReference.AcquisitionLocation*
  commentId: Overload:Octopus.Client.Model.PackageReference.AcquisitionLocation
  name: AcquisitionLocation
  nameWithType: PackageReference.AcquisitionLocation
  fullName: Octopus.Client.Model.PackageReference.AcquisitionLocation
- uid: Octopus.Client.Model.PackageReference.Properties*
  commentId: Overload:Octopus.Client.Model.PackageReference.Properties
  name: Properties
  nameWithType: PackageReference.Properties
  fullName: Octopus.Client.Model.PackageReference.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.PackageReference.IsPrimaryPackage*
  commentId: Overload:Octopus.Client.Model.PackageReference.IsPrimaryPackage
  name: IsPrimaryPackage
  nameWithType: PackageReference.IsPrimaryPackage
  fullName: Octopus.Client.Model.PackageReference.IsPrimaryPackage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.PackageReference.Clone*
  commentId: Overload:Octopus.Client.Model.PackageReference.Clone
  name: Clone
  nameWithType: PackageReference.Clone
  fullName: Octopus.Client.Model.PackageReference.Clone
- uid: Octopus.Client.Model.PackageReference
  commentId: T:Octopus.Client.Model.PackageReference
  parent: Octopus.Client.Model
  name: PackageReference
  nameWithType: PackageReference
  fullName: Octopus.Client.Model.PackageReference
