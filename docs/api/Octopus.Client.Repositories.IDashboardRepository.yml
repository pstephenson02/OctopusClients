### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IDashboardRepository
  commentId: T:Octopus.Client.Repositories.IDashboardRepository
  id: IDashboardRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IDashboardRepository.GetDashboard
  - Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard(System.String[],System.String[],Octopus.Client.Model.DashboardItemsOptions)
  langs:
  - csharp
  - vb
  name: IDashboardRepository
  nameWithType: IDashboardRepository
  fullName: Octopus.Client.Repositories.IDashboardRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/DashboardRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IDashboardRepository
    path: ../source/Octopus.Client/Repositories/DashboardRepository.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: public interface IDashboardRepository
    content.vb: Public Interface IDashboardRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IDashboardRepository.GetDashboard
  commentId: M:Octopus.Client.Repositories.IDashboardRepository.GetDashboard
  id: GetDashboard
  parent: Octopus.Client.Repositories.IDashboardRepository
  langs:
  - csharp
  - vb
  name: GetDashboard()
  nameWithType: IDashboardRepository.GetDashboard()
  fullName: Octopus.Client.Repositories.IDashboardRepository.GetDashboard()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/DashboardRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetDashboard
    path: ../source/Octopus.Client/Repositories/DashboardRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: DashboardResource GetDashboard()
    return:
      type: Octopus.Client.Model.DashboardResource
    content.vb: Function GetDashboard As DashboardResource
  overload: Octopus.Client.Repositories.IDashboardRepository.GetDashboard*
- uid: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard(System.String[],System.String[],Octopus.Client.Model.DashboardItemsOptions)
  commentId: M:Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard(System.String[],System.String[],Octopus.Client.Model.DashboardItemsOptions)
  id: GetDynamicDashboard(System.String[],System.String[],Octopus.Client.Model.DashboardItemsOptions)
  parent: Octopus.Client.Repositories.IDashboardRepository
  langs:
  - csharp
  - vb
  name: GetDynamicDashboard(String[], String[], DashboardItemsOptions)
  nameWithType: IDashboardRepository.GetDynamicDashboard(String[], String[], DashboardItemsOptions)
  fullName: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard(System.String[], System.String[], Octopus.Client.Model.DashboardItemsOptions)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/DashboardRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetDynamicDashboard
    path: ../source/Octopus.Client/Repositories/DashboardRepository.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  example: []
  syntax:
    content: DashboardResource GetDynamicDashboard(string[] projects, string[] environments, DashboardItemsOptions dashboardItemsOptions = DashboardItemsOptions.IncludeCurrentDeploymentOnly)
    parameters:
    - id: projects
      type: System.String[]
      description: ''
    - id: environments
      type: System.String[]
      description: ''
    - id: dashboardItemsOptions
      type: Octopus.Client.Model.DashboardItemsOptions
      description: options for DashboardResource Items property
    return:
      type: Octopus.Client.Model.DashboardResource
    content.vb: Function GetDynamicDashboard(projects As String(), environments As String(), dashboardItemsOptions As DashboardItemsOptions = DashboardItemsOptions.IncludeCurrentDeploymentOnly) As DashboardResource
  overload: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard*
  nameWithType.vb: IDashboardRepository.GetDynamicDashboard(String(), String(), DashboardItemsOptions)
  fullName.vb: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard(System.String(), System.String(), Octopus.Client.Model.DashboardItemsOptions)
  name.vb: GetDynamicDashboard(String(), String(), DashboardItemsOptions)
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IDashboardRepository.GetDashboard*
  commentId: Overload:Octopus.Client.Repositories.IDashboardRepository.GetDashboard
  name: GetDashboard
  nameWithType: IDashboardRepository.GetDashboard
  fullName: Octopus.Client.Repositories.IDashboardRepository.GetDashboard
- uid: Octopus.Client.Model.DashboardResource
  commentId: T:Octopus.Client.Model.DashboardResource
  parent: Octopus.Client.Model
  name: DashboardResource
  nameWithType: DashboardResource
  fullName: Octopus.Client.Model.DashboardResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard*
  commentId: Overload:Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard
  name: GetDynamicDashboard
  nameWithType: IDashboardRepository.GetDynamicDashboard
  fullName: Octopus.Client.Repositories.IDashboardRepository.GetDynamicDashboard
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.DashboardItemsOptions
  commentId: T:Octopus.Client.Model.DashboardItemsOptions
  parent: Octopus.Client.Model
  name: DashboardItemsOptions
  nameWithType: DashboardItemsOptions
  fullName: Octopus.Client.Model.DashboardItemsOptions
