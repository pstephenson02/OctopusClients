### YamlMime:ManagedReference
items:
- uid: Octopus.Client.RepositoryScope
  commentId: T:Octopus.Client.RepositoryScope
  id: RepositoryScope
  parent: Octopus.Client
  children:
  - Octopus.Client.RepositoryScope.Apply(System.Action{Octopus.Client.Model.SpaceResource},System.Action,System.Action)
  - Octopus.Client.RepositoryScope.Apply``1(System.Func{Octopus.Client.Model.SpaceResource,``0},System.Func{``0},System.Func{``0})
  - Octopus.Client.RepositoryScope.ForSpace(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.RepositoryScope.ForSystem
  - Octopus.Client.RepositoryScope.Unspecified
  langs:
  - csharp
  - vb
  name: RepositoryScope
  nameWithType: RepositoryScope
  fullName: Octopus.Client.RepositoryScope
  type: Class
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RepositoryScope
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public class RepositoryScope
    content.vb: Public Class RepositoryScope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.RepositoryScope.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.RepositoryScope.ForSpace(Octopus.Client.Model.SpaceResource)
  id: ForSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.RepositoryScope
  langs:
  - csharp
  - vb
  name: ForSpace(SpaceResource)
  nameWithType: RepositoryScope.ForSpace(SpaceResource)
  fullName: Octopus.Client.RepositoryScope.ForSpace(Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSpace
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static RepositoryScope ForSpace(SpaceResource space)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.RepositoryScope
    content.vb: Public Shared Function ForSpace(space As SpaceResource) As RepositoryScope
  overload: Octopus.Client.RepositoryScope.ForSpace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.RepositoryScope.ForSystem
  commentId: M:Octopus.Client.RepositoryScope.ForSystem
  id: ForSystem
  parent: Octopus.Client.RepositoryScope
  langs:
  - csharp
  - vb
  name: ForSystem()
  nameWithType: RepositoryScope.ForSystem()
  fullName: Octopus.Client.RepositoryScope.ForSystem()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSystem
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static RepositoryScope ForSystem()
    return:
      type: Octopus.Client.RepositoryScope
    content.vb: Public Shared Function ForSystem As RepositoryScope
  overload: Octopus.Client.RepositoryScope.ForSystem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.RepositoryScope.Unspecified
  commentId: M:Octopus.Client.RepositoryScope.Unspecified
  id: Unspecified
  parent: Octopus.Client.RepositoryScope
  langs:
  - csharp
  - vb
  name: Unspecified()
  nameWithType: RepositoryScope.Unspecified()
  fullName: Octopus.Client.RepositoryScope.Unspecified()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Unspecified
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static RepositoryScope Unspecified()
    return:
      type: Octopus.Client.RepositoryScope
    content.vb: Public Shared Function Unspecified As RepositoryScope
  overload: Octopus.Client.RepositoryScope.Unspecified*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.RepositoryScope.Apply``1(System.Func{Octopus.Client.Model.SpaceResource,``0},System.Func{``0},System.Func{``0})
  commentId: M:Octopus.Client.RepositoryScope.Apply``1(System.Func{Octopus.Client.Model.SpaceResource,``0},System.Func{``0},System.Func{``0})
  id: Apply``1(System.Func{Octopus.Client.Model.SpaceResource,``0},System.Func{``0},System.Func{``0})
  parent: Octopus.Client.RepositoryScope
  langs:
  - csharp
  - vb
  name: Apply<T>(Func<SpaceResource, T>, Func<T>, Func<T>)
  nameWithType: RepositoryScope.Apply<T>(Func<SpaceResource, T>, Func<T>, Func<T>)
  fullName: Octopus.Client.RepositoryScope.Apply<T>(System.Func<Octopus.Client.Model.SpaceResource, T>, System.Func<T>, System.Func<T>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Apply
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 32
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public T Apply<T>(Func<SpaceResource, T> whenSpaceScoped, Func<T> whenSystemScoped, Func<T> whenUnspecifiedScope)
    parameters:
    - id: whenSpaceScoped
      type: System.Func{Octopus.Client.Model.SpaceResource,{T}}
    - id: whenSystemScoped
      type: System.Func{{T}}
    - id: whenUnspecifiedScope
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Apply(Of T)(whenSpaceScoped As Func(Of SpaceResource, T), whenSystemScoped As Func(Of T), whenUnspecifiedScope As Func(Of T)) As T
  overload: Octopus.Client.RepositoryScope.Apply*
  nameWithType.vb: RepositoryScope.Apply(Of T)(Func(Of SpaceResource, T), Func(Of T), Func(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.RepositoryScope.Apply(Of T)(System.Func(Of Octopus.Client.Model.SpaceResource, T), System.Func(Of T), System.Func(Of T))
  name.vb: Apply(Of T)(Func(Of SpaceResource, T), Func(Of T), Func(Of T))
- uid: Octopus.Client.RepositoryScope.Apply(System.Action{Octopus.Client.Model.SpaceResource},System.Action,System.Action)
  commentId: M:Octopus.Client.RepositoryScope.Apply(System.Action{Octopus.Client.Model.SpaceResource},System.Action,System.Action)
  id: Apply(System.Action{Octopus.Client.Model.SpaceResource},System.Action,System.Action)
  parent: Octopus.Client.RepositoryScope
  langs:
  - csharp
  - vb
  name: Apply(Action<SpaceResource>, Action, Action)
  nameWithType: RepositoryScope.Apply(Action<SpaceResource>, Action, Action)
  fullName: Octopus.Client.RepositoryScope.Apply(System.Action<Octopus.Client.Model.SpaceResource>, System.Action, System.Action)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/RepositoryScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Apply
    path: ../source/Octopus.Client/RepositoryScope.cs
    startLine: 47
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public void Apply(Action<SpaceResource> whenSpaceScoped, Action whenSystemScoped, Action whenUnspecifiedScope)
    parameters:
    - id: whenSpaceScoped
      type: System.Action{Octopus.Client.Model.SpaceResource}
    - id: whenSystemScoped
      type: System.Action
    - id: whenUnspecifiedScope
      type: System.Action
    content.vb: Public Sub Apply(whenSpaceScoped As Action(Of SpaceResource), whenSystemScoped As Action, whenUnspecifiedScope As Action)
  overload: Octopus.Client.RepositoryScope.Apply*
  nameWithType.vb: RepositoryScope.Apply(Action(Of SpaceResource), Action, Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.RepositoryScope.Apply(System.Action(Of Octopus.Client.Model.SpaceResource), System.Action, System.Action)
  name.vb: Apply(Action(Of SpaceResource), Action, Action)
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.RepositoryScope.ForSpace*
  commentId: Overload:Octopus.Client.RepositoryScope.ForSpace
  name: ForSpace
  nameWithType: RepositoryScope.ForSpace
  fullName: Octopus.Client.RepositoryScope.ForSpace
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: Octopus.Client.RepositoryScope
  commentId: T:Octopus.Client.RepositoryScope
  parent: Octopus.Client
  name: RepositoryScope
  nameWithType: RepositoryScope
  fullName: Octopus.Client.RepositoryScope
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.RepositoryScope.ForSystem*
  commentId: Overload:Octopus.Client.RepositoryScope.ForSystem
  name: ForSystem
  nameWithType: RepositoryScope.ForSystem
  fullName: Octopus.Client.RepositoryScope.ForSystem
- uid: Octopus.Client.RepositoryScope.Unspecified*
  commentId: Overload:Octopus.Client.RepositoryScope.Unspecified
  name: Unspecified
  nameWithType: RepositoryScope.Unspecified
  fullName: Octopus.Client.RepositoryScope.Unspecified
- uid: Octopus.Client.RepositoryScope.Apply*
  commentId: Overload:Octopus.Client.RepositoryScope.Apply
  name: Apply
  nameWithType: RepositoryScope.Apply
  fullName: Octopus.Client.RepositoryScope.Apply
- uid: System.Func{Octopus.Client.Model.SpaceResource,{T}}
  commentId: T:System.Func{Octopus.Client.Model.SpaceResource,``0}
  parent: System
  definition: System.Func`2
  name: Func<SpaceResource, T>
  nameWithType: Func<SpaceResource, T>
  fullName: System.Func<Octopus.Client.Model.SpaceResource, T>
  nameWithType.vb: Func(Of SpaceResource, T)
  fullName.vb: System.Func(Of Octopus.Client.Model.SpaceResource, T)
  name.vb: Func(Of SpaceResource, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action{Octopus.Client.Model.SpaceResource}
  commentId: T:System.Action{Octopus.Client.Model.SpaceResource}
  parent: System
  definition: System.Action`1
  name: Action<SpaceResource>
  nameWithType: Action<SpaceResource>
  fullName: System.Action<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: Action(Of SpaceResource)
  fullName.vb: System.Action(Of Octopus.Client.Model.SpaceResource)
  name.vb: Action(Of SpaceResource)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
