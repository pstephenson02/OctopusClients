### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Extensions.StringExtensions
  commentId: T:Octopus.Client.Extensions.StringExtensions
  id: StringExtensions
  parent: Octopus.Client.Extensions
  children:
  - Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  - Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Octopus.Client.Extensions.StringExtensions
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Extensions/StringExtensions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: StringExtensions
    path: ../source/Octopus.Client/Extensions/StringExtensions.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Extensions
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  id: NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExtensionMethod: true
  parent: Octopus.Client.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: NewLineSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.NewLineSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Extensions/StringExtensions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: NewLineSeperate
    path: ../source/Octopus.Client/Extensions/StringExtensions.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Extensions
  syntax:
    content: public static string NewLineSeperate(this IEnumerable<object> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function NewLineSeperate(items As IEnumerable(Of Object)) As String
  overload: Octopus.Client.Extensions.StringExtensions.NewLineSeperate*
  nameWithType.vb: StringExtensions.NewLineSeperate(IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: NewLineSeperate(IEnumerable(Of Object))
- uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  id: CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExtensionMethod: true
  parent: Octopus.Client.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: CommaSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.CommaSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Extensions/StringExtensions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CommaSeperate
    path: ../source/Octopus.Client/Extensions/StringExtensions.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Extensions
  syntax:
    content: public static string CommaSeperate(this IEnumerable<object> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CommaSeperate(items As IEnumerable(Of Object)) As String
  overload: Octopus.Client.Extensions.StringExtensions.CommaSeperate*
  nameWithType.vb: StringExtensions.CommaSeperate(IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: CommaSeperate(IEnumerable(Of Object))
references:
- uid: Octopus.Client.Extensions
  commentId: N:Octopus.Client.Extensions
  name: Octopus.Client.Extensions
  nameWithType: Octopus.Client.Extensions
  fullName: Octopus.Client.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate*
  commentId: Overload:Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  name: NewLineSeperate
  nameWithType: StringExtensions.NewLineSeperate
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate*
  commentId: Overload:Octopus.Client.Extensions.StringExtensions.CommaSeperate
  name: CommaSeperate
  nameWithType: StringExtensions.CommaSeperate
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
