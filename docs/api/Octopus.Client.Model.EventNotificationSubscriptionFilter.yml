### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter
  commentId: T:Octopus.Client.Model.EventNotificationSubscriptionFilter
  id: EventNotificationSubscriptionFilter
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
  - Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
  langs:
  - csharp
  - vb
  name: EventNotificationSubscriptionFilter
  nameWithType: EventNotificationSubscriptionFilter
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EventNotificationSubscriptionFilter
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public class EventNotificationSubscriptionFilter
    content.vb: Public Class EventNotificationSubscriptionFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor
  commentId: M:Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: EventNotificationSubscriptionFilter()
  nameWithType: EventNotificationSubscriptionFilter.EventNotificationSubscriptionFilter()
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventNotificationSubscriptionFilter()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 45
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public EventNotificationSubscriptionFilter()
    content.vb: Public Sub New
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
  id: Users
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: EventNotificationSubscriptionFilter.Users
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Users
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 59
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> Users { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Users As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.Users*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
  id: Projects
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: EventNotificationSubscriptionFilter.Projects
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Projects
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 60
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> Projects { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Projects As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
  id: ProjectGroups
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: ProjectGroups
  nameWithType: EventNotificationSubscriptionFilter.ProjectGroups
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectGroups
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 61
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> ProjectGroups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property ProjectGroups As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
  id: Environments
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: Environments
  nameWithType: EventNotificationSubscriptionFilter.Environments
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Environments
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 62
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> Environments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Environments As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
  id: EventGroups
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: EventGroups
  nameWithType: EventNotificationSubscriptionFilter.EventGroups
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EventGroups
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 63
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> EventGroups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property EventGroups As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
  id: EventCategories
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: EventCategories
  nameWithType: EventNotificationSubscriptionFilter.EventCategories
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EventCategories
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 64
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> EventCategories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property EventCategories As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
  id: EventAgents
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: EventAgents
  nameWithType: EventNotificationSubscriptionFilter.EventAgents
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EventAgents
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 65
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> EventAgents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property EventAgents As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
  id: Tenants
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: Tenants
  nameWithType: EventNotificationSubscriptionFilter.Tenants
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Tenants
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 66
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> Tenants { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Tenants As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
  id: Tags
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: EventNotificationSubscriptionFilter.Tags
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Tags
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 67
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Tags As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
  commentId: P:Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
  id: DocumentTypes
  parent: Octopus.Client.Model.EventNotificationSubscriptionFilter
  langs:
  - csharp
  - vb
  name: DocumentTypes
  nameWithType: EventNotificationSubscriptionFilter.DocumentTypes
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/EventNotificationSubscription.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DocumentTypes
    path: ../source/Octopus.Client/Model/EventNotificationSubscription.cs
    startLine: 68
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IList<string> DocumentTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property DocumentTypes As IList(Of String)
  overload: Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.#ctor
  name: EventNotificationSubscriptionFilter
  nameWithType: EventNotificationSubscriptionFilter.EventNotificationSubscriptionFilter
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventNotificationSubscriptionFilter
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Users*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
  name: Users
  nameWithType: EventNotificationSubscriptionFilter.Users
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Users
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
  name: Projects
  nameWithType: EventNotificationSubscriptionFilter.Projects
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Projects
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
  name: ProjectGroups
  nameWithType: EventNotificationSubscriptionFilter.ProjectGroups
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.ProjectGroups
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
  name: Environments
  nameWithType: EventNotificationSubscriptionFilter.Environments
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Environments
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
  name: EventGroups
  nameWithType: EventNotificationSubscriptionFilter.EventGroups
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventGroups
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
  name: EventCategories
  nameWithType: EventNotificationSubscriptionFilter.EventCategories
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventCategories
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
  name: EventAgents
  nameWithType: EventNotificationSubscriptionFilter.EventAgents
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.EventAgents
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
  name: Tenants
  nameWithType: EventNotificationSubscriptionFilter.Tenants
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tenants
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
  name: Tags
  nameWithType: EventNotificationSubscriptionFilter.Tags
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.Tags
- uid: Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes*
  commentId: Overload:Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
  name: DocumentTypes
  nameWithType: EventNotificationSubscriptionFilter.DocumentTypes
  fullName: Octopus.Client.Model.EventNotificationSubscriptionFilter.DocumentTypes
