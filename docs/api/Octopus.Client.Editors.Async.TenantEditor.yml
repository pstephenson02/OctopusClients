### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Editors.Async.TenantEditor
  commentId: T:Octopus.Client.Editors.Async.TenantEditor
  id: TenantEditor
  parent: Octopus.Client.Editors.Async
  children:
  - Octopus.Client.Editors.Async.TenantEditor.#ctor(Octopus.Client.Repositories.Async.ITenantRepository)
  - Octopus.Client.Editors.Async.TenantEditor.ClearProjects
  - Octopus.Client.Editors.Async.TenantEditor.ClearTags
  - Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource,Octopus.Client.Model.EnvironmentResource[])
  - Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String)
  - Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String,System.String,System.String)
  - Octopus.Client.Editors.Async.TenantEditor.Customize(System.Action{Octopus.Client.Model.TenantResource})
  - Octopus.Client.Editors.Async.TenantEditor.Instance
  - Octopus.Client.Editors.Async.TenantEditor.Save
  - Octopus.Client.Editors.Async.TenantEditor.SetLogo(System.String)
  - Octopus.Client.Editors.Async.TenantEditor.Variables
  - Octopus.Client.Editors.Async.TenantEditor.WithTag(Octopus.Client.Model.TagResource)
  langs:
  - csharp
  - vb
  name: TenantEditor
  nameWithType: TenantEditor
  fullName: Octopus.Client.Editors.Async.TenantEditor
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TenantEditor
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: 'public class TenantEditor : IResourceEditor<TenantResource, TenantEditor>, IResourceBuilder'
    content.vb: >-
      Public Class TenantEditor
          Implements IResourceEditor(Of TenantResource, TenantEditor), IResourceBuilder
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  - Octopus.Client.Editors.Async.IResourceBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Editors.Async.TenantEditor.#ctor(Octopus.Client.Repositories.Async.ITenantRepository)
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.#ctor(Octopus.Client.Repositories.Async.ITenantRepository)
  id: '#ctor(Octopus.Client.Repositories.Async.ITenantRepository)'
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: TenantEditor(ITenantRepository)
  nameWithType: TenantEditor.TenantEditor(ITenantRepository)
  fullName: Octopus.Client.Editors.Async.TenantEditor.TenantEditor(Octopus.Client.Repositories.Async.ITenantRepository)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 14
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor(ITenantRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.Repositories.Async.ITenantRepository
    content.vb: Public Sub New(repository As ITenantRepository)
  overload: Octopus.Client.Editors.Async.TenantEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.Instance
  commentId: P:Octopus.Client.Editors.Async.TenantEditor.Instance
  id: Instance
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TenantEditor.Instance
  fullName: Octopus.Client.Editors.Async.TenantEditor.Instance
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Instance
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantResource Instance { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.TenantResource
    content.vb: Public ReadOnly Property Instance As TenantResource
  overload: Octopus.Client.Editors.Async.TenantEditor.Instance*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Instance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Editors.Async.TenantEditor.Variables
  commentId: P:Octopus.Client.Editors.Async.TenantEditor.Variables
  id: Variables
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: TenantEditor.Variables
  fullName: Octopus.Client.Editors.Async.TenantEditor.Variables
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Variables
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<TenantVariablesEditor> Variables { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantVariablesEditor}
    content.vb: Public ReadOnly Property Variables As Task(Of TenantVariablesEditor)
  overload: Octopus.Client.Editors.Async.TenantEditor.Variables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String)
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String)
  id: CreateOrModify(System.String)
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(String)
  nameWithType: TenantEditor.CreateOrModify(String)
  fullName: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<TenantEditor> CreateOrModify(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
    content.vb: Public Function CreateOrModify(name As String) As Task(Of TenantEditor)
  overload: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String,System.String,System.String)
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String,System.String,System.String)
  id: CreateOrModify(System.String,System.String,System.String)
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, String, String)
  nameWithType: TenantEditor.CreateOrModify(String, String, String)
  fullName: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<TenantEditor> CreateOrModify(string name, string description, string cloneId = null)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: cloneId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
    content.vb: Public Function CreateOrModify(name As String, description As String, cloneId As String = Nothing) As Task(Of TenantEditor)
  overload: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.SetLogo(System.String)
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.SetLogo(System.String)
  id: SetLogo(System.String)
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: SetLogo(String)
  nameWithType: TenantEditor.SetLogo(String)
  fullName: Octopus.Client.Editors.Async.TenantEditor.SetLogo(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SetLogo
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 71
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<TenantEditor> SetLogo(string logoFilePath)
    parameters:
    - id: logoFilePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
    content.vb: Public Function SetLogo(logoFilePath As String) As Task(Of TenantEditor)
  overload: Octopus.Client.Editors.Async.TenantEditor.SetLogo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.ClearTags
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.ClearTags
  id: ClearTags
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: ClearTags()
  nameWithType: TenantEditor.ClearTags()
  fullName: Octopus.Client.Editors.Async.TenantEditor.ClearTags()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ClearTags
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 81
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor ClearTags()
    return:
      type: Octopus.Client.Editors.Async.TenantEditor
    content.vb: Public Function ClearTags As TenantEditor
  overload: Octopus.Client.Editors.Async.TenantEditor.ClearTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.WithTag(Octopus.Client.Model.TagResource)
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.WithTag(Octopus.Client.Model.TagResource)
  id: WithTag(Octopus.Client.Model.TagResource)
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: WithTag(TagResource)
  nameWithType: TenantEditor.WithTag(TagResource)
  fullName: Octopus.Client.Editors.Async.TenantEditor.WithTag(Octopus.Client.Model.TagResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: WithTag
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 87
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor WithTag(TagResource tag)
    parameters:
    - id: tag
      type: Octopus.Client.Model.TagResource
    return:
      type: Octopus.Client.Editors.Async.TenantEditor
    content.vb: Public Function WithTag(tag As TagResource) As TenantEditor
  overload: Octopus.Client.Editors.Async.TenantEditor.WithTag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.ClearProjects
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.ClearProjects
  id: ClearProjects
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: ClearProjects()
  nameWithType: TenantEditor.ClearProjects()
  fullName: Octopus.Client.Editors.Async.TenantEditor.ClearProjects()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ClearProjects
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 93
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor ClearProjects()
    return:
      type: Octopus.Client.Editors.Async.TenantEditor
    content.vb: Public Function ClearProjects As TenantEditor
  overload: Octopus.Client.Editors.Async.TenantEditor.ClearProjects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource,Octopus.Client.Model.EnvironmentResource[])
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource,Octopus.Client.Model.EnvironmentResource[])
  id: ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource,Octopus.Client.Model.EnvironmentResource[])
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: ConnectToProjectAndEnvironments(ProjectResource, EnvironmentResource[])
  nameWithType: TenantEditor.ConnectToProjectAndEnvironments(ProjectResource, EnvironmentResource[])
  fullName: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ConnectToProjectAndEnvironments
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 99
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor ConnectToProjectAndEnvironments(ProjectResource project, params EnvironmentResource[] environments)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: environments
      type: Octopus.Client.Model.EnvironmentResource[]
    return:
      type: Octopus.Client.Editors.Async.TenantEditor
    content.vb: Public Function ConnectToProjectAndEnvironments(project As ProjectResource, ParamArray environments As EnvironmentResource()) As TenantEditor
  overload: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments*
  nameWithType.vb: TenantEditor.ConnectToProjectAndEnvironments(ProjectResource, EnvironmentResource())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource())
  name.vb: ConnectToProjectAndEnvironments(ProjectResource, EnvironmentResource())
- uid: Octopus.Client.Editors.Async.TenantEditor.Customize(System.Action{Octopus.Client.Model.TenantResource})
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.Customize(System.Action{Octopus.Client.Model.TenantResource})
  id: Customize(System.Action{Octopus.Client.Model.TenantResource})
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: Customize(Action<TenantResource>)
  nameWithType: TenantEditor.Customize(Action<TenantResource>)
  fullName: Octopus.Client.Editors.Async.TenantEditor.Customize(System.Action<Octopus.Client.Model.TenantResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Customize
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 105
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public TenantEditor Customize(Action<TenantResource> customize)
    parameters:
    - id: customize
      type: System.Action{Octopus.Client.Model.TenantResource}
    return:
      type: Octopus.Client.Editors.Async.TenantEditor
    content.vb: Public Function Customize(customize As Action(Of TenantResource)) As TenantEditor
  overload: Octopus.Client.Editors.Async.TenantEditor.Customize*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Customize(System.Action{Octopus.Client.Model.TenantResource})
  nameWithType.vb: TenantEditor.Customize(Action(Of TenantResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.TenantEditor.Customize(System.Action(Of Octopus.Client.Model.TenantResource))
  name.vb: Customize(Action(Of TenantResource))
- uid: Octopus.Client.Editors.Async.TenantEditor.Save
  commentId: M:Octopus.Client.Editors.Async.TenantEditor.Save
  id: Save
  parent: Octopus.Client.Editors.Async.TenantEditor
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: TenantEditor.Save()
  fullName: Octopus.Client.Editors.Async.TenantEditor.Save()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/TenantEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Save
    path: ../source/Octopus.Client/Editors/Async/TenantEditor.cs
    startLine: 111
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<TenantEditor> Save()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
    content.vb: Public Function Save As Task(Of TenantEditor)
  overload: Octopus.Client.Editors.Async.TenantEditor.Save*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Editors.Async
  commentId: N:Octopus.Client.Editors.Async
  name: Octopus.Client.Editors.Async
  nameWithType: Octopus.Client.Editors.Async
  fullName: Octopus.Client.Editors.Async
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  parent: Octopus.Client.Editors.Async
  definition: Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<TenantResource, TenantEditor>
  nameWithType: IResourceEditor<TenantResource, TenantEditor>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>
  nameWithType.vb: IResourceEditor(Of TenantResource, TenantEditor)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor)
  name.vb: IResourceEditor(Of TenantResource, TenantEditor)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.TenantEditor
    name: TenantEditor
    nameWithType: TenantEditor
    fullName: Octopus.Client.Editors.Async.TenantEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.TenantEditor
    name: TenantEditor
    nameWithType: TenantEditor
    fullName: Octopus.Client.Editors.Async.TenantEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceBuilder
  commentId: T:Octopus.Client.Editors.Async.IResourceBuilder
  parent: Octopus.Client.Editors.Async
  name: IResourceBuilder
  nameWithType: IResourceBuilder
  fullName: Octopus.Client.Editors.Async.IResourceBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors.Async.IResourceEditor`2
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<TResource, TResourceBuilder>
  nameWithType: IResourceEditor<TResource, TResourceBuilder>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder)
  name.vb: IResourceEditor(Of TResource, TResourceBuilder)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.TenantEditor.#ctor*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.#ctor
  name: TenantEditor
  nameWithType: TenantEditor.TenantEditor
  fullName: Octopus.Client.Editors.Async.TenantEditor.TenantEditor
- uid: Octopus.Client.Repositories.Async.ITenantRepository
  commentId: T:Octopus.Client.Repositories.Async.ITenantRepository
  parent: Octopus.Client.Repositories.Async
  name: ITenantRepository
  nameWithType: ITenantRepository
  fullName: Octopus.Client.Repositories.Async.ITenantRepository
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Editors.Async.TenantEditor.Instance*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.Instance
  name: Instance
  nameWithType: TenantEditor.Instance
  fullName: Octopus.Client.Editors.Async.TenantEditor.Instance
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Instance
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<TenantResource, TenantEditor>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>.Instance
  nameWithType.vb: IResourceEditor(Of TenantResource, TenantEditor).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor).Instance
- uid: Octopus.Client.Model.TenantResource
  commentId: T:Octopus.Client.Model.TenantResource
  parent: Octopus.Client.Model
  name: TenantResource
  nameWithType: TenantResource
  fullName: Octopus.Client.Model.TenantResource
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Instance
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Instance
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Editors.Async.TenantEditor.Variables*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.Variables
  name: Variables
  nameWithType: TenantEditor.Variables
  fullName: Octopus.Client.Editors.Async.TenantEditor.Variables
- uid: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantVariablesEditor}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantVariablesEditor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TenantVariablesEditor>
  nameWithType: Task<TenantVariablesEditor>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Editors.Async.TenantVariablesEditor>
  nameWithType.vb: Task(Of TenantVariablesEditor)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Editors.Async.TenantVariablesEditor)
  name.vb: Task(Of TenantVariablesEditor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Editors.Async.TenantVariablesEditor
    name: TenantVariablesEditor
    nameWithType: TenantVariablesEditor
    fullName: Octopus.Client.Editors.Async.TenantVariablesEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Editors.Async.TenantVariablesEditor
    name: TenantVariablesEditor
    nameWithType: TenantVariablesEditor
    fullName: Octopus.Client.Editors.Async.TenantVariablesEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.CreateOrModify
  name: CreateOrModify
  nameWithType: TenantEditor.CreateOrModify
  fullName: Octopus.Client.Editors.Async.TenantEditor.CreateOrModify
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Editors.Async.TenantEditor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TenantEditor>
  nameWithType: Task<TenantEditor>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Editors.Async.TenantEditor>
  nameWithType.vb: Task(Of TenantEditor)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Editors.Async.TenantEditor)
  name.vb: Task(Of TenantEditor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Editors.Async.TenantEditor
    name: TenantEditor
    nameWithType: TenantEditor
    fullName: Octopus.Client.Editors.Async.TenantEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Editors.Async.TenantEditor
    name: TenantEditor
    nameWithType: TenantEditor
    fullName: Octopus.Client.Editors.Async.TenantEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.TenantEditor.SetLogo*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.SetLogo
  name: SetLogo
  nameWithType: TenantEditor.SetLogo
  fullName: Octopus.Client.Editors.Async.TenantEditor.SetLogo
- uid: Octopus.Client.Editors.Async.TenantEditor.ClearTags*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.ClearTags
  name: ClearTags
  nameWithType: TenantEditor.ClearTags
  fullName: Octopus.Client.Editors.Async.TenantEditor.ClearTags
- uid: Octopus.Client.Editors.Async.TenantEditor
  commentId: T:Octopus.Client.Editors.Async.TenantEditor
  parent: Octopus.Client.Editors.Async
  name: TenantEditor
  nameWithType: TenantEditor
  fullName: Octopus.Client.Editors.Async.TenantEditor
- uid: Octopus.Client.Editors.Async.TenantEditor.WithTag*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.WithTag
  name: WithTag
  nameWithType: TenantEditor.WithTag
  fullName: Octopus.Client.Editors.Async.TenantEditor.WithTag
- uid: Octopus.Client.Model.TagResource
  commentId: T:Octopus.Client.Model.TagResource
  parent: Octopus.Client.Model
  name: TagResource
  nameWithType: TagResource
  fullName: Octopus.Client.Model.TagResource
- uid: Octopus.Client.Editors.Async.TenantEditor.ClearProjects*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.ClearProjects
  name: ClearProjects
  nameWithType: TenantEditor.ClearProjects
  fullName: Octopus.Client.Editors.Async.TenantEditor.ClearProjects
- uid: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments
  name: ConnectToProjectAndEnvironments
  nameWithType: TenantEditor.ConnectToProjectAndEnvironments
  fullName: Octopus.Client.Editors.Async.TenantEditor.ConnectToProjectAndEnvironments
- uid: Octopus.Client.Model.ProjectResource
  commentId: T:Octopus.Client.Model.ProjectResource
  parent: Octopus.Client.Model
  name: ProjectResource
  nameWithType: ProjectResource
  fullName: Octopus.Client.Model.ProjectResource
- uid: Octopus.Client.Model.EnvironmentResource[]
  isExternal: true
  name: EnvironmentResource[]
  nameWithType: EnvironmentResource[]
  fullName: Octopus.Client.Model.EnvironmentResource[]
  nameWithType.vb: EnvironmentResource()
  fullName.vb: Octopus.Client.Model.EnvironmentResource()
  name.vb: EnvironmentResource()
  spec.csharp:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Editors.Async.TenantEditor.Customize*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.Customize
  name: Customize
  nameWithType: TenantEditor.Customize
  fullName: Octopus.Client.Editors.Async.TenantEditor.Customize
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Customize(System.Action{Octopus.Client.Model.TenantResource})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Customize(System.Action{Octopus.Client.Model.TenantResource})
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  name: Customize(Action<TenantResource>)
  nameWithType: IResourceEditor<TenantResource, TenantEditor>.Customize(Action<TenantResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>.Customize(System.Action<Octopus.Client.Model.TenantResource>)
  nameWithType.vb: IResourceEditor(Of TenantResource, TenantEditor).Customize(Action(Of TenantResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor).Customize(System.Action(Of Octopus.Client.Model.TenantResource))
  name.vb: Customize(Action(Of TenantResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<TenantResource, TenantEditor>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of TenantResource, TenantEditor).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Octopus.Client.Model.TenantResource}
  commentId: T:System.Action{Octopus.Client.Model.TenantResource}
  parent: System
  definition: System.Action`1
  name: Action<TenantResource>
  nameWithType: Action<TenantResource>
  fullName: System.Action<Octopus.Client.Model.TenantResource>
  nameWithType.vb: Action(Of TenantResource)
  fullName.vb: System.Action(Of Octopus.Client.Model.TenantResource)
  name.vb: Action(Of TenantResource)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  isExternal: true
  name: Customize(Action<TResource>)
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize(Action<TResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize(System.Action<TResource>)
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Customize(Action(Of TResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize(System.Action(Of TResource))
  name.vb: Customize(Action(Of TResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.TenantEditor.Save*
  commentId: Overload:Octopus.Client.Editors.Async.TenantEditor.Save
  name: Save
  nameWithType: TenantEditor.Save
  fullName: Octopus.Client.Editors.Async.TenantEditor.Save
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}.Save
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.TenantResource,Octopus.Client.Editors.Async.TenantEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<TenantResource, TenantEditor>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>.Save()
  nameWithType.vb: IResourceEditor(Of TenantResource, TenantEditor).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<TenantResource, TenantEditor>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of TenantResource, TenantEditor).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.TenantResource, Octopus.Client.Editors.Async.TenantEditor).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save()
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
