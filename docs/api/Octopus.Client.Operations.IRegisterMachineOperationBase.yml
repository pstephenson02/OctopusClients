### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase
  commentId: T:Octopus.Client.Operations.IRegisterMachineOperationBase
  id: IRegisterMachineOperationBase
  parent: Octopus.Client.Operations
  children:
  - Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
  - Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
  - Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.IOctopusSpaceRepository)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusRepository)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusServerEndpoint)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
  - Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
  - Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
  - Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
  - Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
  - Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
  - Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
  - Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
  langs:
  - csharp
  - vb
  name: IRegisterMachineOperationBase
  nameWithType: IRegisterMachineOperationBase
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IRegisterMachineOperationBase
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nBase for registering Deployment Targets and Workers\n"
  example: []
  syntax:
    content: public interface IRegisterMachineOperationBase
    content.vb: Public Interface IRegisterMachineOperationBase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
  id: MachineName
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: MachineName
  nameWithType: IRegisterMachineOperationBase.MachineName
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MachineName
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 14
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the name of the machine that will be used within Octopus to identify this machine.\n"
  example: []
  syntax:
    content: string MachineName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property MachineName As String
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
  id: MachinePolicy
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: MachinePolicy
  nameWithType: IRegisterMachineOperationBase.MachinePolicy
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MachinePolicy
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the machine policy that applies to this machine.\n"
  example: []
  syntax:
    content: string MachinePolicy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property MachinePolicy As String
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
  id: TentacleHostname
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: TentacleHostname
  nameWithType: IRegisterMachineOperationBase.TentacleHostname
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TentacleHostname
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the hostname that Octopus should use when communicating with the Tentacle.\n"
  example: []
  syntax:
    content: string TentacleHostname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property TentacleHostname As String
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
  id: TentaclePort
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: TentaclePort
  nameWithType: IRegisterMachineOperationBase.TentaclePort
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TentaclePort
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the TCP port that Octopus should use when communicating with the Tentacle.\n"
  example: []
  syntax:
    content: int TentaclePort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property TentaclePort As Integer
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
  id: TentacleThumbprint
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: TentacleThumbprint
  nameWithType: IRegisterMachineOperationBase.TentacleThumbprint
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TentacleThumbprint
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the certificate thumbprint that Octopus should expect when communicating with the Tentacle.\n"
  example: []
  syntax:
    content: string TentacleThumbprint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property TentacleThumbprint As String
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
  id: ProxyName
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: ProxyName
  nameWithType: IRegisterMachineOperationBase.ProxyName
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProxyName
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 39
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nGets or sets the name of the proxy that Octopus should use when communicating with the Tentacle.\n"
  example: []
  syntax:
    content: string ProxyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ProxyName As String
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
  id: AllowOverwrite
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: AllowOverwrite
  nameWithType: IRegisterMachineOperationBase.AllowOverwrite
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AllowOverwrite
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 46
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nIf a machine with the same name already exists, it won&apos;t be overwritten by default (instead, an\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown).\nSet this property to <code>true</code> if you do want the existing machine to be overwritten.\n"
  example: []
  syntax:
    content: bool AllowOverwrite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AllowOverwrite As Boolean
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
  id: CommunicationStyle
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: CommunicationStyle
  nameWithType: IRegisterMachineOperationBase.CommunicationStyle
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CommunicationStyle
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 53
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nThe communication style to use with the Tentacle. Allowed values are: TentacleActive, in which case the\nTentacle will connect to the Octopus Server for instructions; or, TentaclePassive, in which case the\nTentacle will listen for commands from the server (default).\n"
  example: []
  syntax:
    content: CommunicationStyle CommunicationStyle { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.CommunicationStyle
    content.vb: Property CommunicationStyle As CommunicationStyle
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
  commentId: P:Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
  id: SubscriptionId
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: IRegisterMachineOperationBase.SubscriptionId
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SubscriptionId
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 55
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  syntax:
    content: Uri SubscriptionId { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Property SubscriptionId As Uri
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId*
  modifiers.csharp:
  - get
  - set
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusServerEndpoint)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusServerEndpoint)
  id: Execute(Octopus.Client.OctopusServerEndpoint)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: Execute(OctopusServerEndpoint)
  nameWithType: IRegisterMachineOperationBase.Execute(OctopusServerEndpoint)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusServerEndpoint)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Execute
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 61
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: void Execute(OctopusServerEndpoint serverEndpoint)
    parameters:
    - id: serverEndpoint
      type: Octopus.Client.OctopusServerEndpoint
      description: The Octopus Deploy server endpoint.
    content.vb: Sub Execute(serverEndpoint As OctopusServerEndpoint)
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute*
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusRepository)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusRepository)
  id: Execute(Octopus.Client.OctopusRepository)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: Execute(OctopusRepository)
  nameWithType: IRegisterMachineOperationBase.Execute(OctopusRepository)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.OctopusRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Execute
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 67
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: void Execute(OctopusRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.OctopusRepository
      description: The Octopus Deploy repository.
    content.vb: Sub Execute(repository As OctopusRepository)
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute*
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.IOctopusSpaceRepository)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.IOctopusSpaceRepository)
  id: Execute(Octopus.Client.IOctopusSpaceRepository)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: Execute(IOctopusSpaceRepository)
  nameWithType: IRegisterMachineOperationBase.Execute(IOctopusSpaceRepository)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute(Octopus.Client.IOctopusSpaceRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Execute
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 73
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: void Execute(IOctopusSpaceRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.IOctopusSpaceRepository
      description: The Octopus Deploy repository.
    content.vb: Sub Execute(repository As IOctopusSpaceRepository)
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute*
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
  id: ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: ExecuteAsync(OctopusServerEndpoint)
  nameWithType: IRegisterMachineOperationBase.ExecuteAsync(OctopusServerEndpoint)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ExecuteAsync
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 79
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: Task ExecuteAsync(OctopusServerEndpoint serverEndpoint)
    parameters:
    - id: serverEndpoint
      type: Octopus.Client.OctopusServerEndpoint
      description: The Octopus Deploy server endpoint.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ExecuteAsync(serverEndpoint As OctopusServerEndpoint) As Task
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync*
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
  id: ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: ExecuteAsync(OctopusAsyncRepository)
  nameWithType: IRegisterMachineOperationBase.ExecuteAsync(OctopusAsyncRepository)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ExecuteAsync
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 85
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: Task ExecuteAsync(OctopusAsyncRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.OctopusAsyncRepository
      description: The Octopus Deploy repository.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ExecuteAsync(repository As OctopusAsyncRepository) As Task
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync*
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  commentId: M:Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  id: ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  parent: Octopus.Client.Operations.IRegisterMachineOperationBase
  langs:
  - csharp
  - vb
  name: ExecuteAsync(IOctopusSpaceAsyncRepository)
  nameWithType: IRegisterMachineOperationBase.ExecuteAsync(IOctopusSpaceAsyncRepository)
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ExecuteAsync
    path: ../source/Octopus.Client/Operations/IRegisterMachineOperationBase.cs
    startLine: 91
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Operations
  summary: "\nExecutes the operation against the specified Octopus Deploy server.\n"
  example: []
  syntax:
    content: Task ExecuteAsync(IOctopusSpaceAsyncRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.IOctopusSpaceAsyncRepository
      description: The Octopus Deploy repository.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ExecuteAsync(repository As IOctopusSpaceAsyncRepository) As Task
  overload: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync*
references:
- uid: Octopus.Client.Operations
  commentId: N:Octopus.Client.Operations
  name: Octopus.Client.Operations
  nameWithType: Octopus.Client.Operations
  fullName: Octopus.Client.Operations
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
  name: MachineName
  nameWithType: IRegisterMachineOperationBase.MachineName
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.MachineName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
  name: MachinePolicy
  nameWithType: IRegisterMachineOperationBase.MachinePolicy
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.MachinePolicy
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
  name: TentacleHostname
  nameWithType: IRegisterMachineOperationBase.TentacleHostname
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleHostname
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
  name: TentaclePort
  nameWithType: IRegisterMachineOperationBase.TentaclePort
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentaclePort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
  name: TentacleThumbprint
  nameWithType: IRegisterMachineOperationBase.TentacleThumbprint
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.TentacleThumbprint
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
  name: ProxyName
  nameWithType: IRegisterMachineOperationBase.ProxyName
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ProxyName
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
  name: AllowOverwrite
  nameWithType: IRegisterMachineOperationBase.AllowOverwrite
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.AllowOverwrite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
  name: CommunicationStyle
  nameWithType: IRegisterMachineOperationBase.CommunicationStyle
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.CommunicationStyle
- uid: Octopus.Client.Model.CommunicationStyle
  commentId: T:Octopus.Client.Model.CommunicationStyle
  parent: Octopus.Client.Model
  name: CommunicationStyle
  nameWithType: CommunicationStyle
  fullName: Octopus.Client.Model.CommunicationStyle
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
  name: SubscriptionId
  nameWithType: IRegisterMachineOperationBase.SubscriptionId
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.SubscriptionId
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.Execute
  name: Execute
  nameWithType: IRegisterMachineOperationBase.Execute
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.Execute
- uid: Octopus.Client.OctopusServerEndpoint
  commentId: T:Octopus.Client.OctopusServerEndpoint
  parent: Octopus.Client
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: Octopus.Client.OctopusRepository
  commentId: T:Octopus.Client.OctopusRepository
  parent: Octopus.Client
  name: OctopusRepository
  nameWithType: OctopusRepository
  fullName: Octopus.Client.OctopusRepository
- uid: Octopus.Client.IOctopusSpaceRepository
  commentId: T:Octopus.Client.IOctopusSpaceRepository
  parent: Octopus.Client
  name: IOctopusSpaceRepository
  nameWithType: IOctopusSpaceRepository
  fullName: Octopus.Client.IOctopusSpaceRepository
- uid: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync*
  commentId: Overload:Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync
  name: ExecuteAsync
  nameWithType: IRegisterMachineOperationBase.ExecuteAsync
  fullName: Octopus.Client.Operations.IRegisterMachineOperationBase.ExecuteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.OctopusAsyncRepository
  commentId: T:Octopus.Client.OctopusAsyncRepository
  parent: Octopus.Client
  name: OctopusAsyncRepository
  nameWithType: OctopusAsyncRepository
  fullName: Octopus.Client.OctopusAsyncRepository
- uid: Octopus.Client.IOctopusSpaceAsyncRepository
  commentId: T:Octopus.Client.IOctopusSpaceAsyncRepository
  parent: Octopus.Client
  name: IOctopusSpaceAsyncRepository
  nameWithType: IOctopusSpaceAsyncRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository
