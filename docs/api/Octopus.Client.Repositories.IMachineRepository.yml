### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IMachineRepository
  commentId: T:Octopus.Client.Repositories.IMachineRepository
  id: IMachineRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  - Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  - Octopus.Client.Repositories.IMachineRepository.Discover(Octopus.Client.Model.DiscoverMachineOptions)
  - Octopus.Client.Repositories.IMachineRepository.Discover(System.String,System.Int32,System.Nullable{Octopus.Client.Model.DiscoverableEndpointType})
  - Octopus.Client.Repositories.IMachineRepository.FindByThumbprint(System.String)
  - Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus(Octopus.Client.Model.MachineResource)
  - Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource)
  - Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource,System.Object)
  - Octopus.Client.Repositories.IMachineRepository.List(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IMachineRepository
  nameWithType: IMachineRepository
  fullName: Octopus.Client.Repositories.IMachineRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IMachineRepository
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface IMachineRepository : IFindByName<MachineResource>, IPaginate<MachineResource>, IGet<MachineResource>, ICreate<MachineResource>, IModify<MachineResource>, IDelete<MachineResource>'
    content.vb: >-
      Public Interface IMachineRepository
          Inherits IFindByName(Of MachineResource), IGet(Of MachineResource), ICreate(Of MachineResource), IModify(Of MachineResource), IDelete(Of MachineResource)
  inheritedMembers:
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByName(System.String,System.String,System.Object)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindOne(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindMany(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Refresh(Octopus.Client.Model.MachineResource)
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}.Create(Octopus.Client.Model.MachineResource,System.Object)
  - Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}.Modify(Octopus.Client.Model.MachineResource)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}.Delete(Octopus.Client.Model.MachineResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IMachineRepository.Discover(System.String,System.Int32,System.Nullable{Octopus.Client.Model.DiscoverableEndpointType})
  commentId: M:Octopus.Client.Repositories.IMachineRepository.Discover(System.String,System.Int32,System.Nullable{Octopus.Client.Model.DiscoverableEndpointType})
  id: Discover(System.String,System.Int32,System.Nullable{Octopus.Client.Model.DiscoverableEndpointType})
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: Discover(String, Int32, Nullable<DiscoverableEndpointType>)
  nameWithType: IMachineRepository.Discover(String, Int32, Nullable<DiscoverableEndpointType>)
  fullName: Octopus.Client.Repositories.IMachineRepository.Discover(System.String, System.Int32, System.Nullable<Octopus.Client.Model.DiscoverableEndpointType>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Discover
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: MachineResource Discover(string host, int port = 10933, DiscoverableEndpointType? discoverableEndpointType = default(DiscoverableEndpointType? ))
    parameters:
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    - id: discoverableEndpointType
      type: System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
    return:
      type: Octopus.Client.Model.MachineResource
    content.vb: Function Discover(host As String, port As Integer = 10933, discoverableEndpointType As DiscoverableEndpointType? = Nothing) As MachineResource
  overload: Octopus.Client.Repositories.IMachineRepository.Discover*
  nameWithType.vb: IMachineRepository.Discover(String, Int32, Nullable(Of DiscoverableEndpointType))
  fullName.vb: Octopus.Client.Repositories.IMachineRepository.Discover(System.String, System.Int32, System.Nullable(Of Octopus.Client.Model.DiscoverableEndpointType))
  name.vb: Discover(String, Int32, Nullable(Of DiscoverableEndpointType))
- uid: Octopus.Client.Repositories.IMachineRepository.Discover(Octopus.Client.Model.DiscoverMachineOptions)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.Discover(Octopus.Client.Model.DiscoverMachineOptions)
  id: Discover(Octopus.Client.Model.DiscoverMachineOptions)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: Discover(DiscoverMachineOptions)
  nameWithType: IMachineRepository.Discover(DiscoverMachineOptions)
  fullName: Octopus.Client.Repositories.IMachineRepository.Discover(Octopus.Client.Model.DiscoverMachineOptions)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Discover
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: MachineResource Discover(DiscoverMachineOptions options)
    parameters:
    - id: options
      type: Octopus.Client.Model.DiscoverMachineOptions
    return:
      type: Octopus.Client.Model.MachineResource
    content.vb: Function Discover(options As DiscoverMachineOptions) As MachineResource
  overload: Octopus.Client.Repositories.IMachineRepository.Discover*
- uid: Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus(Octopus.Client.Model.MachineResource)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus(Octopus.Client.Model.MachineResource)
  id: GetConnectionStatus(Octopus.Client.Model.MachineResource)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: GetConnectionStatus(MachineResource)
  nameWithType: IMachineRepository.GetConnectionStatus(MachineResource)
  fullName: Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus(Octopus.Client.Model.MachineResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetConnectionStatus
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: MachineConnectionStatus GetConnectionStatus(MachineResource machine)
    parameters:
    - id: machine
      type: Octopus.Client.Model.MachineResource
    return:
      type: Octopus.Client.Model.MachineConnectionStatus
    content.vb: Function GetConnectionStatus(machine As MachineResource) As MachineConnectionStatus
  overload: Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus*
- uid: Octopus.Client.Repositories.IMachineRepository.FindByThumbprint(System.String)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.FindByThumbprint(System.String)
  id: FindByThumbprint(System.String)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: FindByThumbprint(String)
  nameWithType: IMachineRepository.FindByThumbprint(String)
  fullName: Octopus.Client.Repositories.IMachineRepository.FindByThumbprint(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FindByThumbprint
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: List<MachineResource> FindByThumbprint(string thumbprint)
    parameters:
    - id: thumbprint
      type: System.String
    return:
      type: System.Collections.Generic.List{Octopus.Client.Model.MachineResource}
    content.vb: Function FindByThumbprint(thumbprint As String) As List(Of MachineResource)
  overload: Octopus.Client.Repositories.IMachineRepository.FindByThumbprint*
- uid: Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource)
  id: GetTasks(Octopus.Client.Model.MachineResource)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: GetTasks(MachineResource)
  nameWithType: IMachineRepository.GetTasks(MachineResource)
  fullName: Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetTasks
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 14
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: IReadOnlyList<TaskResource> GetTasks(MachineResource machine)
    parameters:
    - id: machine
      type: Octopus.Client.Model.MachineResource
    return:
      type: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.TaskResource}
    content.vb: Function GetTasks(machine As MachineResource) As IReadOnlyList(Of TaskResource)
  overload: Octopus.Client.Repositories.IMachineRepository.GetTasks*
- uid: Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource,System.Object)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource,System.Object)
  id: GetTasks(Octopus.Client.Model.MachineResource,System.Object)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: GetTasks(MachineResource, Object)
  nameWithType: IMachineRepository.GetTasks(MachineResource, Object)
  fullName: Octopus.Client.Repositories.IMachineRepository.GetTasks(Octopus.Client.Model.MachineResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetTasks
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: IReadOnlyList<TaskResource> GetTasks(MachineResource machine, object pathParameters)
    parameters:
    - id: machine
      type: Octopus.Client.Model.MachineResource
    - id: pathParameters
      type: System.Object
    return:
      type: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.TaskResource}
    content.vb: Function GetTasks(machine As MachineResource, pathParameters As Object) As IReadOnlyList(Of TaskResource)
  overload: Octopus.Client.Repositories.IMachineRepository.GetTasks*
- uid: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  commentId: M:Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  id: CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, EndpointResource, EnvironmentResource[], String[], TenantResource[], TagResource[], Nullable<TenantedDeploymentMode>)
  nameWithType: IMachineRepository.CreateOrModify(String, EndpointResource, EnvironmentResource[], String[], TenantResource[], TagResource[], Nullable<TenantedDeploymentMode>)
  fullName: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], System.String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], System.Nullable<Octopus.Client.Model.TenantedDeploymentMode>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, string[] roles, TenantResource[] tenants, TagResource[] tenantTags, TenantedDeploymentMode? tenantedDeploymentParticipation)
    parameters:
    - id: name
      type: System.String
    - id: endpoint
      type: Octopus.Client.Model.Endpoints.EndpointResource
    - id: environments
      type: Octopus.Client.Model.EnvironmentResource[]
    - id: roles
      type: System.String[]
    - id: tenants
      type: Octopus.Client.Model.TenantResource[]
    - id: tenantTags
      type: Octopus.Client.Model.TagResource[]
    - id: tenantedDeploymentParticipation
      type: System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
    return:
      type: Octopus.Client.Editors.MachineEditor
    content.vb: Function CreateOrModify(name As String, endpoint As EndpointResource, environments As EnvironmentResource(), roles As String(), tenants As TenantResource(), tenantTags As TagResource(), tenantedDeploymentParticipation As TenantedDeploymentMode?) As MachineEditor
  overload: Octopus.Client.Repositories.IMachineRepository.CreateOrModify*
  nameWithType.vb: IMachineRepository.CreateOrModify(String, EndpointResource, EnvironmentResource(), String(), TenantResource(), TagResource(), Nullable(Of TenantedDeploymentMode))
  fullName.vb: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource(), System.String(), Octopus.Client.Model.TenantResource(), Octopus.Client.Model.TagResource(), System.Nullable(Of Octopus.Client.Model.TenantedDeploymentMode))
  name.vb: CreateOrModify(String, EndpointResource, EnvironmentResource(), String(), TenantResource(), TagResource(), Nullable(Of TenantedDeploymentMode))
- uid: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  commentId: M:Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  id: CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, EndpointResource, EnvironmentResource[], String[])
  nameWithType: IMachineRepository.CreateOrModify(String, EndpointResource, EnvironmentResource[], String[])
  fullName: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], System.String[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, string[] roles)
    parameters:
    - id: name
      type: System.String
    - id: endpoint
      type: Octopus.Client.Model.Endpoints.EndpointResource
    - id: environments
      type: Octopus.Client.Model.EnvironmentResource[]
    - id: roles
      type: System.String[]
    return:
      type: Octopus.Client.Editors.MachineEditor
    content.vb: Function CreateOrModify(name As String, endpoint As EndpointResource, environments As EnvironmentResource(), roles As String()) As MachineEditor
  overload: Octopus.Client.Repositories.IMachineRepository.CreateOrModify*
  nameWithType.vb: IMachineRepository.CreateOrModify(String, EndpointResource, EnvironmentResource(), String())
  fullName.vb: Octopus.Client.Repositories.IMachineRepository.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource(), System.String())
  name.vb: CreateOrModify(String, EndpointResource, EnvironmentResource(), String())
- uid: Octopus.Client.Repositories.IMachineRepository.List(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)
  commentId: M:Octopus.Client.Repositories.IMachineRepository.List(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)
  id: List(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)
  parent: Octopus.Client.Repositories.IMachineRepository
  langs:
  - csharp
  - vb
  name: List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  nameWithType: IMachineRepository.List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  fullName: Octopus.Client.Repositories.IMachineRepository.List(System.Int32, System.Nullable<System.Int32>, System.String, System.String, System.String, System.String, System.Nullable<System.Boolean>, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/MachineRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: List
    path: ../source/Octopus.Client/Repositories/MachineRepository.cs
    startLine: 33
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: ResourceCollection<MachineResource> List(int skip = 0, int? take = default(int? ), string ids = null, string name = null, string partialName = null, string roles = null, bool? isDisabled, string healthStatuses = null, string commStyles = null, string tenantIds = null, string tenantTags = null, string environmentIds = null)
    parameters:
    - id: skip
      type: System.Int32
    - id: take
      type: System.Nullable{System.Int32}
    - id: ids
      type: System.String
    - id: name
      type: System.String
    - id: partialName
      type: System.String
    - id: roles
      type: System.String
    - id: isDisabled
      type: System.Nullable{System.Boolean}
    - id: healthStatuses
      type: System.String
    - id: commStyles
      type: System.String
    - id: tenantIds
      type: System.String
    - id: tenantTags
      type: System.String
    - id: environmentIds
      type: System.String
    return:
      type: Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource}
    content.vb: Function List(skip As Integer = 0, take As Integer? = Nothing, ids As String = Nothing, name As String = Nothing, partialName As String = Nothing, roles As String = Nothing, isDisabled As Boolean?, healthStatuses As String = Nothing, commStyles As String = Nothing, tenantIds As String = Nothing, tenantTags As String = Nothing, environmentIds As String = Nothing) As ResourceCollection(Of MachineResource)
  overload: Octopus.Client.Repositories.IMachineRepository.List*
  nameWithType.vb: IMachineRepository.List(Int32, Nullable(Of Int32), String, String, String, String, Nullable(Of Boolean), String, String, String, String, String)
  fullName.vb: Octopus.Client.Repositories.IMachineRepository.List(System.Int32, System.Nullable(Of System.Int32), System.String, System.String, System.String, System.String, System.Nullable(Of System.Boolean), System.String, System.String, System.String, System.String, System.String)
  name.vb: List(Int32, Nullable(Of Int32), String, String, String, String, Nullable(Of Boolean), String, String, String, String, String)
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByName(System.String,System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<MachineResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.MachineResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of MachineResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.MachineResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<MachineResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.MachineResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of MachineResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.MachineResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<MachineResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.MachineResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of MachineResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.MachineResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<MachineResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.MachineResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of MachineResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.MachineResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<MachineResource>, Boolean>, String, Object)
  nameWithType: IPaginate<MachineResource>.Paginate(Func<ResourceCollection<MachineResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.MachineResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of MachineResource).Paginate(Func(Of ResourceCollection(Of MachineResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.MachineResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of MachineResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<MachineResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of MachineResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindOne(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindOne(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<MachineResource, Boolean>, String, Object)
  nameWithType: IPaginate<MachineResource>.FindOne(Func<MachineResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindOne(System.Func<Octopus.Client.Model.MachineResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of MachineResource).FindOne(Func(Of MachineResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindOne(System.Func(Of Octopus.Client.Model.MachineResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of MachineResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<MachineResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of MachineResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindMany(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindMany(System.Func{Octopus.Client.Model.MachineResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<MachineResource, Boolean>, String, Object)
  nameWithType: IPaginate<MachineResource>.FindMany(Func<MachineResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindMany(System.Func<Octopus.Client.Model.MachineResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of MachineResource).FindMany(Func(Of MachineResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindMany(System.Func(Of Octopus.Client.Model.MachineResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of MachineResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<MachineResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of MachineResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<MachineResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of MachineResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<MachineResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of MachineResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<MachineResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Get(System.String)
  nameWithType.vb: IGet(Of MachineResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<MachineResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of MachineResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<MachineResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Get(System.String[])
  nameWithType.vb: IGet(Of MachineResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<MachineResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of MachineResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Refresh(Octopus.Client.Model.MachineResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}.Refresh(Octopus.Client.Model.MachineResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(MachineResource)
  nameWithType: IGet<MachineResource>.Refresh(MachineResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Refresh(Octopus.Client.Model.MachineResource)
  nameWithType.vb: IGet(Of MachineResource).Refresh(MachineResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Refresh(Octopus.Client.Model.MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<MachineResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of MachineResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}.Create(Octopus.Client.Model.MachineResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}.Create(Octopus.Client.Model.MachineResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(MachineResource, Object)
  nameWithType: ICreate<MachineResource>.Create(MachineResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.MachineResource>.Create(Octopus.Client.Model.MachineResource, System.Object)
  nameWithType.vb: ICreate(Of MachineResource).Create(MachineResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.MachineResource).Create(Octopus.Client.Model.MachineResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<MachineResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.MachineResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of MachineResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.MachineResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}.Modify(Octopus.Client.Model.MachineResource)
  commentId: M:Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}.Modify(Octopus.Client.Model.MachineResource)
  parent: Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(MachineResource)
  nameWithType: IModify<MachineResource>.Modify(MachineResource)
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.MachineResource>.Modify(Octopus.Client.Model.MachineResource)
  nameWithType.vb: IModify(Of MachineResource).Modify(MachineResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.MachineResource).Modify(Octopus.Client.Model.MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<MachineResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.MachineResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of MachineResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.MachineResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}.Delete(Octopus.Client.Model.MachineResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}.Delete(Octopus.Client.Model.MachineResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(MachineResource)
  nameWithType: IDelete<MachineResource>.Delete(MachineResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.MachineResource>.Delete(Octopus.Client.Model.MachineResource)
  nameWithType.vb: IDelete(Of MachineResource).Delete(MachineResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.MachineResource).Delete(Octopus.Client.Model.MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<MachineResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.MachineResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of MachineResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.MachineResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  isExternal: true
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<MachineResource>
  nameWithType: IFindByName<MachineResource>
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.MachineResource>
  nameWithType.vb: IFindByName(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.MachineResource)
  name.vb: IFindByName(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  isExternal: true
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<MachineResource>
  nameWithType: IPaginate<MachineResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.MachineResource>
  nameWithType.vb: IPaginate(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.MachineResource)
  name.vb: IPaginate(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<MachineResource>
  nameWithType: IGet<MachineResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.MachineResource>
  nameWithType.vb: IGet(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.MachineResource)
  name.vb: IGet(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<MachineResource>
  nameWithType: ICreate<MachineResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.MachineResource>
  nameWithType.vb: ICreate(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.MachineResource)
  name.vb: ICreate(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.IModify{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IModify`1
  name: IModify<MachineResource>
  nameWithType: IModify<MachineResource>
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.MachineResource>
  nameWithType.vb: IModify(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.MachineResource)
  name.vb: IModify(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<MachineResource>
  nameWithType: IDelete<MachineResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.MachineResource>
  nameWithType.vb: IDelete(Of MachineResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.MachineResource)
  name.vb: IDelete(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1
  commentId: T:Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TResource>
  nameWithType: IFindByName<TResource>
  fullName: Octopus.Client.Repositories.IFindByName<TResource>
  nameWithType.vb: IFindByName(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource)
  name.vb: IFindByName(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1
  commentId: T:Octopus.Client.Repositories.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IMachineRepository.Discover*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.Discover
  name: Discover
  nameWithType: IMachineRepository.Discover
  fullName: Octopus.Client.Repositories.IMachineRepository.Discover
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
  commentId: T:System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DiscoverableEndpointType>
  nameWithType: Nullable<DiscoverableEndpointType>
  fullName: System.Nullable<Octopus.Client.Model.DiscoverableEndpointType>
  nameWithType.vb: Nullable(Of DiscoverableEndpointType)
  fullName.vb: System.Nullable(Of Octopus.Client.Model.DiscoverableEndpointType)
  name.vb: Nullable(Of DiscoverableEndpointType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.DiscoverableEndpointType
    name: DiscoverableEndpointType
    nameWithType: DiscoverableEndpointType
    fullName: Octopus.Client.Model.DiscoverableEndpointType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.DiscoverableEndpointType
    name: DiscoverableEndpointType
    nameWithType: DiscoverableEndpointType
    fullName: Octopus.Client.Model.DiscoverableEndpointType
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.MachineResource
  commentId: T:Octopus.Client.Model.MachineResource
  parent: Octopus.Client.Model
  name: MachineResource
  nameWithType: MachineResource
  fullName: Octopus.Client.Model.MachineResource
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Model.DiscoverMachineOptions
  commentId: T:Octopus.Client.Model.DiscoverMachineOptions
  parent: Octopus.Client.Model
  name: DiscoverMachineOptions
  nameWithType: DiscoverMachineOptions
  fullName: Octopus.Client.Model.DiscoverMachineOptions
- uid: Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus
  name: GetConnectionStatus
  nameWithType: IMachineRepository.GetConnectionStatus
  fullName: Octopus.Client.Repositories.IMachineRepository.GetConnectionStatus
- uid: Octopus.Client.Model.MachineConnectionStatus
  commentId: T:Octopus.Client.Model.MachineConnectionStatus
  parent: Octopus.Client.Model
  name: MachineConnectionStatus
  nameWithType: MachineConnectionStatus
  fullName: Octopus.Client.Model.MachineConnectionStatus
- uid: Octopus.Client.Repositories.IMachineRepository.FindByThumbprint*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.FindByThumbprint
  name: FindByThumbprint
  nameWithType: IMachineRepository.FindByThumbprint
  fullName: Octopus.Client.Repositories.IMachineRepository.FindByThumbprint
- uid: System.Collections.Generic.List{Octopus.Client.Model.MachineResource}
  commentId: T:System.Collections.Generic.List{Octopus.Client.Model.MachineResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MachineResource>
  nameWithType: List<MachineResource>
  fullName: System.Collections.Generic.List<Octopus.Client.Model.MachineResource>
  nameWithType.vb: List(Of MachineResource)
  fullName.vb: System.Collections.Generic.List(Of Octopus.Client.Model.MachineResource)
  name.vb: List(Of MachineResource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Repositories.IMachineRepository.GetTasks*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.GetTasks
  name: GetTasks
  nameWithType: IMachineRepository.GetTasks
  fullName: Octopus.Client.Repositories.IMachineRepository.GetTasks
- uid: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.TaskResource}
  commentId: T:System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.TaskResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TaskResource>
  nameWithType: IReadOnlyList<TaskResource>
  fullName: System.Collections.Generic.IReadOnlyList<Octopus.Client.Model.TaskResource>
  nameWithType.vb: IReadOnlyList(Of TaskResource)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Octopus.Client.Model.TaskResource)
  name.vb: IReadOnlyList(Of TaskResource)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TaskResource
    name: TaskResource
    nameWithType: TaskResource
    fullName: Octopus.Client.Model.TaskResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TaskResource
    name: TaskResource
    nameWithType: TaskResource
    fullName: Octopus.Client.Model.TaskResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Repositories.IMachineRepository.CreateOrModify*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.CreateOrModify
  name: CreateOrModify
  nameWithType: IMachineRepository.CreateOrModify
  fullName: Octopus.Client.Repositories.IMachineRepository.CreateOrModify
- uid: Octopus.Client.Model.Endpoints.EndpointResource
  commentId: T:Octopus.Client.Model.Endpoints.EndpointResource
  parent: Octopus.Client.Model.Endpoints
  name: EndpointResource
  nameWithType: EndpointResource
  fullName: Octopus.Client.Model.Endpoints.EndpointResource
- uid: Octopus.Client.Model.EnvironmentResource[]
  isExternal: true
  name: EnvironmentResource[]
  nameWithType: EnvironmentResource[]
  fullName: Octopus.Client.Model.EnvironmentResource[]
  nameWithType.vb: EnvironmentResource()
  fullName.vb: Octopus.Client.Model.EnvironmentResource()
  name.vb: EnvironmentResource()
  spec.csharp:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.TenantResource[]
  isExternal: true
  name: TenantResource[]
  nameWithType: TenantResource[]
  fullName: Octopus.Client.Model.TenantResource[]
  nameWithType.vb: TenantResource()
  fullName.vb: Octopus.Client.Model.TenantResource()
  name.vb: TenantResource()
  spec.csharp:
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.TagResource[]
  isExternal: true
  name: TagResource[]
  nameWithType: TagResource[]
  fullName: Octopus.Client.Model.TagResource[]
  nameWithType.vb: TagResource()
  fullName.vb: Octopus.Client.Model.TagResource()
  name.vb: TagResource()
  spec.csharp:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
  commentId: T:System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TenantedDeploymentMode>
  nameWithType: Nullable<TenantedDeploymentMode>
  fullName: System.Nullable<Octopus.Client.Model.TenantedDeploymentMode>
  nameWithType.vb: Nullable(Of TenantedDeploymentMode)
  fullName.vb: System.Nullable(Of Octopus.Client.Model.TenantedDeploymentMode)
  name.vb: Nullable(Of TenantedDeploymentMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantedDeploymentMode
    name: TenantedDeploymentMode
    nameWithType: TenantedDeploymentMode
    fullName: Octopus.Client.Model.TenantedDeploymentMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantedDeploymentMode
    name: TenantedDeploymentMode
    nameWithType: TenantedDeploymentMode
    fullName: Octopus.Client.Model.TenantedDeploymentMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.MachineEditor
  commentId: T:Octopus.Client.Editors.MachineEditor
  parent: Octopus.Client.Editors
  name: MachineEditor
  nameWithType: MachineEditor
  fullName: Octopus.Client.Editors.MachineEditor
- uid: Octopus.Client.Model.Endpoints
  commentId: N:Octopus.Client.Model.Endpoints
  name: Octopus.Client.Model.Endpoints
  nameWithType: Octopus.Client.Model.Endpoints
  fullName: Octopus.Client.Model.Endpoints
- uid: Octopus.Client.Editors
  commentId: N:Octopus.Client.Editors
  name: Octopus.Client.Editors
  nameWithType: Octopus.Client.Editors
  fullName: Octopus.Client.Editors
- uid: Octopus.Client.Repositories.IMachineRepository.List*
  commentId: Overload:Octopus.Client.Repositories.IMachineRepository.List
  name: List
  nameWithType: IMachineRepository.List
  fullName: Octopus.Client.Repositories.IMachineRepository.List
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource}
  commentId: T:Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.MachineResource}
  parent: Octopus.Client.Model
  definition: Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<MachineResource>
  nameWithType: ResourceCollection<MachineResource>
  fullName: Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.MachineResource>
  nameWithType.vb: ResourceCollection(Of MachineResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.MachineResource)
  name.vb: ResourceCollection(Of MachineResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ResourceCollection`1
  commentId: T:Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: Octopus.Client.Model.ResourceCollection<TResource>
  nameWithType.vb: ResourceCollection(Of TResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource)
  name.vb: ResourceCollection(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
