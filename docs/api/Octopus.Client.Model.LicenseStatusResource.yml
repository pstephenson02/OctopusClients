### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.LicenseStatusResource
  commentId: T:Octopus.Client.Model.LicenseStatusResource
  id: LicenseStatusResource
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
  - Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
  - Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
  - Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
  - Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
  - Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
  - Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
  - Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  - Octopus.Client.Model.LicenseStatusResource.IsCompliant
  - Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  - Octopus.Client.Model.LicenseStatusResource.LicenseKind
  - Octopus.Client.Model.LicenseStatusResource.Limits
  - Octopus.Client.Model.LicenseStatusResource.Messages
  - Octopus.Client.Model.LicenseStatusResource.PermissionsMode
  langs:
  - csharp
  - vb
  name: LicenseStatusResource
  nameWithType: LicenseStatusResource
  fullName: Octopus.Client.Model.LicenseStatusResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LicenseStatusResource
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class LicenseStatusResource : Resource, IResource, IAuditedResource'
    content.vb: >-
      Public Class LicenseStatusResource
          Inherits Resource
          Implements IResource, IAuditedResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.LicenseStatusResource.LicenseKind
  commentId: P:Octopus.Client.Model.LicenseStatusResource.LicenseKind
  id: LicenseKind
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: LicenseKind
  nameWithType: LicenseStatusResource.LicenseKind
  fullName: Octopus.Client.Model.LicenseStatusResource.LicenseKind
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LicenseKind
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nOne of the values from <xref href=\"Octopus.Client.Model.LicenseKinds\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("No longer supported from 2019.8.6")]

      public string LicenseKind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("No longer supported from 2019.8.6")>

      Public Property LicenseKind As String
  overload: Octopus.Client.Model.LicenseStatusResource.LicenseKind*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: No longer supported from 2019.8.6
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.IsCompliant
  commentId: P:Octopus.Client.Model.LicenseStatusResource.IsCompliant
  id: IsCompliant
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: IsCompliant
  nameWithType: LicenseStatusResource.IsCompliant
  fullName: Octopus.Client.Model.LicenseStatusResource.IsCompliant
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsCompliant
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 36
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsCompliant { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCompliant As Boolean
  overload: Octopus.Client.Model.LicenseStatusResource.IsCompliant*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
  commentId: P:Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
  id: HostingEnvironment
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: HostingEnvironment
  nameWithType: LicenseStatusResource.HostingEnvironment
  fullName: Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: HostingEnvironment
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 37
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string HostingEnvironment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HostingEnvironment As String
  overload: Octopus.Client.Model.LicenseStatusResource.HostingEnvironment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
  commentId: P:Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
  id: ComplianceSummary
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: ComplianceSummary
  nameWithType: LicenseStatusResource.ComplianceSummary
  fullName: Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ComplianceSummary
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 38
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string ComplianceSummary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ComplianceSummary As String
  overload: Octopus.Client.Model.LicenseStatusResource.ComplianceSummary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
  commentId: P:Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
  id: EffectiveExpiryDate
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: EffectiveExpiryDate
  nameWithType: LicenseStatusResource.EffectiveExpiryDate
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EffectiveExpiryDate
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 40
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonConverter(typeof(DateConverter))]

      public DateTime EffectiveExpiryDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonConverter(GetType(DateConverter))>

      Public Property EffectiveExpiryDate As Date
  overload: Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate*
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Octopus.Client.Serialization.DateConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
  commentId: P:Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
  id: DaysToEffectiveExpiryDate
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: DaysToEffectiveExpiryDate
  nameWithType: LicenseStatusResource.DaysToEffectiveExpiryDate
  fullName: Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DaysToEffectiveExpiryDate
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 42
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public int DaysToEffectiveExpiryDate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DaysToEffectiveExpiryDate As Integer
  overload: Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.Messages
  commentId: P:Octopus.Client.Model.LicenseStatusResource.Messages
  id: Messages
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: LicenseStatusResource.Messages
  fullName: Octopus.Client.Model.LicenseStatusResource.Messages
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Messages
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public LicenseMessageResource[] Messages { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.LicenseMessageResource[]
    content.vb: Public Property Messages As LicenseMessageResource()
  overload: Octopus.Client.Model.LicenseStatusResource.Messages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.Limits
  commentId: P:Octopus.Client.Model.LicenseStatusResource.Limits
  id: Limits
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: Limits
  nameWithType: LicenseStatusResource.Limits
  fullName: Octopus.Client.Model.LicenseStatusResource.Limits
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Limits
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 44
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public LicenseLimitStatusResource[] Limits { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.LicenseLimitStatusResource[]
    content.vb: Public Property Limits As LicenseLimitStatusResource()
  overload: Octopus.Client.Model.LicenseStatusResource.Limits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
  commentId: P:Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
  id: DoesExpiryBlockKeyActivities
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: DoesExpiryBlockKeyActivities
  nameWithType: LicenseStatusResource.DoesExpiryBlockKeyActivities
  fullName: Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DoesExpiryBlockKeyActivities
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 45
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool DoesExpiryBlockKeyActivities { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DoesExpiryBlockKeyActivities As Boolean
  overload: Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
  commentId: P:Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
  id: EffectiveNodeTaskLimit
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: EffectiveNodeTaskLimit
  nameWithType: LicenseStatusResource.EffectiveNodeTaskLimit
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EffectiveNodeTaskLimit
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 46
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public int EffectiveNodeTaskLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EffectiveNodeTaskLimit As Integer
  overload: Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
  commentId: P:Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
  id: EffectiveClusterTaskLimit
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: EffectiveClusterTaskLimit
  nameWithType: LicenseStatusResource.EffectiveClusterTaskLimit
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EffectiveClusterTaskLimit
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 47
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public int EffectiveClusterTaskLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EffectiveClusterTaskLimit As Integer
  overload: Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  commentId: P:Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  id: IsClusterTaskLimitControlledByLicense
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: IsClusterTaskLimitControlledByLicense
  nameWithType: LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  fullName: Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsClusterTaskLimitControlledByLicense
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 48
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsClusterTaskLimitControlledByLicense { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsClusterTaskLimitControlledByLicense As Boolean
  overload: Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  commentId: P:Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  id: IsNodeTaskLimitControlledByLicense
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: IsNodeTaskLimitControlledByLicense
  nameWithType: LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  fullName: Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsNodeTaskLimitControlledByLicense
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 49
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsNodeTaskLimitControlledByLicense { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsNodeTaskLimitControlledByLicense As Boolean
  overload: Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.LicenseStatusResource.PermissionsMode
  commentId: P:Octopus.Client.Model.LicenseStatusResource.PermissionsMode
  id: PermissionsMode
  parent: Octopus.Client.Model.LicenseStatusResource
  langs:
  - csharp
  - vb
  name: PermissionsMode
  nameWithType: LicenseStatusResource.PermissionsMode
  fullName: Octopus.Client.Model.LicenseStatusResource.PermissionsMode
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/LicenseStatusResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PermissionsMode
    path: ../source/Octopus.Client/Model/LicenseStatusResource.cs
    startLine: 54
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nOne of the values from <xref href=\"Octopus.Client.Model.PermissionModes\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public string PermissionsMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PermissionsMode As String
  overload: Octopus.Client.Model.LicenseStatusResource.PermissionsMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.LicenseKinds
  commentId: T:Octopus.Client.Model.LicenseKinds
  name: LicenseKinds
  nameWithType: LicenseKinds
  fullName: Octopus.Client.Model.LicenseKinds
- uid: Octopus.Client.Model.LicenseStatusResource.LicenseKind*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.LicenseKind
  name: LicenseKind
  nameWithType: LicenseStatusResource.LicenseKind
  fullName: Octopus.Client.Model.LicenseStatusResource.LicenseKind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.LicenseStatusResource.IsCompliant*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.IsCompliant
  name: IsCompliant
  nameWithType: LicenseStatusResource.IsCompliant
  fullName: Octopus.Client.Model.LicenseStatusResource.IsCompliant
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.LicenseStatusResource.HostingEnvironment*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
  name: HostingEnvironment
  nameWithType: LicenseStatusResource.HostingEnvironment
  fullName: Octopus.Client.Model.LicenseStatusResource.HostingEnvironment
- uid: Octopus.Client.Model.LicenseStatusResource.ComplianceSummary*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
  name: ComplianceSummary
  nameWithType: LicenseStatusResource.ComplianceSummary
  fullName: Octopus.Client.Model.LicenseStatusResource.ComplianceSummary
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
  name: EffectiveExpiryDate
  nameWithType: LicenseStatusResource.EffectiveExpiryDate
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveExpiryDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
  name: DaysToEffectiveExpiryDate
  nameWithType: LicenseStatusResource.DaysToEffectiveExpiryDate
  fullName: Octopus.Client.Model.LicenseStatusResource.DaysToEffectiveExpiryDate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Octopus.Client.Model.LicenseStatusResource.Messages*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.Messages
  name: Messages
  nameWithType: LicenseStatusResource.Messages
  fullName: Octopus.Client.Model.LicenseStatusResource.Messages
- uid: Octopus.Client.Model.LicenseMessageResource[]
  isExternal: true
  name: LicenseMessageResource[]
  nameWithType: LicenseMessageResource[]
  fullName: Octopus.Client.Model.LicenseMessageResource[]
  nameWithType.vb: LicenseMessageResource()
  fullName.vb: Octopus.Client.Model.LicenseMessageResource()
  name.vb: LicenseMessageResource()
  spec.csharp:
  - uid: Octopus.Client.Model.LicenseMessageResource
    name: LicenseMessageResource
    nameWithType: LicenseMessageResource
    fullName: Octopus.Client.Model.LicenseMessageResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.LicenseMessageResource
    name: LicenseMessageResource
    nameWithType: LicenseMessageResource
    fullName: Octopus.Client.Model.LicenseMessageResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.LicenseStatusResource.Limits*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.Limits
  name: Limits
  nameWithType: LicenseStatusResource.Limits
  fullName: Octopus.Client.Model.LicenseStatusResource.Limits
- uid: Octopus.Client.Model.LicenseLimitStatusResource[]
  isExternal: true
  name: LicenseLimitStatusResource[]
  nameWithType: LicenseLimitStatusResource[]
  fullName: Octopus.Client.Model.LicenseLimitStatusResource[]
  nameWithType.vb: LicenseLimitStatusResource()
  fullName.vb: Octopus.Client.Model.LicenseLimitStatusResource()
  name.vb: LicenseLimitStatusResource()
  spec.csharp:
  - uid: Octopus.Client.Model.LicenseLimitStatusResource
    name: LicenseLimitStatusResource
    nameWithType: LicenseLimitStatusResource
    fullName: Octopus.Client.Model.LicenseLimitStatusResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.LicenseLimitStatusResource
    name: LicenseLimitStatusResource
    nameWithType: LicenseLimitStatusResource
    fullName: Octopus.Client.Model.LicenseLimitStatusResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
  name: DoesExpiryBlockKeyActivities
  nameWithType: LicenseStatusResource.DoesExpiryBlockKeyActivities
  fullName: Octopus.Client.Model.LicenseStatusResource.DoesExpiryBlockKeyActivities
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
  name: EffectiveNodeTaskLimit
  nameWithType: LicenseStatusResource.EffectiveNodeTaskLimit
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveNodeTaskLimit
- uid: Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
  name: EffectiveClusterTaskLimit
  nameWithType: LicenseStatusResource.EffectiveClusterTaskLimit
  fullName: Octopus.Client.Model.LicenseStatusResource.EffectiveClusterTaskLimit
- uid: Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  name: IsClusterTaskLimitControlledByLicense
  nameWithType: LicenseStatusResource.IsClusterTaskLimitControlledByLicense
  fullName: Octopus.Client.Model.LicenseStatusResource.IsClusterTaskLimitControlledByLicense
- uid: Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  name: IsNodeTaskLimitControlledByLicense
  nameWithType: LicenseStatusResource.IsNodeTaskLimitControlledByLicense
  fullName: Octopus.Client.Model.LicenseStatusResource.IsNodeTaskLimitControlledByLicense
- uid: Octopus.Client.Model.PermissionModes
  commentId: T:Octopus.Client.Model.PermissionModes
  name: PermissionModes
  nameWithType: PermissionModes
  fullName: Octopus.Client.Model.PermissionModes
- uid: Octopus.Client.Model.LicenseStatusResource.PermissionsMode*
  commentId: Overload:Octopus.Client.Model.LicenseStatusResource.PermissionsMode
  name: PermissionsMode
  nameWithType: LicenseStatusResource.PermissionsMode
  fullName: Octopus.Client.Model.LicenseStatusResource.PermissionsMode
