### YamlMime:ManagedReference
items:
- uid: Octopus.Client.OctopusClient
  commentId: T:Octopus.Client.OctopusClient
  id: OctopusClient
  parent: Octopus.Client
  children:
  - Octopus.Client.OctopusClient.#ctor(Octopus.Client.OctopusServerEndpoint)
  - Octopus.Client.OctopusClient.AfterReceivingHttpResponse
  - Octopus.Client.OctopusClient.BeforeSendingHttpRequest
  - Octopus.Client.OctopusClient.Create``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusClient.Delete(System.String,System.Object,System.Object)
  - Octopus.Client.OctopusClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  - Octopus.Client.OctopusClient.Dispose
  - Octopus.Client.OctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.OctopusClient.ForSystem
  - Octopus.Client.OctopusClient.Get``1(System.String,System.Object)
  - Octopus.Client.OctopusClient.GetContent(System.String,System.Object)
  - Octopus.Client.OctopusClient.Initialize
  - Octopus.Client.OctopusClient.IsUsingSecureConnection
  - Octopus.Client.OctopusClient.List``1(System.String,System.Object)
  - Octopus.Client.OctopusClient.ListAll``1(System.String,System.Object)
  - Octopus.Client.OctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  - Octopus.Client.OctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  - Octopus.Client.OctopusClient.Post(System.String)
  - Octopus.Client.OctopusClient.Post``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusClient.Post``2(System.String,``0,System.Object)
  - Octopus.Client.OctopusClient.Put(System.String)
  - Octopus.Client.OctopusClient.Put``1(System.String,``0)
  - Octopus.Client.OctopusClient.Put``1(System.String,``0,System.Object)
  - Octopus.Client.OctopusClient.PutContent(System.String,System.IO.Stream)
  - Octopus.Client.OctopusClient.QualifyUri(System.String,System.Object)
  - Octopus.Client.OctopusClient.ReceivedOctopusResponse
  - Octopus.Client.OctopusClient.Repository
  - Octopus.Client.OctopusClient.RootDocument
  - Octopus.Client.OctopusClient.SendingOctopusRequest
  - Octopus.Client.OctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  - Octopus.Client.OctopusClient.SignOut
  - Octopus.Client.OctopusClient.Update``1(System.String,``0,System.Object)
  langs:
  - csharp
  - vb
  name: OctopusClient
  nameWithType: OctopusClient
  fullName: Octopus.Client.OctopusClient
  type: Class
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusClient
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nThe Octopus Deploy RESTful HTTP API client.\n"
  example: []
  syntax:
    content: 'public class OctopusClient : IHttpOctopusClient, IOctopusClient, IDisposable'
    content.vb: >-
      Public Class OctopusClient
          Implements IHttpOctopusClient, IOctopusClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.IHttpOctopusClient
  - Octopus.Client.IOctopusClient
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.OctopusClient.#ctor(Octopus.Client.OctopusServerEndpoint)
  commentId: M:Octopus.Client.OctopusClient.#ctor(Octopus.Client.OctopusServerEndpoint)
  id: '#ctor(Octopus.Client.OctopusServerEndpoint)'
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: OctopusClient(OctopusServerEndpoint)
  nameWithType: OctopusClient.OctopusClient(OctopusServerEndpoint)
  fullName: Octopus.Client.OctopusClient.OctopusClient(Octopus.Client.OctopusServerEndpoint)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 32
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.OctopusClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OctopusClient(OctopusServerEndpoint serverEndpoint)
    parameters:
    - id: serverEndpoint
      type: Octopus.Client.OctopusServerEndpoint
      description: The server endpoint.
    content.vb: Public Sub New(serverEndpoint As OctopusServerEndpoint)
  overload: Octopus.Client.OctopusClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.RootDocument
  commentId: P:Octopus.Client.OctopusClient.RootDocument
  id: RootDocument
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: RootDocument
  nameWithType: OctopusClient.RootDocument
  fullName: Octopus.Client.OctopusClient.RootDocument
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RootDocument
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 45
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public RootResource RootDocument { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.RootResource
    content.vb: Public ReadOnly Property RootDocument As RootResource
  overload: Octopus.Client.OctopusClient.RootDocument*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusClient.Repository
  commentId: P:Octopus.Client.OctopusClient.Repository
  id: Repository
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: OctopusClient.Repository
  fullName: Octopus.Client.OctopusClient.Repository
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Repository
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 46
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusRepository Repository { get; }
    parameters: []
    return:
      type: Octopus.Client.IOctopusRepository
    content.vb: Public ReadOnly Property Repository As IOctopusRepository
  overload: Octopus.Client.OctopusClient.Repository*
  implements:
  - Octopus.Client.IOctopusClient.Repository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusClient.IsUsingSecureConnection
  commentId: P:Octopus.Client.OctopusClient.IsUsingSecureConnection
  id: IsUsingSecureConnection
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: IsUsingSecureConnection
  nameWithType: OctopusClient.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusClient.IsUsingSecureConnection
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsUsingSecureConnection
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 51
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nIndicates whether a secure (SSL) connection is being used to communicate with the server.\n"
  example: []
  syntax:
    content: public bool IsUsingSecureConnection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingSecureConnection As Boolean
  overload: Octopus.Client.OctopusClient.IsUsingSecureConnection*
  implements:
  - Octopus.Client.IOctopusClient.IsUsingSecureConnection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  id: ForSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: ForSpace(SpaceResource)
  nameWithType: OctopusClient.ForSpace(SpaceResource)
  fullName: Octopus.Client.OctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSpace
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 53
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusSpaceRepository ForSpace(SpaceResource space)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.IOctopusSpaceRepository
    content.vb: Public Function ForSpace(space As SpaceResource) As IOctopusSpaceRepository
  overload: Octopus.Client.OctopusClient.ForSpace*
  implements:
  - Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.ForSystem
  commentId: M:Octopus.Client.OctopusClient.ForSystem
  id: ForSystem
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: ForSystem()
  nameWithType: OctopusClient.ForSystem()
  fullName: Octopus.Client.OctopusClient.ForSystem()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSystem
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 59
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusSystemRepository ForSystem()
    return:
      type: Octopus.Client.IOctopusSystemRepository
    content.vb: Public Function ForSystem As IOctopusSystemRepository
  overload: Octopus.Client.OctopusClient.ForSystem*
  implements:
  - Octopus.Client.IOctopusClient.ForSystem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  commentId: M:Octopus.Client.OctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  id: SignIn(Octopus.Client.Model.LoginCommand)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: SignIn(LoginCommand)
  nameWithType: OctopusClient.SignIn(LoginCommand)
  fullName: Octopus.Client.OctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SignIn
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 64
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public void SignIn(LoginCommand loginCommand)
    parameters:
    - id: loginCommand
      type: Octopus.Client.Model.LoginCommand
    content.vb: Public Sub SignIn(loginCommand As LoginCommand)
  overload: Octopus.Client.OctopusClient.SignIn*
  implements:
  - Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.SignOut
  commentId: M:Octopus.Client.OctopusClient.SignOut
  id: SignOut
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: SignOut()
  nameWithType: OctopusClient.SignOut()
  fullName: Octopus.Client.OctopusClient.SignOut()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SignOut
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 79
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public void SignOut()
    content.vb: Public Sub SignOut
  overload: Octopus.Client.OctopusClient.SignOut*
  implements:
  - Octopus.Client.IOctopusClient.SignOut
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.BeforeSendingHttpRequest
  commentId: E:Octopus.Client.OctopusClient.BeforeSendingHttpRequest
  id: BeforeSendingHttpRequest
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: BeforeSendingHttpRequest
  nameWithType: OctopusClient.BeforeSendingHttpRequest
  fullName: Octopus.Client.OctopusClient.BeforeSendingHttpRequest
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: BeforeSendingHttpRequest
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 88
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a request is about to be sent.\n"
  example: []
  syntax:
    content: public event Action<WebRequest> BeforeSendingHttpRequest
    return:
      type: System.Action{System.Net.WebRequest}
    content.vb: Public Event BeforeSendingHttpRequest As Action(Of WebRequest)
  implements:
  - Octopus.Client.IHttpOctopusClient.BeforeSendingHttpRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.AfterReceivingHttpResponse
  commentId: E:Octopus.Client.OctopusClient.AfterReceivingHttpResponse
  id: AfterReceivingHttpResponse
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: AfterReceivingHttpResponse
  nameWithType: OctopusClient.AfterReceivingHttpResponse
  fullName: Octopus.Client.OctopusClient.AfterReceivingHttpResponse
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AfterReceivingHttpResponse
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 93
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a response has been received.\n"
  example: []
  syntax:
    content: public event Action<WebResponse> AfterReceivingHttpResponse
    return:
      type: System.Action{System.Net.WebResponse}
    content.vb: Public Event AfterReceivingHttpResponse As Action(Of WebResponse)
  implements:
  - Octopus.Client.IHttpOctopusClient.AfterReceivingHttpResponse
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.SendingOctopusRequest
  commentId: E:Octopus.Client.OctopusClient.SendingOctopusRequest
  id: SendingOctopusRequest
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: SendingOctopusRequest
  nameWithType: OctopusClient.SendingOctopusRequest
  fullName: Octopus.Client.OctopusClient.SendingOctopusRequest
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SendingOctopusRequest
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 98
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a request is about to be sent.\n"
  example: []
  syntax:
    content: public event Action<OctopusRequest> SendingOctopusRequest
    return:
      type: System.Action{Octopus.Client.OctopusRequest}
    content.vb: Public Event SendingOctopusRequest As Action(Of OctopusRequest)
  implements:
  - Octopus.Client.IOctopusClient.SendingOctopusRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.ReceivedOctopusResponse
  commentId: E:Octopus.Client.OctopusClient.ReceivedOctopusResponse
  id: ReceivedOctopusResponse
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: ReceivedOctopusResponse
  nameWithType: OctopusClient.ReceivedOctopusResponse
  fullName: Octopus.Client.OctopusClient.ReceivedOctopusResponse
  type: Event
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ReceivedOctopusResponse
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 103
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nOccurs when a response is received from the Octopus Server.\n"
  example: []
  syntax:
    content: public event Action<OctopusResponse> ReceivedOctopusResponse
    return:
      type: System.Action{Octopus.Client.OctopusResponse}
    content.vb: Public Event ReceivedOctopusResponse As Action(Of OctopusResponse)
  implements:
  - Octopus.Client.IOctopusClient.ReceivedOctopusResponse
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.Initialize
  commentId: M:Octopus.Client.OctopusClient.Initialize
  id: Initialize
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: OctopusClient.Initialize()
  fullName: Octopus.Client.OctopusClient.Initialize()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Initialize
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 108
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes this instance.\n"
  example: []
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: Octopus.Client.OctopusClient.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.Get``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Get``1(System.String,System.Object)
  id: Get``1(System.String,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Get<TResource>(String, Object)
  nameWithType: OctopusClient.Get<TResource>(String, Object)
  fullName: Octopus.Client.OctopusClient.Get<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 132
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a single resource from the server using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public TResource Get<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resource.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: '{TResource}'
      description: "\nThe resource from the server.\n"
    content.vb: Public Function Get(Of TResource)(path As String, pathParameters As Object = Nothing) As TResource
  overload: Octopus.Client.OctopusClient.Get*
  implements:
  - Octopus.Client.IOctopusClient.Get``1(System.String,System.Object)
  nameWithType.vb: OctopusClient.Get(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Get(Of TResource)(System.String, System.Object)
  name.vb: Get(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusClient.List``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusClient.List``1(System.String,System.Object)
  id: List``1(System.String,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: List<TResource>(String, Object)
  nameWithType: OctopusClient.List<TResource>(String, Object)
  fullName: Octopus.Client.OctopusClient.List<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: List
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 150
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server using the HTTP GET verb. The collection itself will usually be\nlimited in size (pagination) and links to the next page of data is available in the <xref href=\"Octopus.Client.Model.Resource.Links\" data-throw-if-not-resolved=\"false\"></xref>\nproperty.\n"
  example: []
  syntax:
    content: public ResourceCollection<TResource> List<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: Octopus.Client.Model.ResourceCollection{{TResource}}
      description: "\nThe collection of resources from the server.\n"
    content.vb: Public Function List(Of TResource)(path As String, pathParameters As Object = Nothing) As ResourceCollection(Of TResource)
  overload: Octopus.Client.OctopusClient.List*
  implements:
  - Octopus.Client.IOctopusClient.List``1(System.String,System.Object)
  nameWithType.vb: OctopusClient.List(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.List(Of TResource)(System.String, System.Object)
  name.vb: List(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusClient.ListAll``1(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusClient.ListAll``1(System.String,System.Object)
  id: ListAll``1(System.String,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: ListAll<TResource>(String, Object)
  nameWithType: OctopusClient.ListAll<TResource>(String, Object)
  fullName: Octopus.Client.OctopusClient.ListAll<TResource>(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ListAll
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 165
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server using the HTTP GET verb. All pages will be retrieved.\nproperty.\n"
  example: []
  syntax:
    content: public IReadOnlyList<TResource> ListAll<TResource>(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: System.Collections.Generic.IReadOnlyList{{TResource}}
      description: "\nThe collection of resources from the server.\n"
    content.vb: Public Function ListAll(Of TResource)(path As String, pathParameters As Object = Nothing) As IReadOnlyList(Of TResource)
  overload: Octopus.Client.OctopusClient.ListAll*
  implements:
  - Octopus.Client.IOctopusClient.ListAll``1(System.String,System.Object)
  nameWithType.vb: OctopusClient.ListAll(Of TResource)(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.ListAll(Of TResource)(System.String, System.Object)
  name.vb: ListAll(Of TResource)(String, Object)
- uid: Octopus.Client.OctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.OctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  id: Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: OctopusClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.OctopusClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 186
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server one page at a time using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public void Paginate<TResource>(string path, object pathParameters, Func<ResourceCollection<TResource>, bool> getNextPage)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
      description: "\nA callback invoked for each page of data found. If the callback returns <code>true</code>, the next\npage will also be requested.\n"
    typeParameters:
    - id: TResource
      description: ''
    content.vb: Public Sub Paginate(Of TResource)(path As String, pathParameters As Object, getNextPage As Func(Of ResourceCollection(Of TResource), Boolean))
  overload: Octopus.Client.OctopusClient.Paginate*
  implements:
  - Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  nameWithType.vb: OctopusClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
- uid: Octopus.Client.OctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.OctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  id: Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: OctopusClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.OctopusClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 205
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches a collection of resources from the server one page at a time using the HTTP GET verb.\n"
  example: []
  syntax:
    content: public void Paginate<TResource>(string path, Func<ResourceCollection<TResource>, bool> getNextPage)
    parameters:
    - id: path
      type: System.String
      description: The path from which to fetch the resources.
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
      description: "\nA callback invoked for each page of data found. If the callback returns <code>true</code>, the next\npage will also be requested.\n"
    typeParameters:
    - id: TResource
      description: ''
    content.vb: Public Sub Paginate(Of TResource)(path As String, getNextPage As Func(Of ResourceCollection(Of TResource), Boolean))
  overload: Octopus.Client.OctopusClient.Paginate*
  implements:
  - Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  nameWithType.vb: OctopusClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
- uid: Octopus.Client.OctopusClient.Create``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Create``1(System.String,``0,System.Object)
  id: Create``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Create<TResource>(String, TResource, Object)
  nameWithType: OctopusClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusClient.Create<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Create
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 221
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nCreates a resource at the given URI on the server using the POST verb, then performs a fresh GET request to fetch\nthe created item.\n"
  example: []
  syntax:
    content: public TResource Create<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: '{TResource}'
      description: "\nThe latest copy of the resource from the server.\n"
    content.vb: Public Function Create(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As TResource
  overload: Octopus.Client.OctopusClient.Create*
  implements:
  - Octopus.Client.IOctopusClient.Create``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusClient.Create(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusClient.Post``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Post``1(System.String,``0,System.Object)
  id: Post``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Post<TResource>(String, TResource, Object)
  nameWithType: OctopusClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusClient.Post<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 236
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public void Post<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    content.vb: Public Sub Post(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing)
  overload: Octopus.Client.OctopusClient.Post*
  implements:
  - Octopus.Client.IOctopusClient.Post``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusClient.Post(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusClient.Post``2(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Post``2(System.String,``0,System.Object)
  id: Post``2(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: OctopusClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.OctopusClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 251
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public TResponse Post<TResource, TResponse>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to post.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    - id: TResponse
      description: ''
    return:
      type: '{TResponse}'
    content.vb: Public Function Post(Of TResource, TResponse)(path As String, resource As TResource, pathParameters As Object = Nothing) As TResponse
  overload: Octopus.Client.OctopusClient.Post*
  implements:
  - Octopus.Client.IOctopusClient.Post``2(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusClient.Post(Of TResource, TResponse)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
- uid: Octopus.Client.OctopusClient.Post(System.String)
  commentId: M:Octopus.Client.OctopusClient.Post(System.String)
  id: Post(System.String)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Post(String)
  nameWithType: OctopusClient.Post(String)
  fullName: Octopus.Client.OctopusClient.Post(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Post
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 262
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the POST verb.\n"
  example: []
  syntax:
    content: public void Post(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    content.vb: Public Sub Post(path As String)
  overload: Octopus.Client.OctopusClient.Post*
  implements:
  - Octopus.Client.IOctopusClient.Post(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.Put``1(System.String,``0)
  commentId: M:Octopus.Client.OctopusClient.Put``1(System.String,``0)
  id: Put``1(System.String,``0)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Put<TResource>(String, TResource)
  nameWithType: OctopusClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.OctopusClient.Put<TResource>(System.String, TResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 284
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public void Put<TResource>(string path, TResource resource)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    typeParameters:
    - id: TResource
    content.vb: Public Sub Put(Of TResource)(path As String, resource As TResource)
  overload: Octopus.Client.OctopusClient.Put*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusClient.Put``1(System.String,{TResource})
  nameWithType.vb: OctopusClient.Put(Of TResource)(String, TResource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
- uid: Octopus.Client.OctopusClient.Put(System.String)
  commentId: M:Octopus.Client.OctopusClient.Put(System.String)
  id: Put(System.String)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Put(String)
  nameWithType: OctopusClient.Put(String)
  fullName: Octopus.Client.OctopusClient.Put(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 305
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public void Put(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    content.vb: Public Sub Put(path As String)
  overload: Octopus.Client.OctopusClient.Put*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusClient.Put(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.Put``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Put``1(System.String,``0,System.Object)
  id: Put``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Put<TResource>(String, TResource, Object)
  nameWithType: OctopusClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusClient.Put<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Put
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 319
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nSends a command to a resource at the given URI on the server using the PUT verb.\n"
  example: []
  syntax:
    content: public void Put<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the container resource.
    - id: resource
      type: '{TResource}'
      description: The resource to create.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    content.vb: Public Sub Put(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing)
  overload: Octopus.Client.OctopusClient.Put*
  implements:
  - Octopus.Client.IOctopusClient.Put``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusClient.Put(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusClient.Delete(System.String,System.Object,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Delete(System.String,System.Object,System.Object)
  id: Delete(System.String,System.Object,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Delete(String, Object, Object)
  nameWithType: OctopusClient.Delete(String, Object, Object)
  fullName: Octopus.Client.OctopusClient.Delete(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Delete
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 332
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nDeletes the resource at the given URI from the server using a the DELETE verb.\n"
  example: []
  syntax:
    content: public void Delete(string path, object pathParameters = null, object resource = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to delete.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    - id: resource
      type: System.Object
      description: The resource to pass as the request body, if supplied.
    content.vb: Public Sub Delete(path As String, pathParameters As Object = Nothing, resource As Object = Nothing)
  overload: Octopus.Client.OctopusClient.Delete*
  implements:
  - Octopus.Client.IOctopusClient.Delete(System.String,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.Update``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.OctopusClient.Update``1(System.String,``0,System.Object)
  id: Update``1(System.String,``0,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Update<TResource>(String, TResource, Object)
  nameWithType: OctopusClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.OctopusClient.Update<TResource>(System.String, TResource, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Update
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 350
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nUpdates the resource at the given URI on the server using the PUT verb, then performs a fresh GET request to reload\nthe data.\n"
  example: []
  syntax:
    content: public TResource Update<TResource>(string path, TResource resource, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to update.
    - id: resource
      type: '{TResource}'
      description: The resource to update.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    typeParameters:
    - id: TResource
      description: ''
    return:
      type: '{TResource}'
      description: "\nThe latest copy of the resource from the server.\n"
    content.vb: Public Function Update(Of TResource)(path As String, resource As TResource, pathParameters As Object = Nothing) As TResource
  overload: Octopus.Client.OctopusClient.Update*
  implements:
  - Octopus.Client.IOctopusClient.Update``1(System.String,{TResource},System.Object)
  nameWithType.vb: OctopusClient.Update(Of TResource)(String, TResource, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.OctopusClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
- uid: Octopus.Client.OctopusClient.GetContent(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusClient.GetContent(System.String,System.Object)
  id: GetContent(System.String,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: GetContent(String, Object)
  nameWithType: OctopusClient.GetContent(String, Object)
  fullName: Octopus.Client.OctopusClient.GetContent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetContent
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 374
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nFetches raw content from the resource at the specified path, using the GET verb.\n"
  example: []
  syntax:
    content: public Stream GetContent(string path, object pathParameters = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to fetch.
    - id: pathParameters
      type: System.Object
      description: If the <code>path</code> is a URI template, parameters to use for substitution.
    return:
      type: System.IO.Stream
      description: A stream containing the content of the resource.
    content.vb: Public Function GetContent(path As String, pathParameters As Object = Nothing) As Stream
  overload: Octopus.Client.OctopusClient.GetContent*
  exceptions:
  - type: Octopus.Client.Exceptions.OctopusSecurityException
    commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
    description: "\nHTTP 401 or 403: Thrown when the current user&apos;s API key was not valid, their\naccount is disabled, or they don&apos;t have permission to perform the specified action.\n"
  - type: Octopus.Client.Exceptions.OctopusServerException
    commentId: T:Octopus.Client.Exceptions.OctopusServerException
    description: "\nIf any other error is successfully returned from the server (e.g., a 500\nserver error).\n"
  - type: Octopus.Client.Exceptions.OctopusValidationException
    commentId: T:Octopus.Client.Exceptions.OctopusValidationException
    description: 'HTTP 400: If there was a problem with the request provided by the user.'
  - type: Octopus.Client.Exceptions.OctopusResourceNotFoundException
    commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
    description: 'HTTP 404: If the specified resource does not exist on the server.'
  implements:
  - Octopus.Client.IOctopusClient.GetContent(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.PutContent(System.String,System.IO.Stream)
  commentId: M:Octopus.Client.OctopusClient.PutContent(System.String,System.IO.Stream)
  id: PutContent(System.String,System.IO.Stream)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: PutContent(String, Stream)
  nameWithType: OctopusClient.PutContent(String, Stream)
  fullName: Octopus.Client.OctopusClient.PutContent(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PutContent
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 385
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nCreates or updates the raw content of the resource at the specified path, using the PUT verb.\n"
  example: []
  syntax:
    content: public void PutContent(string path, Stream contentStream)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource to create or update.
    - id: contentStream
      type: System.IO.Stream
      description: A stream containing content of the resource.
    content.vb: Public Sub PutContent(path As String, contentStream As Stream)
  overload: Octopus.Client.OctopusClient.PutContent*
  implements:
  - Octopus.Client.IOctopusClient.PutContent(System.String,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.QualifyUri(System.String,System.Object)
  commentId: M:Octopus.Client.OctopusClient.QualifyUri(System.String,System.Object)
  id: QualifyUri(System.String,System.Object)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: QualifyUri(String, Object)
  nameWithType: OctopusClient.QualifyUri(String, Object)
  fullName: Octopus.Client.OctopusClient.QualifyUri(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: QualifyUri
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 392
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Uri QualifyUri(string path, object parameters = null)
    parameters:
    - id: path
      type: System.String
    - id: parameters
      type: System.Object
    return:
      type: System.Uri
    content.vb: Public Function QualifyUri(path As String, parameters As Object = Nothing) As Uri
  overload: Octopus.Client.OctopusClient.QualifyUri*
  implements:
  - Octopus.Client.IOctopusClient.QualifyUri(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  commentId: M:Octopus.Client.OctopusClient.DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  id: DispatchRequest``1(Octopus.Client.OctopusRequest,System.Boolean)
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: DispatchRequest<TResponseResource>(OctopusRequest, Boolean)
  nameWithType: OctopusClient.DispatchRequest<TResponseResource>(OctopusRequest, Boolean)
  fullName: Octopus.Client.OctopusClient.DispatchRequest<TResponseResource>(Octopus.Client.OctopusRequest, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DispatchRequest
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 401
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: protected virtual OctopusResponse<TResponseResource> DispatchRequest<TResponseResource>(OctopusRequest request, bool readResponse)
    parameters:
    - id: request
      type: Octopus.Client.OctopusRequest
    - id: readResponse
      type: System.Boolean
    typeParameters:
    - id: TResponseResource
    return:
      type: Octopus.Client.OctopusResponse{{TResponseResource}}
    content.vb: Protected Overridable Function DispatchRequest(Of TResponseResource)(request As OctopusRequest, readResponse As Boolean) As OctopusResponse(Of TResponseResource)
  overload: Octopus.Client.OctopusClient.DispatchRequest*
  nameWithType.vb: OctopusClient.DispatchRequest(Of TResponseResource)(OctopusRequest, Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Octopus.Client.OctopusClient.DispatchRequest(Of TResponseResource)(Octopus.Client.OctopusRequest, System.Boolean)
  name.vb: DispatchRequest(Of TResponseResource)(OctopusRequest, Boolean)
- uid: Octopus.Client.OctopusClient.Dispose
  commentId: M:Octopus.Client.OctopusClient.Dispose
  id: Dispose
  parent: Octopus.Client.OctopusClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OctopusClient.Dispose()
  fullName: Octopus.Client.OctopusClient.Dispose()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusClient.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Dispose
    path: ../source/Octopus.Client/OctopusClient.cs
    startLine: 582
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Octopus.Client.OctopusClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.IHttpOctopusClient
  commentId: T:Octopus.Client.IHttpOctopusClient
  parent: Octopus.Client
  name: IHttpOctopusClient
  nameWithType: IHttpOctopusClient
  fullName: Octopus.Client.IHttpOctopusClient
- uid: Octopus.Client.IOctopusClient
  commentId: T:Octopus.Client.IOctopusClient
  parent: Octopus.Client
  name: IOctopusClient
  nameWithType: IOctopusClient
  fullName: Octopus.Client.IOctopusClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.OctopusClient
  commentId: T:Octopus.Client.OctopusClient
  name: OctopusClient
  nameWithType: OctopusClient
  fullName: Octopus.Client.OctopusClient
- uid: Octopus.Client.OctopusClient.#ctor*
  commentId: Overload:Octopus.Client.OctopusClient.#ctor
  name: OctopusClient
  nameWithType: OctopusClient.OctopusClient
  fullName: Octopus.Client.OctopusClient.OctopusClient
- uid: Octopus.Client.OctopusServerEndpoint
  commentId: T:Octopus.Client.OctopusServerEndpoint
  parent: Octopus.Client
  name: OctopusServerEndpoint
  nameWithType: OctopusServerEndpoint
  fullName: Octopus.Client.OctopusServerEndpoint
- uid: Octopus.Client.OctopusClient.RootDocument*
  commentId: Overload:Octopus.Client.OctopusClient.RootDocument
  name: RootDocument
  nameWithType: OctopusClient.RootDocument
  fullName: Octopus.Client.OctopusClient.RootDocument
- uid: Octopus.Client.Model.RootResource
  commentId: T:Octopus.Client.Model.RootResource
  parent: Octopus.Client.Model
  name: RootResource
  nameWithType: RootResource
  fullName: Octopus.Client.Model.RootResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.OctopusClient.Repository*
  commentId: Overload:Octopus.Client.OctopusClient.Repository
  name: Repository
  nameWithType: OctopusClient.Repository
  fullName: Octopus.Client.OctopusClient.Repository
- uid: Octopus.Client.IOctopusClient.Repository
  commentId: P:Octopus.Client.IOctopusClient.Repository
  parent: Octopus.Client.IOctopusClient
  name: Repository
  nameWithType: IOctopusClient.Repository
  fullName: Octopus.Client.IOctopusClient.Repository
- uid: Octopus.Client.IOctopusRepository
  commentId: T:Octopus.Client.IOctopusRepository
  parent: Octopus.Client
  name: IOctopusRepository
  nameWithType: IOctopusRepository
  fullName: Octopus.Client.IOctopusRepository
- uid: Octopus.Client.OctopusClient.IsUsingSecureConnection*
  commentId: Overload:Octopus.Client.OctopusClient.IsUsingSecureConnection
  name: IsUsingSecureConnection
  nameWithType: OctopusClient.IsUsingSecureConnection
  fullName: Octopus.Client.OctopusClient.IsUsingSecureConnection
- uid: Octopus.Client.IOctopusClient.IsUsingSecureConnection
  commentId: P:Octopus.Client.IOctopusClient.IsUsingSecureConnection
  parent: Octopus.Client.IOctopusClient
  name: IsUsingSecureConnection
  nameWithType: IOctopusClient.IsUsingSecureConnection
  fullName: Octopus.Client.IOctopusClient.IsUsingSecureConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.OctopusClient.ForSpace*
  commentId: Overload:Octopus.Client.OctopusClient.ForSpace
  name: ForSpace
  nameWithType: OctopusClient.ForSpace
  fullName: Octopus.Client.OctopusClient.ForSpace
- uid: Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.IOctopusClient
  name: ForSpace(SpaceResource)
  nameWithType: IOctopusClient.ForSpace(SpaceResource)
  fullName: Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: IOctopusClient.ForSpace
    fullName: Octopus.Client.IOctopusClient.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: IOctopusClient.ForSpace
    fullName: Octopus.Client.IOctopusClient.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: Octopus.Client.IOctopusSpaceRepository
  commentId: T:Octopus.Client.IOctopusSpaceRepository
  parent: Octopus.Client
  name: IOctopusSpaceRepository
  nameWithType: IOctopusSpaceRepository
  fullName: Octopus.Client.IOctopusSpaceRepository
- uid: Octopus.Client.OctopusClient.ForSystem*
  commentId: Overload:Octopus.Client.OctopusClient.ForSystem
  name: ForSystem
  nameWithType: OctopusClient.ForSystem
  fullName: Octopus.Client.OctopusClient.ForSystem
- uid: Octopus.Client.IOctopusClient.ForSystem
  commentId: M:Octopus.Client.IOctopusClient.ForSystem
  parent: Octopus.Client.IOctopusClient
  name: ForSystem()
  nameWithType: IOctopusClient.ForSystem()
  fullName: Octopus.Client.IOctopusClient.ForSystem()
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.ForSystem
    name: ForSystem
    nameWithType: IOctopusClient.ForSystem
    fullName: Octopus.Client.IOctopusClient.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.ForSystem
    name: ForSystem
    nameWithType: IOctopusClient.ForSystem
    fullName: Octopus.Client.IOctopusClient.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusSystemRepository
  commentId: T:Octopus.Client.IOctopusSystemRepository
  parent: Octopus.Client
  name: IOctopusSystemRepository
  nameWithType: IOctopusSystemRepository
  fullName: Octopus.Client.IOctopusSystemRepository
- uid: Octopus.Client.OctopusClient.SignIn*
  commentId: Overload:Octopus.Client.OctopusClient.SignIn
  name: SignIn
  nameWithType: OctopusClient.SignIn
  fullName: Octopus.Client.OctopusClient.SignIn
- uid: Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  commentId: M:Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  parent: Octopus.Client.IOctopusClient
  name: SignIn(LoginCommand)
  nameWithType: IOctopusClient.SignIn(LoginCommand)
  fullName: Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
    name: SignIn
    nameWithType: IOctopusClient.SignIn
    fullName: Octopus.Client.IOctopusClient.SignIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.LoginCommand
    name: LoginCommand
    nameWithType: LoginCommand
    fullName: Octopus.Client.Model.LoginCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.SignIn(Octopus.Client.Model.LoginCommand)
    name: SignIn
    nameWithType: IOctopusClient.SignIn
    fullName: Octopus.Client.IOctopusClient.SignIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.LoginCommand
    name: LoginCommand
    nameWithType: LoginCommand
    fullName: Octopus.Client.Model.LoginCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.LoginCommand
  commentId: T:Octopus.Client.Model.LoginCommand
  parent: Octopus.Client.Model
  name: LoginCommand
  nameWithType: LoginCommand
  fullName: Octopus.Client.Model.LoginCommand
- uid: Octopus.Client.OctopusClient.SignOut*
  commentId: Overload:Octopus.Client.OctopusClient.SignOut
  name: SignOut
  nameWithType: OctopusClient.SignOut
  fullName: Octopus.Client.OctopusClient.SignOut
- uid: Octopus.Client.IOctopusClient.SignOut
  commentId: M:Octopus.Client.IOctopusClient.SignOut
  parent: Octopus.Client.IOctopusClient
  name: SignOut()
  nameWithType: IOctopusClient.SignOut()
  fullName: Octopus.Client.IOctopusClient.SignOut()
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.SignOut
    name: SignOut
    nameWithType: IOctopusClient.SignOut
    fullName: Octopus.Client.IOctopusClient.SignOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.SignOut
    name: SignOut
    nameWithType: IOctopusClient.SignOut
    fullName: Octopus.Client.IOctopusClient.SignOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IHttpOctopusClient.BeforeSendingHttpRequest
  commentId: E:Octopus.Client.IHttpOctopusClient.BeforeSendingHttpRequest
  parent: Octopus.Client.IHttpOctopusClient
  name: BeforeSendingHttpRequest
  nameWithType: IHttpOctopusClient.BeforeSendingHttpRequest
  fullName: Octopus.Client.IHttpOctopusClient.BeforeSendingHttpRequest
- uid: System.Action{System.Net.WebRequest}
  commentId: T:System.Action{System.Net.WebRequest}
  parent: System
  definition: System.Action`1
  name: Action<WebRequest>
  nameWithType: Action<WebRequest>
  fullName: System.Action<System.Net.WebRequest>
  nameWithType.vb: Action(Of WebRequest)
  fullName.vb: System.Action(Of System.Net.WebRequest)
  name.vb: Action(Of WebRequest)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebRequest
    name: WebRequest
    nameWithType: WebRequest
    fullName: System.Net.WebRequest
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebRequest
    name: WebRequest
    nameWithType: WebRequest
    fullName: System.Net.WebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IHttpOctopusClient.AfterReceivingHttpResponse
  commentId: E:Octopus.Client.IHttpOctopusClient.AfterReceivingHttpResponse
  parent: Octopus.Client.IHttpOctopusClient
  name: AfterReceivingHttpResponse
  nameWithType: IHttpOctopusClient.AfterReceivingHttpResponse
  fullName: Octopus.Client.IHttpOctopusClient.AfterReceivingHttpResponse
- uid: System.Action{System.Net.WebResponse}
  commentId: T:System.Action{System.Net.WebResponse}
  parent: System
  definition: System.Action`1
  name: Action<WebResponse>
  nameWithType: Action<WebResponse>
  fullName: System.Action<System.Net.WebResponse>
  nameWithType.vb: Action(Of WebResponse)
  fullName.vb: System.Action(Of System.Net.WebResponse)
  name.vb: Action(Of WebResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebResponse
    name: WebResponse
    nameWithType: WebResponse
    fullName: System.Net.WebResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebResponse
    name: WebResponse
    nameWithType: WebResponse
    fullName: System.Net.WebResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.SendingOctopusRequest
  commentId: E:Octopus.Client.IOctopusClient.SendingOctopusRequest
  parent: Octopus.Client.IOctopusClient
  name: SendingOctopusRequest
  nameWithType: IOctopusClient.SendingOctopusRequest
  fullName: Octopus.Client.IOctopusClient.SendingOctopusRequest
- uid: System.Action{Octopus.Client.OctopusRequest}
  commentId: T:System.Action{Octopus.Client.OctopusRequest}
  parent: System
  definition: System.Action`1
  name: Action<OctopusRequest>
  nameWithType: Action<OctopusRequest>
  fullName: System.Action<Octopus.Client.OctopusRequest>
  nameWithType.vb: Action(Of OctopusRequest)
  fullName.vb: System.Action(Of Octopus.Client.OctopusRequest)
  name.vb: Action(Of OctopusRequest)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.OctopusRequest
    name: OctopusRequest
    nameWithType: OctopusRequest
    fullName: Octopus.Client.OctopusRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.OctopusRequest
    name: OctopusRequest
    nameWithType: OctopusRequest
    fullName: Octopus.Client.OctopusRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.ReceivedOctopusResponse
  commentId: E:Octopus.Client.IOctopusClient.ReceivedOctopusResponse
  parent: Octopus.Client.IOctopusClient
  name: ReceivedOctopusResponse
  nameWithType: IOctopusClient.ReceivedOctopusResponse
  fullName: Octopus.Client.IOctopusClient.ReceivedOctopusResponse
- uid: System.Action{Octopus.Client.OctopusResponse}
  commentId: T:System.Action{Octopus.Client.OctopusResponse}
  parent: System
  definition: System.Action`1
  name: Action<OctopusResponse>
  nameWithType: Action<OctopusResponse>
  fullName: System.Action<Octopus.Client.OctopusResponse>
  nameWithType.vb: Action(Of OctopusResponse)
  fullName.vb: System.Action(Of Octopus.Client.OctopusResponse)
  name.vb: Action(Of OctopusResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.OctopusResponse
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.OctopusResponse
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Initialize*
  commentId: Overload:Octopus.Client.OctopusClient.Initialize
  name: Initialize
  nameWithType: OctopusClient.Initialize
  fullName: Octopus.Client.OctopusClient.Initialize
- uid: Octopus.Client.OctopusClient.Get*
  commentId: Overload:Octopus.Client.OctopusClient.Get
  name: Get
  nameWithType: OctopusClient.Get
  fullName: Octopus.Client.OctopusClient.Get
- uid: Octopus.Client.IOctopusClient.Get``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Get``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: Get<TResource>(String, Object)
  nameWithType: IOctopusClient.Get<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusClient.Get<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusClient.Get(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Get(Of TResource)(System.String, System.Object)
  name.vb: Get(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Get``1(System.String,System.Object)
    name: Get<TResource>
    nameWithType: IOctopusClient.Get<TResource>
    fullName: Octopus.Client.IOctopusClient.Get<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Get``1(System.String,System.Object)
    name: Get(Of TResource)
    nameWithType: IOctopusClient.Get(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Get(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TResource}'
  commentId: '!:TResource'
  definition: TResource
  name: TResource
  nameWithType: TResource
  fullName: TResource
- uid: TResource
  name: TResource
  nameWithType: TResource
  fullName: TResource
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.OctopusClient.List*
  commentId: Overload:Octopus.Client.OctopusClient.List
  name: List
  nameWithType: OctopusClient.List
  fullName: Octopus.Client.OctopusClient.List
- uid: Octopus.Client.IOctopusClient.List``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.List``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: List<TResource>(String, Object)
  nameWithType: IOctopusClient.List<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusClient.List<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusClient.List(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusClient.List(Of TResource)(System.String, System.Object)
  name.vb: List(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.List``1(System.String,System.Object)
    name: List<TResource>
    nameWithType: IOctopusClient.List<TResource>
    fullName: Octopus.Client.IOctopusClient.List<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.List``1(System.String,System.Object)
    name: List(Of TResource)
    nameWithType: IOctopusClient.List(Of TResource)
    fullName: Octopus.Client.IOctopusClient.List(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ResourceCollection{{TResource}}
  commentId: T:Octopus.Client.Model.ResourceCollection{``0}
  parent: Octopus.Client.Model
  definition: Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: Octopus.Client.Model.ResourceCollection<TResource>
  nameWithType.vb: ResourceCollection(Of TResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource)
  name.vb: ResourceCollection(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Model.ResourceCollection`1
  commentId: T:Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: Octopus.Client.Model.ResourceCollection<TResource>
  nameWithType.vb: ResourceCollection(Of TResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource)
  name.vb: ResourceCollection(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.ListAll*
  commentId: Overload:Octopus.Client.OctopusClient.ListAll
  name: ListAll
  nameWithType: OctopusClient.ListAll
  fullName: Octopus.Client.OctopusClient.ListAll
- uid: Octopus.Client.IOctopusClient.ListAll``1(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.ListAll``1(System.String,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: ListAll<TResource>(String, Object)
  nameWithType: IOctopusClient.ListAll<TResource>(String, Object)
  fullName: Octopus.Client.IOctopusClient.ListAll<TResource>(System.String, System.Object)
  nameWithType.vb: IOctopusClient.ListAll(Of TResource)(String, Object)
  fullName.vb: Octopus.Client.IOctopusClient.ListAll(Of TResource)(System.String, System.Object)
  name.vb: ListAll(Of TResource)(String, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.ListAll``1(System.String,System.Object)
    name: ListAll<TResource>
    nameWithType: IOctopusClient.ListAll<TResource>
    fullName: Octopus.Client.IOctopusClient.ListAll<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.ListAll``1(System.String,System.Object)
    name: ListAll(Of TResource)
    nameWithType: IOctopusClient.ListAll(Of TResource)
    fullName: Octopus.Client.IOctopusClient.ListAll(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{{TResource}}
  commentId: T:System.Collections.Generic.IReadOnlyList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TResource>
  nameWithType: IReadOnlyList<TResource>
  fullName: System.Collections.Generic.IReadOnlyList<TResource>
  nameWithType.vb: IReadOnlyList(Of TResource)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TResource)
  name.vb: IReadOnlyList(Of TResource)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.OctopusClient.Paginate*
  commentId: Overload:Octopus.Client.OctopusClient.Paginate
  name: Paginate
  nameWithType: OctopusClient.Paginate
  fullName: Octopus.Client.OctopusClient.Paginate
- uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  commentId: M:Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean}
  commentId: T:System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ResourceCollection<TResource>, Boolean>
  nameWithType: Func<ResourceCollection<TResource>, Boolean>
  fullName: System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>
  nameWithType.vb: Func(Of ResourceCollection(Of TResource), Boolean)
  fullName.vb: System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean)
  name.vb: Func(Of ResourceCollection(Of TResource), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  isExternal: true
  name: Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusClient.Paginate<TResource>(String, Object, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusClient.Paginate<TResource>(System.String, System.Object, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusClient.Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusClient.Paginate(Of TResource)(System.String, System.Object, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Object, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Object,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{{TResource}},System.Boolean})
  commentId: M:Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  commentId: M:Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
  isExternal: true
  name: Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  nameWithType: IOctopusClient.Paginate<TResource>(String, Func<ResourceCollection<TResource>, Boolean>)
  fullName: Octopus.Client.IOctopusClient.Paginate<TResource>(System.String, System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>)
  nameWithType.vb: IOctopusClient.Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  fullName.vb: Octopus.Client.IOctopusClient.Paginate(Of TResource)(System.String, System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean))
  name.vb: Paginate(Of TResource)(String, Func(Of ResourceCollection(Of TResource), Boolean))
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate<TResource>
    nameWithType: IOctopusClient.Paginate<TResource>
    fullName: Octopus.Client.IOctopusClient.Paginate<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Paginate``1(System.String,System.Func{Octopus.Client.Model.ResourceCollection{``0},System.Boolean})
    name: Paginate(Of TResource)
    nameWithType: IOctopusClient.Paginate(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Paginate(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Create*
  commentId: Overload:Octopus.Client.OctopusClient.Create
  name: Create
  nameWithType: OctopusClient.Create
  fullName: Octopus.Client.OctopusClient.Create
- uid: Octopus.Client.IOctopusClient.Create``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
  name: Create<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Create<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Create(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
    name: Create<TResource>
    nameWithType: IOctopusClient.Create<TResource>
    fullName: Octopus.Client.IOctopusClient.Create<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
    name: Create(Of TResource)
    nameWithType: IOctopusClient.Create(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Create(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
  isExternal: true
  name: Create<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Create<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Create<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Create(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Create(Of TResource)(System.String, TResource, System.Object)
  name.vb: Create(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
    name: Create<TResource>
    nameWithType: IOctopusClient.Create<TResource>
    fullName: Octopus.Client.IOctopusClient.Create<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Create``1(System.String,``0,System.Object)
    name: Create(Of TResource)
    nameWithType: IOctopusClient.Create(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Create(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Post*
  commentId: Overload:Octopus.Client.OctopusClient.Post
  name: Post
  nameWithType: OctopusClient.Post
  fullName: Octopus.Client.OctopusClient.Post
- uid: Octopus.Client.IOctopusClient.Post``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
  name: Post<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Post<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Post(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
    name: Post<TResource>
    nameWithType: IOctopusClient.Post<TResource>
    fullName: Octopus.Client.IOctopusClient.Post<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
    name: Post(Of TResource)
    nameWithType: IOctopusClient.Post(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Post(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
  isExternal: true
  name: Post<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Post<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Post<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Post(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Post(Of TResource)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
    name: Post<TResource>
    nameWithType: IOctopusClient.Post<TResource>
    fullName: Octopus.Client.IOctopusClient.Post<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Post``1(System.String,``0,System.Object)
    name: Post(Of TResource)
    nameWithType: IOctopusClient.Post(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Post(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Post``2(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: IOctopusClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Post(Of TResource, TResponse)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
    name: Post<TResource, TResponse>
    nameWithType: IOctopusClient.Post<TResource, TResponse>
    fullName: Octopus.Client.IOctopusClient.Post<TResource, TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
    name: Post(Of TResource, TResponse)
    nameWithType: IOctopusClient.Post(Of TResource, TResponse)
    fullName: Octopus.Client.IOctopusClient.Post(Of TResource, TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
  isExternal: true
  name: Post<TResource, TResponse>(String, TResource, Object)
  nameWithType: IOctopusClient.Post<TResource, TResponse>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Post<TResource, TResponse>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Post(Of TResource, TResponse)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Post(Of TResource, TResponse)(System.String, TResource, System.Object)
  name.vb: Post(Of TResource, TResponse)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
    name: Post<TResource, TResponse>
    nameWithType: IOctopusClient.Post<TResource, TResponse>
    fullName: Octopus.Client.IOctopusClient.Post<TResource, TResponse>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Post``2(System.String,``0,System.Object)
    name: Post(Of TResource, TResponse)
    nameWithType: IOctopusClient.Post(Of TResource, TResponse)
    fullName: Octopus.Client.IOctopusClient.Post(Of TResource, TResponse)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Octopus.Client.IOctopusClient.Post(System.String)
  commentId: M:Octopus.Client.IOctopusClient.Post(System.String)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: Post(String)
  nameWithType: IOctopusClient.Post(String)
  fullName: Octopus.Client.IOctopusClient.Post(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Post(System.String)
    name: Post
    nameWithType: IOctopusClient.Post
    fullName: Octopus.Client.IOctopusClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Post(System.String)
    name: Post
    nameWithType: IOctopusClient.Post
    fullName: Octopus.Client.IOctopusClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Exceptions.OctopusSecurityException
  commentId: T:Octopus.Client.Exceptions.OctopusSecurityException
  name: OctopusSecurityException
  nameWithType: OctopusSecurityException
  fullName: Octopus.Client.Exceptions.OctopusSecurityException
- uid: Octopus.Client.Exceptions.OctopusServerException
  commentId: T:Octopus.Client.Exceptions.OctopusServerException
  name: OctopusServerException
  nameWithType: OctopusServerException
  fullName: Octopus.Client.Exceptions.OctopusServerException
- uid: Octopus.Client.Exceptions.OctopusValidationException
  commentId: T:Octopus.Client.Exceptions.OctopusValidationException
  name: OctopusValidationException
  nameWithType: OctopusValidationException
  fullName: Octopus.Client.Exceptions.OctopusValidationException
- uid: Octopus.Client.Exceptions.OctopusResourceNotFoundException
  commentId: T:Octopus.Client.Exceptions.OctopusResourceNotFoundException
  name: OctopusResourceNotFoundException
  nameWithType: OctopusResourceNotFoundException
  fullName: Octopus.Client.Exceptions.OctopusResourceNotFoundException
- uid: Octopus.Client.OctopusClient.Put*
  commentId: Overload:Octopus.Client.OctopusClient.Put
  name: Put
  nameWithType: OctopusClient.Put
  fullName: Octopus.Client.OctopusClient.Put
- uid: Octopus.Client.IOctopusClient.Put``1(System.String,{TResource})
  commentId: M:Octopus.Client.IOctopusClient.Put``1(System.String,``0)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
  name: Put<TResource>(String, TResource)
  nameWithType: IOctopusClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.IOctopusClient.Put<TResource>(System.String, TResource)
  nameWithType.vb: IOctopusClient.Put(Of TResource)(String, TResource)
  fullName.vb: Octopus.Client.IOctopusClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
    name: Put<TResource>
    nameWithType: IOctopusClient.Put<TResource>
    fullName: Octopus.Client.IOctopusClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
    name: Put(Of TResource)
    nameWithType: IOctopusClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
  commentId: M:Octopus.Client.IOctopusClient.Put``1(System.String,``0)
  isExternal: true
  name: Put<TResource>(String, TResource)
  nameWithType: IOctopusClient.Put<TResource>(String, TResource)
  fullName: Octopus.Client.IOctopusClient.Put<TResource>(System.String, TResource)
  nameWithType.vb: IOctopusClient.Put(Of TResource)(String, TResource)
  fullName.vb: Octopus.Client.IOctopusClient.Put(Of TResource)(System.String, TResource)
  name.vb: Put(Of TResource)(String, TResource)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
    name: Put<TResource>
    nameWithType: IOctopusClient.Put<TResource>
    fullName: Octopus.Client.IOctopusClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0)
    name: Put(Of TResource)
    nameWithType: IOctopusClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Put(System.String)
  commentId: M:Octopus.Client.IOctopusClient.Put(System.String)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: Put(String)
  nameWithType: IOctopusClient.Put(String)
  fullName: Octopus.Client.IOctopusClient.Put(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Put(System.String)
    name: Put
    nameWithType: IOctopusClient.Put
    fullName: Octopus.Client.IOctopusClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Put(System.String)
    name: Put
    nameWithType: IOctopusClient.Put
    fullName: Octopus.Client.IOctopusClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Put``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
  name: Put<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Put<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Put(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
    name: Put<TResource>
    nameWithType: IOctopusClient.Put<TResource>
    fullName: Octopus.Client.IOctopusClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
    name: Put(Of TResource)
    nameWithType: IOctopusClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
  isExternal: true
  name: Put<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Put<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Put<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Put(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Put(Of TResource)(System.String, TResource, System.Object)
  name.vb: Put(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
    name: Put<TResource>
    nameWithType: IOctopusClient.Put<TResource>
    fullName: Octopus.Client.IOctopusClient.Put<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Put``1(System.String,``0,System.Object)
    name: Put(Of TResource)
    nameWithType: IOctopusClient.Put(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Put(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Delete*
  commentId: Overload:Octopus.Client.OctopusClient.Delete
  name: Delete
  nameWithType: OctopusClient.Delete
  fullName: Octopus.Client.OctopusClient.Delete
- uid: Octopus.Client.IOctopusClient.Delete(System.String,System.Object,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Delete(System.String,System.Object,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: Delete(String, Object, Object)
  nameWithType: IOctopusClient.Delete(String, Object, Object)
  fullName: Octopus.Client.IOctopusClient.Delete(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Delete(System.String,System.Object,System.Object)
    name: Delete
    nameWithType: IOctopusClient.Delete
    fullName: Octopus.Client.IOctopusClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Delete(System.String,System.Object,System.Object)
    name: Delete
    nameWithType: IOctopusClient.Delete
    fullName: Octopus.Client.IOctopusClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Update*
  commentId: Overload:Octopus.Client.OctopusClient.Update
  name: Update
  nameWithType: OctopusClient.Update
  fullName: Octopus.Client.OctopusClient.Update
- uid: Octopus.Client.IOctopusClient.Update``1(System.String,{TResource},System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
  parent: Octopus.Client.IOctopusClient
  definition: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
  name: Update<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Update<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Update(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
    name: Update<TResource>
    nameWithType: IOctopusClient.Update<TResource>
    fullName: Octopus.Client.IOctopusClient.Update<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
    name: Update(Of TResource)
    nameWithType: IOctopusClient.Update(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Update(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
  isExternal: true
  name: Update<TResource>(String, TResource, Object)
  nameWithType: IOctopusClient.Update<TResource>(String, TResource, Object)
  fullName: Octopus.Client.IOctopusClient.Update<TResource>(System.String, TResource, System.Object)
  nameWithType.vb: IOctopusClient.Update(Of TResource)(String, TResource, Object)
  fullName.vb: Octopus.Client.IOctopusClient.Update(Of TResource)(System.String, TResource, System.Object)
  name.vb: Update(Of TResource)(String, TResource, Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
    name: Update<TResource>
    nameWithType: IOctopusClient.Update<TResource>
    fullName: Octopus.Client.IOctopusClient.Update<TResource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.Update``1(System.String,``0,System.Object)
    name: Update(Of TResource)
    nameWithType: IOctopusClient.Update(Of TResource)
    fullName: Octopus.Client.IOctopusClient.Update(Of TResource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.GetContent*
  commentId: Overload:Octopus.Client.OctopusClient.GetContent
  name: GetContent
  nameWithType: OctopusClient.GetContent
  fullName: Octopus.Client.OctopusClient.GetContent
- uid: Octopus.Client.IOctopusClient.GetContent(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.GetContent(System.String,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: GetContent(String, Object)
  nameWithType: IOctopusClient.GetContent(String, Object)
  fullName: Octopus.Client.IOctopusClient.GetContent(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.GetContent(System.String,System.Object)
    name: GetContent
    nameWithType: IOctopusClient.GetContent
    fullName: Octopus.Client.IOctopusClient.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.GetContent(System.String,System.Object)
    name: GetContent
    nameWithType: IOctopusClient.GetContent
    fullName: Octopus.Client.IOctopusClient.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Octopus.Client.OctopusClient.PutContent*
  commentId: Overload:Octopus.Client.OctopusClient.PutContent
  name: PutContent
  nameWithType: OctopusClient.PutContent
  fullName: Octopus.Client.OctopusClient.PutContent
- uid: Octopus.Client.IOctopusClient.PutContent(System.String,System.IO.Stream)
  commentId: M:Octopus.Client.IOctopusClient.PutContent(System.String,System.IO.Stream)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: PutContent(String, Stream)
  nameWithType: IOctopusClient.PutContent(String, Stream)
  fullName: Octopus.Client.IOctopusClient.PutContent(System.String, System.IO.Stream)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.PutContent(System.String,System.IO.Stream)
    name: PutContent
    nameWithType: IOctopusClient.PutContent
    fullName: Octopus.Client.IOctopusClient.PutContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.PutContent(System.String,System.IO.Stream)
    name: PutContent
    nameWithType: IOctopusClient.PutContent
    fullName: Octopus.Client.IOctopusClient.PutContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.QualifyUri*
  commentId: Overload:Octopus.Client.OctopusClient.QualifyUri
  name: QualifyUri
  nameWithType: OctopusClient.QualifyUri
  fullName: Octopus.Client.OctopusClient.QualifyUri
- uid: Octopus.Client.IOctopusClient.QualifyUri(System.String,System.Object)
  commentId: M:Octopus.Client.IOctopusClient.QualifyUri(System.String,System.Object)
  parent: Octopus.Client.IOctopusClient
  isExternal: true
  name: QualifyUri(String, Object)
  nameWithType: IOctopusClient.QualifyUri(String, Object)
  fullName: Octopus.Client.IOctopusClient.QualifyUri(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.IOctopusClient.QualifyUri(System.String,System.Object)
    name: QualifyUri
    nameWithType: IOctopusClient.QualifyUri
    fullName: Octopus.Client.IOctopusClient.QualifyUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusClient.QualifyUri(System.String,System.Object)
    name: QualifyUri
    nameWithType: IOctopusClient.QualifyUri
    fullName: Octopus.Client.IOctopusClient.QualifyUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Octopus.Client.OctopusClient.DispatchRequest*
  commentId: Overload:Octopus.Client.OctopusClient.DispatchRequest
  name: DispatchRequest
  nameWithType: OctopusClient.DispatchRequest
  fullName: Octopus.Client.OctopusClient.DispatchRequest
- uid: Octopus.Client.OctopusRequest
  commentId: T:Octopus.Client.OctopusRequest
  parent: Octopus.Client
  name: OctopusRequest
  nameWithType: OctopusRequest
  fullName: Octopus.Client.OctopusRequest
- uid: Octopus.Client.OctopusResponse{{TResponseResource}}
  commentId: T:Octopus.Client.OctopusResponse{``0}
  parent: Octopus.Client
  definition: Octopus.Client.OctopusResponse`1
  name: OctopusResponse<TResponseResource>
  nameWithType: OctopusResponse<TResponseResource>
  fullName: Octopus.Client.OctopusResponse<TResponseResource>
  nameWithType.vb: OctopusResponse(Of TResponseResource)
  fullName.vb: Octopus.Client.OctopusResponse(Of TResponseResource)
  name.vb: OctopusResponse(Of TResponseResource)
  spec.csharp:
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusResponse`1
  commentId: T:Octopus.Client.OctopusResponse`1
  name: OctopusResponse<TResponseResource>
  nameWithType: OctopusResponse<TResponseResource>
  fullName: Octopus.Client.OctopusResponse<TResponseResource>
  nameWithType.vb: OctopusResponse(Of TResponseResource)
  fullName.vb: Octopus.Client.OctopusResponse(Of TResponseResource)
  name.vb: OctopusResponse(Of TResponseResource)
  spec.csharp:
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.OctopusResponse`1
    name: OctopusResponse
    nameWithType: OctopusResponse
    fullName: Octopus.Client.OctopusResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponseResource
    nameWithType: TResponseResource
    fullName: TResponseResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusClient.Dispose*
  commentId: Overload:Octopus.Client.OctopusClient.Dispose
  name: Dispose
  nameWithType: OctopusClient.Dispose
  fullName: Octopus.Client.OctopusClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
