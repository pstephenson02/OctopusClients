### YamlMime:ManagedReference
items:
- uid: Octopus.Client.OctopusRepositoryExtensions
  commentId: T:Octopus.Client.OctopusRepositoryExtensions
  id: OctopusRepositoryExtensions
  parent: Octopus.Client
  children:
  - Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  - Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  - Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusRepository,Octopus.Client.Model.SpaceResource)
  - Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  - Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusRepository)
  langs:
  - csharp
  - vb
  name: OctopusRepositoryExtensions
  nameWithType: OctopusRepositoryExtensions
  fullName: Octopus.Client.OctopusRepositoryExtensions
  type: Class
  source:
    remote:
      path: source/Octopus.Client/OctopusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusRepositoryExtensions
    path: ../source/Octopus.Client/OctopusRepository.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static class OctopusRepositoryExtensions
    content.vb: Public Module OctopusRepositoryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  id: CreateRepository(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  isExtensionMethod: true
  parent: Octopus.Client.OctopusRepositoryExtensions
  langs:
  - csharp
  - vb
  name: CreateRepository(IOctopusAsyncClient, RepositoryScope)
  nameWithType: OctopusRepositoryExtensions.CreateRepository(IOctopusAsyncClient, RepositoryScope)
  fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository(Octopus.Client.IOctopusAsyncClient, Octopus.Client.RepositoryScope)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateRepository
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static IOctopusAsyncRepository CreateRepository(this IOctopusAsyncClient client, RepositoryScope scope = null)
    parameters:
    - id: client
      type: Octopus.Client.IOctopusAsyncClient
    - id: scope
      type: Octopus.Client.RepositoryScope
    return:
      type: Octopus.Client.IOctopusAsyncRepository
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateRepository(client As IOctopusAsyncClient, scope As RepositoryScope = Nothing) As IOctopusAsyncRepository
  overload: Octopus.Client.OctopusRepositoryExtensions.CreateRepository*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  id: ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  isExtensionMethod: true
  parent: Octopus.Client.OctopusRepositoryExtensions
  langs:
  - csharp
  - vb
  name: ForSpace(IOctopusAsyncRepository, SpaceResource)
  nameWithType: OctopusRepositoryExtensions.ForSpace(IOctopusAsyncRepository, SpaceResource)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository, Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSpace
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static IOctopusSpaceAsyncRepository ForSpace(this IOctopusAsyncRepository repo, SpaceResource space)
    parameters:
    - id: repo
      type: Octopus.Client.IOctopusAsyncRepository
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.IOctopusSpaceAsyncRepository
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSpace(repo As IOctopusAsyncRepository, space As SpaceResource) As IOctopusSpaceAsyncRepository
  overload: Octopus.Client.OctopusRepositoryExtensions.ForSpace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  id: ForSystem(Octopus.Client.IOctopusAsyncRepository)
  isExtensionMethod: true
  parent: Octopus.Client.OctopusRepositoryExtensions
  langs:
  - csharp
  - vb
  name: ForSystem(IOctopusAsyncRepository)
  nameWithType: OctopusRepositoryExtensions.ForSystem(IOctopusAsyncRepository)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSystem
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static IOctopusSystemAsyncRepository ForSystem(this IOctopusAsyncRepository repo)
    parameters:
    - id: repo
      type: Octopus.Client.IOctopusAsyncRepository
    return:
      type: Octopus.Client.IOctopusSystemAsyncRepository
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSystem(repo As IOctopusAsyncRepository) As IOctopusSystemAsyncRepository
  overload: Octopus.Client.OctopusRepositoryExtensions.ForSystem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusRepository,Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusRepository,Octopus.Client.Model.SpaceResource)
  id: ForSpace(Octopus.Client.IOctopusRepository,Octopus.Client.Model.SpaceResource)
  isExtensionMethod: true
  parent: Octopus.Client.OctopusRepositoryExtensions
  langs:
  - csharp
  - vb
  name: ForSpace(IOctopusRepository, SpaceResource)
  nameWithType: OctopusRepositoryExtensions.ForSpace(IOctopusRepository, SpaceResource)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusRepository, Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSpace
    path: ../source/Octopus.Client/OctopusRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static IOctopusSpaceRepository ForSpace(this IOctopusRepository repo, SpaceResource space)
    parameters:
    - id: repo
      type: Octopus.Client.IOctopusRepository
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.IOctopusSpaceRepository
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSpace(repo As IOctopusRepository, space As SpaceResource) As IOctopusSpaceRepository
  overload: Octopus.Client.OctopusRepositoryExtensions.ForSpace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusRepository)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusRepository)
  id: ForSystem(Octopus.Client.IOctopusRepository)
  isExtensionMethod: true
  parent: Octopus.Client.OctopusRepositoryExtensions
  langs:
  - csharp
  - vb
  name: ForSystem(IOctopusRepository)
  nameWithType: OctopusRepositoryExtensions.ForSystem(IOctopusRepository)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusRepository)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ForSystem
    path: ../source/Octopus.Client/OctopusRepository.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static IOctopusSystemRepository ForSystem(this IOctopusRepository repo)
    parameters:
    - id: repo
      type: Octopus.Client.IOctopusRepository
    return:
      type: Octopus.Client.IOctopusSystemRepository
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForSystem(repo As IOctopusRepository) As IOctopusSystemRepository
  overload: Octopus.Client.OctopusRepositoryExtensions.ForSystem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.OctopusRepositoryExtensions.CreateRepository*
  commentId: Overload:Octopus.Client.OctopusRepositoryExtensions.CreateRepository
  name: CreateRepository
  nameWithType: OctopusRepositoryExtensions.CreateRepository
  fullName: Octopus.Client.OctopusRepositoryExtensions.CreateRepository
- uid: Octopus.Client.IOctopusAsyncClient
  commentId: T:Octopus.Client.IOctopusAsyncClient
  parent: Octopus.Client
  name: IOctopusAsyncClient
  nameWithType: IOctopusAsyncClient
  fullName: Octopus.Client.IOctopusAsyncClient
- uid: Octopus.Client.RepositoryScope
  commentId: T:Octopus.Client.RepositoryScope
  parent: Octopus.Client
  name: RepositoryScope
  nameWithType: RepositoryScope
  fullName: Octopus.Client.RepositoryScope
- uid: Octopus.Client.IOctopusAsyncRepository
  commentId: T:Octopus.Client.IOctopusAsyncRepository
  parent: Octopus.Client
  name: IOctopusAsyncRepository
  nameWithType: IOctopusAsyncRepository
  fullName: Octopus.Client.IOctopusAsyncRepository
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace*
  commentId: Overload:Octopus.Client.OctopusRepositoryExtensions.ForSpace
  name: ForSpace
  nameWithType: OctopusRepositoryExtensions.ForSpace
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: Octopus.Client.IOctopusSpaceAsyncRepository
  commentId: T:Octopus.Client.IOctopusSpaceAsyncRepository
  parent: Octopus.Client
  name: IOctopusSpaceAsyncRepository
  nameWithType: IOctopusSpaceAsyncRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem*
  commentId: Overload:Octopus.Client.OctopusRepositoryExtensions.ForSystem
  name: ForSystem
  nameWithType: OctopusRepositoryExtensions.ForSystem
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem
- uid: Octopus.Client.IOctopusSystemAsyncRepository
  commentId: T:Octopus.Client.IOctopusSystemAsyncRepository
  parent: Octopus.Client
  name: IOctopusSystemAsyncRepository
  nameWithType: IOctopusSystemAsyncRepository
  fullName: Octopus.Client.IOctopusSystemAsyncRepository
- uid: Octopus.Client.IOctopusRepository
  commentId: T:Octopus.Client.IOctopusRepository
  parent: Octopus.Client
  name: IOctopusRepository
  nameWithType: IOctopusRepository
  fullName: Octopus.Client.IOctopusRepository
- uid: Octopus.Client.IOctopusSpaceRepository
  commentId: T:Octopus.Client.IOctopusSpaceRepository
  parent: Octopus.Client
  name: IOctopusSpaceRepository
  nameWithType: IOctopusSpaceRepository
  fullName: Octopus.Client.IOctopusSpaceRepository
- uid: Octopus.Client.IOctopusSystemRepository
  commentId: T:Octopus.Client.IOctopusSystemRepository
  parent: Octopus.Client
  name: IOctopusSystemRepository
  nameWithType: IOctopusSystemRepository
  fullName: Octopus.Client.IOctopusSystemRepository
