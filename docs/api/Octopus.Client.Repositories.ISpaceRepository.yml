### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.ISpaceRepository
  commentId: T:Octopus.Client.Repositories.ISpaceRepository
  id: ISpaceRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.ISpaceRepository.Search(System.String,System.String)
  - Octopus.Client.Repositories.ISpaceRepository.SetLogo(Octopus.Client.Model.SpaceResource,System.String,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: ISpaceRepository
  nameWithType: ISpaceRepository
  fullName: Octopus.Client.Repositories.ISpaceRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/SpaceRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ISpaceRepository
    path: ../source/Octopus.Client/Repositories/SpaceRepository.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface ISpaceRepository : ICreate<SpaceResource>, IModify<SpaceResource>, IDelete<SpaceResource>, IFindByName<SpaceResource>, IPaginate<SpaceResource>, IGet<SpaceResource>'
    content.vb: >-
      Public Interface ISpaceRepository
          Inherits ICreate(Of SpaceResource), IModify(Of SpaceResource), IDelete(Of SpaceResource), IFindByName(Of SpaceResource), IGet(Of SpaceResource)
  inheritedMembers:
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}.Create(Octopus.Client.Model.SpaceResource,System.Object)
  - Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}.Modify(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}.Delete(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByName(System.String,System.String,System.Object)
  - Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.SpaceResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindOne(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindMany(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Refresh(Octopus.Client.Model.SpaceResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.ISpaceRepository.SetLogo(Octopus.Client.Model.SpaceResource,System.String,System.IO.Stream)
  commentId: M:Octopus.Client.Repositories.ISpaceRepository.SetLogo(Octopus.Client.Model.SpaceResource,System.String,System.IO.Stream)
  id: SetLogo(Octopus.Client.Model.SpaceResource,System.String,System.IO.Stream)
  parent: Octopus.Client.Repositories.ISpaceRepository
  langs:
  - csharp
  - vb
  name: SetLogo(SpaceResource, String, Stream)
  nameWithType: ISpaceRepository.SetLogo(SpaceResource, String, Stream)
  fullName: Octopus.Client.Repositories.ISpaceRepository.SetLogo(Octopus.Client.Model.SpaceResource, System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/SpaceRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SetLogo
    path: ../source/Octopus.Client/Repositories/SpaceRepository.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: void SetLogo(SpaceResource space, string fileName, Stream contents)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    - id: fileName
      type: System.String
    - id: contents
      type: System.IO.Stream
    content.vb: Sub SetLogo(space As SpaceResource, fileName As String, contents As Stream)
  overload: Octopus.Client.Repositories.ISpaceRepository.SetLogo*
- uid: Octopus.Client.Repositories.ISpaceRepository.Search(System.String,System.String)
  commentId: M:Octopus.Client.Repositories.ISpaceRepository.Search(System.String,System.String)
  id: Search(System.String,System.String)
  parent: Octopus.Client.Repositories.ISpaceRepository
  langs:
  - csharp
  - vb
  name: Search(String, String)
  nameWithType: ISpaceRepository.Search(String, String)
  fullName: Octopus.Client.Repositories.ISpaceRepository.Search(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/SpaceRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Search
    path: ../source/Octopus.Client/Repositories/SpaceRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: SpaceSearchResult[] Search(string spaceId, string keyword)
    parameters:
    - id: spaceId
      type: System.String
    - id: keyword
      type: System.String
    return:
      type: Octopus.Client.Model.SpaceSearchResult[]
    content.vb: Function Search(spaceId As String, keyword As String) As SpaceSearchResult()
  overload: Octopus.Client.Repositories.ISpaceRepository.Search*
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}.Create(Octopus.Client.Model.SpaceResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}.Create(Octopus.Client.Model.SpaceResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(SpaceResource, Object)
  nameWithType: ICreate<SpaceResource>.Create(SpaceResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.SpaceResource>.Create(Octopus.Client.Model.SpaceResource, System.Object)
  nameWithType.vb: ICreate(Of SpaceResource).Create(SpaceResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.SpaceResource).Create(Octopus.Client.Model.SpaceResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<SpaceResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.SpaceResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of SpaceResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.SpaceResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}.Modify(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}.Modify(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(SpaceResource)
  nameWithType: IModify<SpaceResource>.Modify(SpaceResource)
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.SpaceResource>.Modify(Octopus.Client.Model.SpaceResource)
  nameWithType.vb: IModify(Of SpaceResource).Modify(SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.SpaceResource).Modify(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<SpaceResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.SpaceResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of SpaceResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.SpaceResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}.Delete(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}.Delete(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(SpaceResource)
  nameWithType: IDelete<SpaceResource>.Delete(SpaceResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.SpaceResource>.Delete(Octopus.Client.Model.SpaceResource)
  nameWithType.vb: IDelete(Of SpaceResource).Delete(SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.SpaceResource).Delete(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<SpaceResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.SpaceResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of SpaceResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.SpaceResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByName(System.String,System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<SpaceResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.SpaceResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of SpaceResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.SpaceResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<SpaceResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.SpaceResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of SpaceResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.SpaceResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  parent: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<SpaceResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.SpaceResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of SpaceResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.SpaceResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<SpaceResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.SpaceResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of SpaceResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.SpaceResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.SpaceResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.SpaceResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<SpaceResource>, Boolean>, String, Object)
  nameWithType: IPaginate<SpaceResource>.Paginate(Func<ResourceCollection<SpaceResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.SpaceResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of SpaceResource).Paginate(Func(Of ResourceCollection(Of SpaceResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.SpaceResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of SpaceResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<SpaceResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of SpaceResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindOne(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindOne(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<SpaceResource, Boolean>, String, Object)
  nameWithType: IPaginate<SpaceResource>.FindOne(Func<SpaceResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindOne(System.Func<Octopus.Client.Model.SpaceResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of SpaceResource).FindOne(Func(Of SpaceResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindOne(System.Func(Of Octopus.Client.Model.SpaceResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of SpaceResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<SpaceResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of SpaceResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindMany(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindMany(System.Func{Octopus.Client.Model.SpaceResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<SpaceResource, Boolean>, String, Object)
  nameWithType: IPaginate<SpaceResource>.FindMany(Func<SpaceResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindMany(System.Func<Octopus.Client.Model.SpaceResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of SpaceResource).FindMany(Func(Of SpaceResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindMany(System.Func(Of Octopus.Client.Model.SpaceResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of SpaceResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<SpaceResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of SpaceResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<SpaceResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of SpaceResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<SpaceResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of SpaceResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<SpaceResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Get(System.String)
  nameWithType.vb: IGet(Of SpaceResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<SpaceResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of SpaceResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<SpaceResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Get(System.String[])
  nameWithType.vb: IGet(Of SpaceResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<SpaceResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of SpaceResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Refresh(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}.Refresh(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(SpaceResource)
  nameWithType: IGet<SpaceResource>.Refresh(SpaceResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Refresh(Octopus.Client.Model.SpaceResource)
  nameWithType.vb: IGet(Of SpaceResource).Refresh(SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Refresh(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<SpaceResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of SpaceResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<SpaceResource>
  nameWithType: ICreate<SpaceResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: ICreate(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.SpaceResource)
  name.vb: ICreate(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.IModify{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IModify`1
  name: IModify<SpaceResource>
  nameWithType: IModify<SpaceResource>
  fullName: Octopus.Client.Repositories.IModify<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IModify(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of Octopus.Client.Model.SpaceResource)
  name.vb: IModify(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<SpaceResource>
  nameWithType: IDelete<SpaceResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IDelete(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.SpaceResource)
  name.vb: IDelete(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
  isExternal: true
  name: FindByName(String, String, Object)
  nameWithType: IFindByName<TResource>.FindByName(String, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName(System.String, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByName(String, String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName<TResource>.FindByName
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByName(System.String,System.String,System.Object)
    name: FindByName
    nameWithType: IFindByName(Of TResource).FindByName
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.IFindByName{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<SpaceResource>
  nameWithType: IFindByName<SpaceResource>
  fullName: Octopus.Client.Repositories.IFindByName<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IFindByName(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of Octopus.Client.Model.SpaceResource)
  name.vb: IFindByName(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
  isExternal: true
  name: FindByNames(IEnumerable<String>, String, Object)
  nameWithType: IFindByName<TResource>.FindByNames(IEnumerable<String>, String, Object)
  fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames(System.Collections.Generic.IEnumerable<System.String>, System.String, System.Object)
  nameWithType.vb: IFindByName(Of TResource).FindByNames(IEnumerable(Of String), String, Object)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Object)
  name.vb: FindByNames(IEnumerable(Of String), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName<TResource>.FindByNames
    fullName: Octopus.Client.Repositories.IFindByName<TResource>.FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1.FindByNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)
    name: FindByNames
    nameWithType: IFindByName(Of TResource).FindByNames
    fullName: Octopus.Client.Repositories.IFindByName(Of TResource).FindByNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<SpaceResource>
  nameWithType: IPaginate<SpaceResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IPaginate(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.SpaceResource)
  name.vb: IPaginate(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.SpaceResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<SpaceResource>
  nameWithType: IGet<SpaceResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IGet(Of SpaceResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.SpaceResource)
  name.vb: IGet(Of SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IModify`1
  commentId: T:Octopus.Client.Repositories.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IFindByName`1
  commentId: T:Octopus.Client.Repositories.IFindByName`1
  name: IFindByName<TResource>
  nameWithType: IFindByName<TResource>
  fullName: Octopus.Client.Repositories.IFindByName<TResource>
  nameWithType.vb: IFindByName(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IFindByName(Of TResource)
  name.vb: IFindByName(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IFindByName`1
    name: IFindByName
    nameWithType: IFindByName
    fullName: Octopus.Client.Repositories.IFindByName
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ISpaceRepository.SetLogo*
  commentId: Overload:Octopus.Client.Repositories.ISpaceRepository.SetLogo
  name: SetLogo
  nameWithType: ISpaceRepository.SetLogo
  fullName: Octopus.Client.Repositories.ISpaceRepository.SetLogo
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Octopus.Client.Repositories.ISpaceRepository.Search*
  commentId: Overload:Octopus.Client.Repositories.ISpaceRepository.Search
  name: Search
  nameWithType: ISpaceRepository.Search
  fullName: Octopus.Client.Repositories.ISpaceRepository.Search
- uid: Octopus.Client.Model.SpaceSearchResult[]
  isExternal: true
  name: SpaceSearchResult[]
  nameWithType: SpaceSearchResult[]
  fullName: Octopus.Client.Model.SpaceSearchResult[]
  nameWithType.vb: SpaceSearchResult()
  fullName.vb: Octopus.Client.Model.SpaceSearchResult()
  name.vb: SpaceSearchResult()
  spec.csharp:
  - uid: Octopus.Client.Model.SpaceSearchResult
    name: SpaceSearchResult
    nameWithType: SpaceSearchResult
    fullName: Octopus.Client.Model.SpaceSearchResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.SpaceSearchResult
    name: SpaceSearchResult
    nameWithType: SpaceSearchResult
    fullName: Octopus.Client.Model.SpaceSearchResult
  - name: ()
    nameWithType: ()
    fullName: ()
