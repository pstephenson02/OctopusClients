### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Util.PackageIdentityParser
  commentId: T:Octopus.Client.Util.PackageIdentityParser
  id: PackageIdentityParser
  parent: Octopus.Client.Util
  children:
  - Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion(System.String,System.String@,Octopus.Client.Model.SemanticVersion@)
  langs:
  - csharp
  - vb
  name: PackageIdentityParser
  nameWithType: PackageIdentityParser
  fullName: Octopus.Client.Util.PackageIdentityParser
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Util/PackageIdentityParser.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PackageIdentityParser
    path: ../source/Octopus.Client/Util/PackageIdentityParser.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Util
  syntax:
    content: public class PackageIdentityParser
    content.vb: Public Class PackageIdentityParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion(System.String,System.String@,Octopus.Client.Model.SemanticVersion@)
  commentId: M:Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion(System.String,System.String@,Octopus.Client.Model.SemanticVersion@)
  id: TryParsePackageIdAndVersion(System.String,System.String@,Octopus.Client.Model.SemanticVersion@)
  parent: Octopus.Client.Util.PackageIdentityParser
  langs:
  - csharp
  - vb
  name: TryParsePackageIdAndVersion(String, out String, out SemanticVersion)
  nameWithType: PackageIdentityParser.TryParsePackageIdAndVersion(String, out String, out SemanticVersion)
  fullName: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion(System.String, out System.String, out Octopus.Client.Model.SemanticVersion)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Util/PackageIdentityParser.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TryParsePackageIdAndVersion
    path: ../source/Octopus.Client/Util/PackageIdentityParser.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Util
  summary: "\nTakes a string containing a concatenated package ID and version (e.g. a filename or database-key) and \nattempts to parse a package ID and semantic version.  \n"
  example: []
  syntax:
    content: public static bool TryParsePackageIdAndVersion(string idAndVersion, out string packageId, out SemanticVersion version)
    parameters:
    - id: idAndVersion
      type: System.String
      description: The concatenated package ID and version.
    - id: packageId
      type: System.String
      description: The parsed package ID
    - id: version
      type: Octopus.Client.Model.SemanticVersion
      description: The parsed semantic version
    return:
      type: System.Boolean
      description: True if parsing was successful, else False
    content.vb: Public Shared Function TryParsePackageIdAndVersion(idAndVersion As String, ByRef packageId As String, ByRef version As SemanticVersion) As Boolean
  overload: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion*
  nameWithType.vb: PackageIdentityParser.TryParsePackageIdAndVersion(String, ByRef String, ByRef SemanticVersion)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion(System.String, ByRef System.String, ByRef Octopus.Client.Model.SemanticVersion)
  name.vb: TryParsePackageIdAndVersion(String, ByRef String, ByRef SemanticVersion)
references:
- uid: Octopus.Client.Util
  commentId: N:Octopus.Client.Util
  name: Octopus.Client.Util
  nameWithType: Octopus.Client.Util
  fullName: Octopus.Client.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion*
  commentId: Overload:Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion
  name: TryParsePackageIdAndVersion
  nameWithType: PackageIdentityParser.TryParsePackageIdAndVersion
  fullName: Octopus.Client.Util.PackageIdentityParser.TryParsePackageIdAndVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.SemanticVersion
  commentId: T:Octopus.Client.Model.SemanticVersion
  parent: Octopus.Client.Model
  name: SemanticVersion
  nameWithType: SemanticVersion
  fullName: Octopus.Client.Model.SemanticVersion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
