### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  commentId: T:Octopus.Client.Model.Accounts.Usages.StepUsageBase
  id: StepUsageBase
  parent: Octopus.Client.Model.Accounts.Usages
  children:
  - Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor
  - Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
  - Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
  - Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
  - Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
  langs:
  - csharp
  - vb
  name: StepUsageBase
  nameWithType: StepUsageBase
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: StepUsageBase
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public class StepUsageBase
    content.vb: Public Class StepUsageBase
  inheritance:
  - System.Object
  derivedClasses:
  - Octopus.Client.Model.Accounts.Usages.RunbookStepUsage
  - Octopus.Client.Model.Accounts.Usages.StepUsage
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor
  commentId: M:Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  langs:
  - csharp
  - vb
  name: StepUsageBase()
  nameWithType: StepUsageBase.StepUsageBase()
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.StepUsageBase()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public StepUsageBase()
    content.vb: Public Sub New
  overload: Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
  commentId: P:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
  id: ProjectName
  parent: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  langs:
  - csharp
  - vb
  name: ProjectName
  nameWithType: StepUsageBase.ProjectName
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectName
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public string ProjectName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProjectName As String
  overload: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
  commentId: P:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
  id: ProjectId
  parent: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: StepUsageBase.ProjectId
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectId
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 35
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public string ProjectId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProjectId As String
  overload: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
  commentId: P:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
  id: ProjectSlug
  parent: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  langs:
  - csharp
  - vb
  name: ProjectSlug
  nameWithType: StepUsageBase.ProjectSlug
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectSlug
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 36
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public string ProjectSlug { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProjectSlug As String
  overload: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
  commentId: P:Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
  id: Steps
  parent: Octopus.Client.Model.Accounts.Usages.StepUsageBase
  langs:
  - csharp
  - vb
  name: Steps
  nameWithType: StepUsageBase.Steps
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Steps
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 38
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<StepUsageEntry> Steps { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsageEntry}
    content.vb: Public Property Steps As ICollection(Of StepUsageEntry)
  overload: Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model.Accounts.Usages
  commentId: N:Octopus.Client.Model.Accounts.Usages
  name: Octopus.Client.Model.Accounts.Usages
  nameWithType: Octopus.Client.Model.Accounts.Usages
  fullName: Octopus.Client.Model.Accounts.Usages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.StepUsageBase.#ctor
  name: StepUsageBase
  nameWithType: StepUsageBase.StepUsageBase
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.StepUsageBase
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
  name: ProjectName
  nameWithType: StepUsageBase.ProjectName
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
  name: ProjectId
  nameWithType: StepUsageBase.ProjectId
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectId
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
  name: ProjectSlug
  nameWithType: StepUsageBase.ProjectSlug
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.ProjectSlug
- uid: Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
  name: Steps
  nameWithType: StepUsageBase.Steps
  fullName: Octopus.Client.Model.Accounts.Usages.StepUsageBase.Steps
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsageEntry}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsageEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<StepUsageEntry>
  nameWithType: ICollection<StepUsageEntry>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.StepUsageEntry>
  nameWithType.vb: ICollection(Of StepUsageEntry)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.StepUsageEntry)
  name.vb: ICollection(Of StepUsageEntry)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.StepUsageEntry
    name: StepUsageEntry
    nameWithType: StepUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.StepUsageEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.StepUsageEntry
    name: StepUsageEntry
    nameWithType: StepUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.StepUsageEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
