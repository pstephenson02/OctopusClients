### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.PackageReferenceCollection
  commentId: T:Octopus.Client.Model.PackageReferenceCollection
  id: PackageReferenceCollection
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.PackageReferenceCollection.Add(Octopus.Client.Model.PackageReference)
  - Octopus.Client.Model.PackageReferenceCollection.Clear
  - Octopus.Client.Model.PackageReferenceCollection.Contains(Octopus.Client.Model.PackageReference)
  - Octopus.Client.Model.PackageReferenceCollection.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  - Octopus.Client.Model.PackageReferenceCollection.Count
  - Octopus.Client.Model.PackageReferenceCollection.GetByName(System.String)
  - Octopus.Client.Model.PackageReferenceCollection.GetEnumerator
  - Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
  - Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
  - Octopus.Client.Model.PackageReferenceCollection.Remove(Octopus.Client.Model.PackageReference)
  - Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator
  - Octopus.Client.Model.PackageReferenceCollection.TryGetByName(System.String,Octopus.Client.Model.PackageReference@)
  langs:
  - csharp
  - vb
  name: PackageReferenceCollection
  nameWithType: PackageReferenceCollection
  fullName: Octopus.Client.Model.PackageReferenceCollection
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PackageReferenceCollection
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class PackageReferenceCollection : ICollection<PackageReference>, IEnumerable<PackageReference>, IEnumerable'
    content.vb: >-
      Public Class PackageReferenceCollection
          Implements ICollection(Of PackageReference), IEnumerable(Of PackageReference), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  - System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.CommaSeperate
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
  commentId: P:Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
  id: PrimaryPackage
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: PrimaryPackage
  nameWithType: PackageReferenceCollection.PrimaryPackage
  fullName: Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PrimaryPackage
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nReturns the primary (un-named) package reference, or null if it does not exist. \n"
  example: []
  syntax:
    content: public PackageReference PrimaryPackage { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.PackageReference
    content.vb: Public ReadOnly Property PrimaryPackage As PackageReference
  overload: Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PackageReferenceCollection.Add(Octopus.Client.Model.PackageReference)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.Add(Octopus.Client.Model.PackageReference)
  id: Add(Octopus.Client.Model.PackageReference)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: Add(PackageReference)
  nameWithType: PackageReferenceCollection.Add(PackageReference)
  fullName: Octopus.Client.Model.PackageReferenceCollection.Add(Octopus.Client.Model.PackageReference)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Add
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public void Add(PackageReference item)
    parameters:
    - id: item
      type: Octopus.Client.Model.PackageReference
    content.vb: Public Sub Add(item As PackageReference)
  overload: Octopus.Client.Model.PackageReferenceCollection.Add*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Add(Octopus.Client.Model.PackageReference)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.GetByName(System.String)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.GetByName(System.String)
  id: GetByName(System.String)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: GetByName(String)
  nameWithType: PackageReferenceCollection.GetByName(String)
  fullName: Octopus.Client.Model.PackageReferenceCollection.GetByName(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetByName
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 26
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public PackageReference GetByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Octopus.Client.Model.PackageReference
    content.vb: Public Function GetByName(name As String) As PackageReference
  overload: Octopus.Client.Model.PackageReferenceCollection.GetByName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.TryGetByName(System.String,Octopus.Client.Model.PackageReference@)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.TryGetByName(System.String,Octopus.Client.Model.PackageReference@)
  id: TryGetByName(System.String,Octopus.Client.Model.PackageReference@)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: TryGetByName(String, out PackageReference)
  nameWithType: PackageReferenceCollection.TryGetByName(String, out PackageReference)
  fullName: Octopus.Client.Model.PackageReferenceCollection.TryGetByName(System.String, out Octopus.Client.Model.PackageReference)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TryGetByName
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 32
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool TryGetByName(string name, out PackageReference package)
    parameters:
    - id: name
      type: System.String
    - id: package
      type: Octopus.Client.Model.PackageReference
    return:
      type: System.Boolean
    content.vb: Public Function TryGetByName(name As String, ByRef package As PackageReference) As Boolean
  overload: Octopus.Client.Model.PackageReferenceCollection.TryGetByName*
  nameWithType.vb: PackageReferenceCollection.TryGetByName(String, ByRef PackageReference)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.PackageReferenceCollection.TryGetByName(System.String, ByRef Octopus.Client.Model.PackageReference)
  name.vb: TryGetByName(String, ByRef PackageReference)
- uid: Octopus.Client.Model.PackageReferenceCollection.Contains(Octopus.Client.Model.PackageReference)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.Contains(Octopus.Client.Model.PackageReference)
  id: Contains(Octopus.Client.Model.PackageReference)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: Contains(PackageReference)
  nameWithType: PackageReferenceCollection.Contains(PackageReference)
  fullName: Octopus.Client.Model.PackageReferenceCollection.Contains(Octopus.Client.Model.PackageReference)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Contains
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 48
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nReturns true if a PackageReference with the same name exists; otherwise false. \n"
  example: []
  syntax:
    content: public bool Contains(PackageReference item)
    parameters:
    - id: item
      type: Octopus.Client.Model.PackageReference
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As PackageReference) As Boolean
  overload: Octopus.Client.Model.PackageReferenceCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Contains(Octopus.Client.Model.PackageReference)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  id: CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: CopyTo(PackageReference[], Int32)
  nameWithType: PackageReferenceCollection.CopyTo(PackageReference[], Int32)
  fullName: Octopus.Client.Model.PackageReferenceCollection.CopyTo(Octopus.Client.Model.PackageReference[], System.Int32)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CopyTo
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 53
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public void CopyTo(PackageReference[] array, int arrayIndex)
    parameters:
    - id: array
      type: Octopus.Client.Model.PackageReference[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As PackageReference(), arrayIndex As Integer)
  overload: Octopus.Client.Model.PackageReferenceCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  nameWithType.vb: PackageReferenceCollection.CopyTo(PackageReference(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.PackageReferenceCollection.CopyTo(Octopus.Client.Model.PackageReference(), System.Int32)
  name.vb: CopyTo(PackageReference(), Int32)
- uid: Octopus.Client.Model.PackageReferenceCollection.Remove(Octopus.Client.Model.PackageReference)
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.Remove(Octopus.Client.Model.PackageReference)
  id: Remove(Octopus.Client.Model.PackageReference)
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: Remove(PackageReference)
  nameWithType: PackageReferenceCollection.Remove(PackageReference)
  fullName: Octopus.Client.Model.PackageReferenceCollection.Remove(Octopus.Client.Model.PackageReference)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Remove
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 61
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nRemove the PackageReference with the matching name from the collection\n"
  example: []
  syntax:
    content: public bool Remove(PackageReference item)
    parameters:
    - id: item
      type: Octopus.Client.Model.PackageReference
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As PackageReference) As Boolean
  overload: Octopus.Client.Model.PackageReferenceCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Remove(Octopus.Client.Model.PackageReference)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.Count
  commentId: P:Octopus.Client.Model.PackageReferenceCollection.Count
  id: Count
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PackageReferenceCollection.Count
  fullName: Octopus.Client.Model.PackageReferenceCollection.Count
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Count
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 66
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Octopus.Client.Model.PackageReferenceCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PackageReferenceCollection.Clear
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.Clear
  id: Clear
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: PackageReferenceCollection.Clear()
  fullName: Octopus.Client.Model.PackageReferenceCollection.Clear()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Clear
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 68
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Octopus.Client.Model.PackageReferenceCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
  commentId: P:Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
  id: IsReadOnly
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: PackageReferenceCollection.IsReadOnly
  fullName: Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsReadOnly
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 73
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Octopus.Client.Model.PackageReferenceCollection.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.PackageReferenceCollection.GetEnumerator
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.GetEnumerator
  id: GetEnumerator
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: PackageReferenceCollection.GetEnumerator()
  fullName: Octopus.Client.Model.PackageReferenceCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetEnumerator
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 75
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IEnumerator<PackageReference> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Octopus.Client.Model.PackageReference}
    content.vb: Public Function GetEnumerator As IEnumerator(Of PackageReference)
  overload: Octopus.Client.Model.PackageReferenceCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Octopus.Client.Model.PackageReferenceCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: PackageReferenceCollection.IEnumerable.GetEnumerator()
  fullName: Octopus.Client.Model.PackageReferenceCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/PackageReferenceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../source/Octopus.Client/Model/PackageReferenceCollection.cs
    startLine: 80
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PackageReferenceCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<PackageReference>
  nameWithType: ICollection<PackageReference>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>
  nameWithType.vb: ICollection(Of PackageReference)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference)
  name.vb: ICollection(Of PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}
  commentId: T:System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PackageReference>
  nameWithType: IEnumerable<PackageReference>
  fullName: System.Collections.Generic.IEnumerable<Octopus.Client.Model.PackageReference>
  nameWithType.vb: IEnumerable(Of PackageReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.PackageReference)
  name.vb: IEnumerable(Of PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  commentId: M:Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  parent: Octopus.Client.Extensions.StringExtensions
  definition: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  name: NewLineSeperate()
  nameWithType: StringExtensions.NewLineSeperate()
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate()
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}.Octopus.Client.Extensions.StringExtensions.CommaSeperate
  commentId: M:Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  parent: Octopus.Client.Extensions.StringExtensions
  definition: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  name: CommaSeperate()
  nameWithType: StringExtensions.CommaSeperate()
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate()
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExternal: true
  name: NewLineSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.NewLineSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: StringExtensions.NewLineSeperate(IEnumerable(Of Object))
  fullName.vb: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: NewLineSeperate(IEnumerable(Of Object))
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.NewLineSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: NewLineSeperate
    nameWithType: StringExtensions.NewLineSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.NewLineSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Extensions.StringExtensions
  commentId: T:Octopus.Client.Extensions.StringExtensions
  parent: Octopus.Client.Extensions
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Octopus.Client.Extensions.StringExtensions
- uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
  isExternal: true
  name: CommaSeperate(IEnumerable<Object>)
  nameWithType: StringExtensions.CommaSeperate(IEnumerable<Object>)
  fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: StringExtensions.CommaSeperate(IEnumerable(Of Object))
  fullName.vb: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: CommaSeperate(IEnumerable(Of Object))
  spec.csharp:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Extensions.StringExtensions.CommaSeperate(System.Collections.Generic.IEnumerable{System.Object})
    name: CommaSeperate
    nameWithType: StringExtensions.CommaSeperate
    fullName: Octopus.Client.Extensions.StringExtensions.CommaSeperate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Extensions
  commentId: N:Octopus.Client.Extensions
  name: Octopus.Client.Extensions
  nameWithType: Octopus.Client.Extensions
  fullName: Octopus.Client.Extensions
- uid: Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
  name: PrimaryPackage
  nameWithType: PackageReferenceCollection.PrimaryPackage
  fullName: Octopus.Client.Model.PackageReferenceCollection.PrimaryPackage
- uid: Octopus.Client.Model.PackageReference
  commentId: T:Octopus.Client.Model.PackageReference
  parent: Octopus.Client.Model
  name: PackageReference
  nameWithType: PackageReference
  fullName: Octopus.Client.Model.PackageReference
- uid: Octopus.Client.Model.PackageReferenceCollection.Add*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.Add
  name: Add
  nameWithType: PackageReferenceCollection.Add
  fullName: Octopus.Client.Model.PackageReferenceCollection.Add
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Add(Octopus.Client.Model.PackageReference)
  commentId: M:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Add(Octopus.Client.Model.PackageReference)
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(PackageReference)
  nameWithType: ICollection<PackageReference>.Add(PackageReference)
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Add(Octopus.Client.Model.PackageReference)
  nameWithType.vb: ICollection(Of PackageReference).Add(PackageReference)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Add(Octopus.Client.Model.PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<PackageReference>.Add
    fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of PackageReference).Add
    fullName: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.GetByName*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.GetByName
  name: GetByName
  nameWithType: PackageReferenceCollection.GetByName
  fullName: Octopus.Client.Model.PackageReferenceCollection.GetByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.PackageReferenceCollection.TryGetByName*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.TryGetByName
  name: TryGetByName
  nameWithType: PackageReferenceCollection.TryGetByName
  fullName: Octopus.Client.Model.PackageReferenceCollection.TryGetByName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.PackageReferenceCollection.Contains*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.Contains
  name: Contains
  nameWithType: PackageReferenceCollection.Contains
  fullName: Octopus.Client.Model.PackageReferenceCollection.Contains
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Contains(Octopus.Client.Model.PackageReference)
  commentId: M:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Contains(Octopus.Client.Model.PackageReference)
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(PackageReference)
  nameWithType: ICollection<PackageReference>.Contains(PackageReference)
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Contains(Octopus.Client.Model.PackageReference)
  nameWithType.vb: ICollection(Of PackageReference).Contains(PackageReference)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Contains(Octopus.Client.Model.PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<PackageReference>.Contains
    fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of PackageReference).Contains
    fullName: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.CopyTo*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.CopyTo
  name: CopyTo
  nameWithType: PackageReferenceCollection.CopyTo
  fullName: Octopus.Client.Model.PackageReferenceCollection.CopyTo
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.CopyTo(Octopus.Client.Model.PackageReference[],System.Int32)
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(PackageReference[], Int32)
  nameWithType: ICollection<PackageReference>.CopyTo(PackageReference[], Int32)
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.CopyTo(Octopus.Client.Model.PackageReference[], System.Int32)
  nameWithType.vb: ICollection(Of PackageReference).CopyTo(PackageReference(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).CopyTo(Octopus.Client.Model.PackageReference(), System.Int32)
  name.vb: CopyTo(PackageReference(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<PackageReference>.CopyTo
    fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of PackageReference).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReference[]
  isExternal: true
  name: PackageReference[]
  nameWithType: PackageReference[]
  fullName: Octopus.Client.Model.PackageReference[]
  nameWithType.vb: PackageReference()
  fullName.vb: Octopus.Client.Model.PackageReference()
  name.vb: PackageReference()
  spec.csharp:
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.Remove*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.Remove
  name: Remove
  nameWithType: PackageReferenceCollection.Remove
  fullName: Octopus.Client.Model.PackageReferenceCollection.Remove
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Remove(Octopus.Client.Model.PackageReference)
  commentId: M:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Remove(Octopus.Client.Model.PackageReference)
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(PackageReference)
  nameWithType: ICollection<PackageReference>.Remove(PackageReference)
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Remove(Octopus.Client.Model.PackageReference)
  nameWithType.vb: ICollection(Of PackageReference).Remove(PackageReference)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Remove(Octopus.Client.Model.PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<PackageReference>.Remove
    fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of PackageReference).Remove
    fullName: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.Count*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.Count
  name: Count
  nameWithType: PackageReferenceCollection.Count
  fullName: Octopus.Client.Model.PackageReferenceCollection.Count
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Count
  commentId: P:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Count
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<PackageReference>.Count
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Count
  nameWithType.vb: ICollection(Of PackageReference).Count
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Octopus.Client.Model.PackageReferenceCollection.Clear*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.Clear
  name: Clear
  nameWithType: PackageReferenceCollection.Clear
  fullName: Octopus.Client.Model.PackageReferenceCollection.Clear
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Clear
  commentId: M:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.Clear
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<PackageReference>.Clear()
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Clear()
  nameWithType.vb: ICollection(Of PackageReference).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<PackageReference>.Clear
    fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of PackageReference).Clear
    fullName: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.IsReadOnly*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
  name: IsReadOnly
  nameWithType: PackageReferenceCollection.IsReadOnly
  fullName: Octopus.Client.Model.PackageReferenceCollection.IsReadOnly
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<PackageReference>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.PackageReference>.IsReadOnly
  nameWithType.vb: ICollection(Of PackageReference).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.PackageReference).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Octopus.Client.Model.PackageReferenceCollection.GetEnumerator*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: PackageReferenceCollection.GetEnumerator
  fullName: Octopus.Client.Model.PackageReferenceCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Octopus.Client.Model.PackageReference}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<PackageReference>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Octopus.Client.Model.PackageReference>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of PackageReference).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.PackageReference).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<PackageReference>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Octopus.Client.Model.PackageReference>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of PackageReference).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.PackageReference).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Octopus.Client.Model.PackageReference}
  commentId: T:System.Collections.Generic.IEnumerator{Octopus.Client.Model.PackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<PackageReference>
  nameWithType: IEnumerator<PackageReference>
  fullName: System.Collections.Generic.IEnumerator<Octopus.Client.Model.PackageReference>
  nameWithType.vb: IEnumerator(Of PackageReference)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Octopus.Client.Model.PackageReference)
  name.vb: IEnumerator(Of PackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageReference
    name: PackageReference
    nameWithType: PackageReference
    fullName: Octopus.Client.Model.PackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Octopus.Client.Model.PackageReferenceCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: PackageReferenceCollection.IEnumerable.GetEnumerator
  fullName: Octopus.Client.Model.PackageReferenceCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PackageReferenceCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
