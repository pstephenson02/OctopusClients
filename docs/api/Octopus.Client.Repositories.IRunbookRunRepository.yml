### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IRunbookRunRepository
  commentId: T:Octopus.Client.Repositories.IRunbookRunRepository
  id: IRunbookRunRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IRunbookRunRepository.FindBy(System.String[],System.String[],System.String[],System.Int32,System.Nullable{System.Int32})
  - Octopus.Client.Repositories.IRunbookRunRepository.GetTask(Octopus.Client.Model.RunbookRunResource)
  - Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  - Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  langs:
  - csharp
  - vb
  name: IRunbookRunRepository
  nameWithType: IRunbookRunRepository
  fullName: Octopus.Client.Repositories.IRunbookRunRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRunRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IRunbookRunRepository
    path: ../source/Octopus.Client/Repositories/RunbookRunRepository.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface IRunbookRunRepository : IGet<RunbookRunResource>, ICreate<RunbookRunResource>, IPaginate<RunbookRunResource>, IDelete<RunbookRunResource>'
    content.vb: >-
      Public Interface IRunbookRunRepository
          Inherits IGet(Of RunbookRunResource), ICreate(Of RunbookRunResource), IPaginate(Of RunbookRunResource), IDelete(Of RunbookRunResource)
  inheritedMembers:
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String)
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String[])
  - Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Refresh(Octopus.Client.Model.RunbookRunResource)
  - Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}.Create(Octopus.Client.Model.RunbookRunResource,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindOne(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindMany(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}.Delete(Octopus.Client.Model.RunbookRunResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IRunbookRunRepository.GetTask(Octopus.Client.Model.RunbookRunResource)
  commentId: M:Octopus.Client.Repositories.IRunbookRunRepository.GetTask(Octopus.Client.Model.RunbookRunResource)
  id: GetTask(Octopus.Client.Model.RunbookRunResource)
  parent: Octopus.Client.Repositories.IRunbookRunRepository
  langs:
  - csharp
  - vb
  name: GetTask(RunbookRunResource)
  nameWithType: IRunbookRunRepository.GetTask(RunbookRunResource)
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.GetTask(Octopus.Client.Model.RunbookRunResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRunRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetTask
    path: ../source/Octopus.Client/Repositories/RunbookRunRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: TaskResource GetTask(RunbookRunResource resource)
    parameters:
    - id: resource
      type: Octopus.Client.Model.RunbookRunResource
    return:
      type: Octopus.Client.Model.TaskResource
    content.vb: Function GetTask(resource As RunbookRunResource) As TaskResource
  overload: Octopus.Client.Repositories.IRunbookRunRepository.GetTask*
- uid: Octopus.Client.Repositories.IRunbookRunRepository.FindBy(System.String[],System.String[],System.String[],System.Int32,System.Nullable{System.Int32})
  commentId: M:Octopus.Client.Repositories.IRunbookRunRepository.FindBy(System.String[],System.String[],System.String[],System.Int32,System.Nullable{System.Int32})
  id: FindBy(System.String[],System.String[],System.String[],System.Int32,System.Nullable{System.Int32})
  parent: Octopus.Client.Repositories.IRunbookRunRepository
  langs:
  - csharp
  - vb
  name: FindBy(String[], String[], String[], Int32, Nullable<Int32>)
  nameWithType: IRunbookRunRepository.FindBy(String[], String[], String[], Int32, Nullable<Int32>)
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.FindBy(System.String[], System.String[], System.String[], System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRunRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FindBy
    path: ../source/Octopus.Client/Repositories/RunbookRunRepository.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  summary: "\n\n"
  example: []
  syntax:
    content: ResourceCollection<RunbookRunResource> FindBy(string[] projects, string[] runbooks, string[] environments, int skip = 0, int? take = default(int? ))
    parameters:
    - id: projects
      type: System.String[]
      description: ''
    - id: runbooks
      type: System.String[]
      description: ''
    - id: environments
      type: System.String[]
      description: ''
    - id: skip
      type: System.Int32
      description: Number of records to skip
    - id: take
      type: System.Nullable{System.Int32}
      description: Number of records to take (First supported in Server 3.14.159)
    return:
      type: Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}
      description: ''
    content.vb: Function FindBy(projects As String(), runbooks As String(), environments As String(), skip As Integer = 0, take As Integer? = Nothing) As ResourceCollection(Of RunbookRunResource)
  overload: Octopus.Client.Repositories.IRunbookRunRepository.FindBy*
  nameWithType.vb: IRunbookRunRepository.FindBy(String(), String(), String(), Int32, Nullable(Of Int32))
  fullName.vb: Octopus.Client.Repositories.IRunbookRunRepository.FindBy(System.String(), System.String(), System.String(), System.Int32, System.Nullable(Of System.Int32))
  name.vb: FindBy(String(), String(), String(), Int32, Nullable(Of Int32))
- uid: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  commentId: M:Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  id: Paginate(System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  parent: Octopus.Client.Repositories.IRunbookRunRepository
  langs:
  - csharp
  - vb
  name: Paginate(String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  nameWithType: IRunbookRunRepository.Paginate(String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[], System.String[], System.String[], System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRunRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/Repositories/RunbookRunRepository.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: void Paginate(string[] projects, string[] runbooks, string[] environments, Func<ResourceCollection<RunbookRunResource>, bool> getNextPage)
    parameters:
    - id: projects
      type: System.String[]
    - id: runbooks
      type: System.String[]
    - id: environments
      type: System.String[]
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean}
    content.vb: Sub Paginate(projects As String(), runbooks As String(), environments As String(), getNextPage As Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
  overload: Octopus.Client.Repositories.IRunbookRunRepository.Paginate*
  nameWithType.vb: IRunbookRunRepository.Paginate(String(), String(), String(), Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
  fullName.vb: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String(), System.String(), System.String(), System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource), System.Boolean))
  name.vb: Paginate(String(), String(), String(), Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
- uid: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  commentId: M:Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[],System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  id: Paginate(System.String[],System.String[],System.String[],System.String[],System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean})
  parent: Octopus.Client.Repositories.IRunbookRunRepository
  langs:
  - csharp
  - vb
  name: Paginate(String[], String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  nameWithType: IRunbookRunRepository.Paginate(String[], String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String[], System.String[], System.String[], System.String[], System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>, System.Boolean>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/RunbookRunRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Paginate
    path: ../source/Octopus.Client/Repositories/RunbookRunRepository.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: void Paginate(string[] projects, string[] runbooks, string[] environments, string[] tenants, Func<ResourceCollection<RunbookRunResource>, bool> getNextPage)
    parameters:
    - id: projects
      type: System.String[]
    - id: runbooks
      type: System.String[]
    - id: environments
      type: System.String[]
    - id: tenants
      type: System.String[]
    - id: getNextPage
      type: System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean}
    content.vb: Sub Paginate(projects As String(), runbooks As String(), environments As String(), tenants As String(), getNextPage As Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
  overload: Octopus.Client.Repositories.IRunbookRunRepository.Paginate*
  nameWithType.vb: IRunbookRunRepository.Paginate(String(), String(), String(), String(), Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
  fullName.vb: Octopus.Client.Repositories.IRunbookRunRepository.Paginate(System.String(), System.String(), System.String(), System.String(), System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource), System.Boolean))
  name.vb: Paginate(String(), String(), String(), String(), Func(Of ResourceCollection(Of RunbookRunResource), Boolean))
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<RunbookRunResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Get(System.String)
  nameWithType.vb: IGet(Of RunbookRunResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<RunbookRunResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of RunbookRunResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<RunbookRunResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Get(System.String[])
  nameWithType.vb: IGet(Of RunbookRunResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<RunbookRunResource>.Get
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of RunbookRunResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Refresh(Octopus.Client.Model.RunbookRunResource)
  commentId: M:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}.Refresh(Octopus.Client.Model.RunbookRunResource)
  parent: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(RunbookRunResource)
  nameWithType: IGet<RunbookRunResource>.Refresh(RunbookRunResource)
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Refresh(Octopus.Client.Model.RunbookRunResource)
  nameWithType.vb: IGet(Of RunbookRunResource).Refresh(RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Refresh(Octopus.Client.Model.RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<RunbookRunResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of RunbookRunResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}.Create(Octopus.Client.Model.RunbookRunResource,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}.Create(Octopus.Client.Model.RunbookRunResource,System.Object)
  parent: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  name: Create(RunbookRunResource, Object)
  nameWithType: ICreate<RunbookRunResource>.Create(RunbookRunResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookRunResource>.Create(Octopus.Client.Model.RunbookRunResource, System.Object)
  nameWithType.vb: ICreate(Of RunbookRunResource).Create(RunbookRunResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookRunResource).Create(Octopus.Client.Model.RunbookRunResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<RunbookRunResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookRunResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of RunbookRunResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookRunResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<RunbookRunResource>, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookRunResource>.Paginate(Func<ResourceCollection<RunbookRunResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookRunResource).Paginate(Func(Of ResourceCollection(Of RunbookRunResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of RunbookRunResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<RunbookRunResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of RunbookRunResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindOne(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindOne(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<RunbookRunResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookRunResource>.FindOne(Func<RunbookRunResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindOne(System.Func<Octopus.Client.Model.RunbookRunResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookRunResource).FindOne(Func(Of RunbookRunResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindOne(System.Func(Of Octopus.Client.Model.RunbookRunResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of RunbookRunResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<RunbookRunResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of RunbookRunResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindMany(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindMany(System.Func{Octopus.Client.Model.RunbookRunResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<RunbookRunResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookRunResource>.FindMany(Func<RunbookRunResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindMany(System.Func<Octopus.Client.Model.RunbookRunResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookRunResource).FindMany(Func(Of RunbookRunResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindMany(System.Func(Of Octopus.Client.Model.RunbookRunResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of RunbookRunResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<RunbookRunResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of RunbookRunResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<RunbookRunResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookRunResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<RunbookRunResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of RunbookRunResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}.Delete(Octopus.Client.Model.RunbookRunResource)
  commentId: M:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}.Delete(Octopus.Client.Model.RunbookRunResource)
  parent: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}
  definition: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(RunbookRunResource)
  nameWithType: IDelete<RunbookRunResource>.Delete(RunbookRunResource)
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookRunResource>.Delete(Octopus.Client.Model.RunbookRunResource)
  nameWithType.vb: IDelete(Of RunbookRunResource).Delete(RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookRunResource).Delete(Octopus.Client.Model.RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<RunbookRunResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookRunResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of RunbookRunResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookRunResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}
  commentId: T:Octopus.Client.Repositories.IGet{Octopus.Client.Model.RunbookRunResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IGet`1
  name: IGet<RunbookRunResource>
  nameWithType: IGet<RunbookRunResource>
  fullName: Octopus.Client.Repositories.IGet<Octopus.Client.Model.RunbookRunResource>
  nameWithType.vb: IGet(Of RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of Octopus.Client.Model.RunbookRunResource)
  name.vb: IGet(Of RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}
  commentId: T:Octopus.Client.Repositories.ICreate{Octopus.Client.Model.RunbookRunResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICreate`1
  name: ICreate<RunbookRunResource>
  nameWithType: ICreate<RunbookRunResource>
  fullName: Octopus.Client.Repositories.ICreate<Octopus.Client.Model.RunbookRunResource>
  nameWithType.vb: ICreate(Of RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of Octopus.Client.Model.RunbookRunResource)
  name.vb: ICreate(Of RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  commentId: T:Octopus.Client.Repositories.IPaginate{Octopus.Client.Model.RunbookRunResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<RunbookRunResource>
  nameWithType: IPaginate<RunbookRunResource>
  fullName: Octopus.Client.Repositories.IPaginate<Octopus.Client.Model.RunbookRunResource>
  nameWithType.vb: IPaginate(Of RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of Octopus.Client.Model.RunbookRunResource)
  name.vb: IPaginate(Of RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}
  commentId: T:Octopus.Client.Repositories.IDelete{Octopus.Client.Model.RunbookRunResource}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.IDelete`1
  name: IDelete<RunbookRunResource>
  nameWithType: IDelete<RunbookRunResource>
  fullName: Octopus.Client.Repositories.IDelete<Octopus.Client.Model.RunbookRunResource>
  nameWithType.vb: IDelete(Of RunbookRunResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of Octopus.Client.Model.RunbookRunResource)
  name.vb: IDelete(Of RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IGet`1
  commentId: T:Octopus.Client.Repositories.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICreate`1
  commentId: T:Octopus.Client.Repositories.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IPaginate`1
  commentId: T:Octopus.Client.Repositories.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IDelete`1
  commentId: T:Octopus.Client.Repositories.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IRunbookRunRepository.GetTask*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRunRepository.GetTask
  name: GetTask
  nameWithType: IRunbookRunRepository.GetTask
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.GetTask
- uid: Octopus.Client.Model.RunbookRunResource
  commentId: T:Octopus.Client.Model.RunbookRunResource
  parent: Octopus.Client.Model
  name: RunbookRunResource
  nameWithType: RunbookRunResource
  fullName: Octopus.Client.Model.RunbookRunResource
- uid: Octopus.Client.Model.TaskResource
  commentId: T:Octopus.Client.Model.TaskResource
  parent: Octopus.Client.Model
  name: TaskResource
  nameWithType: TaskResource
  fullName: Octopus.Client.Model.TaskResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Repositories.IRunbookRunRepository.FindBy*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRunRepository.FindBy
  name: FindBy
  nameWithType: IRunbookRunRepository.FindBy
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.FindBy
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}
  commentId: T:Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}
  parent: Octopus.Client.Model
  definition: Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<RunbookRunResource>
  nameWithType: ResourceCollection<RunbookRunResource>
  fullName: Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>
  nameWithType.vb: ResourceCollection(Of RunbookRunResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource)
  name.vb: ResourceCollection(Of RunbookRunResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.ResourceCollection`1
  commentId: T:Octopus.Client.Model.ResourceCollection`1
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: Octopus.Client.Model.ResourceCollection<TResource>
  nameWithType.vb: ResourceCollection(Of TResource)
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource)
  name.vb: ResourceCollection(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IRunbookRunRepository.Paginate*
  commentId: Overload:Octopus.Client.Repositories.IRunbookRunRepository.Paginate
  name: Paginate
  nameWithType: IRunbookRunRepository.Paginate
  fullName: Octopus.Client.Repositories.IRunbookRunRepository.Paginate
- uid: System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean}
  commentId: T:System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource},System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ResourceCollection<RunbookRunResource>, Boolean>
  nameWithType: Func<ResourceCollection<RunbookRunResource>, Boolean>
  fullName: System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>, System.Boolean>
  nameWithType.vb: Func(Of ResourceCollection(Of RunbookRunResource), Boolean)
  fullName.vb: System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource), System.Boolean)
  name.vb: Func(Of ResourceCollection(Of RunbookRunResource), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
