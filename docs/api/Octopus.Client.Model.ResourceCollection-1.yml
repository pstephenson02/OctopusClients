### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.ResourceCollection`1
  commentId: T:Octopus.Client.Model.ResourceCollection`1
  id: ResourceCollection`1
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.ResourceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},Octopus.Client.Extensibility.LinkCollection)
  - Octopus.Client.Model.ResourceCollection`1.IsStale
  - Octopus.Client.Model.ResourceCollection`1.Items
  - Octopus.Client.Model.ResourceCollection`1.ItemsPerPage
  - Octopus.Client.Model.ResourceCollection`1.ItemType
  - Octopus.Client.Model.ResourceCollection`1.TotalResults
  langs:
  - csharp
  - vb
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: Octopus.Client.Model.ResourceCollection<TResource>
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ResourceCollection
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class ResourceCollection<TResource> : Resource, IResource, IAuditedResource'
    typeParameters:
    - id: TResource
    content.vb: >-
      Public Class ResourceCollection(Of TResource)
          Inherits Resource
          Implements IResource, IAuditedResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  derivedClasses:
  - Octopus.Client.Model.TaskResourceCollection
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ResourceCollection(Of TResource)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource)
  name.vb: ResourceCollection(Of TResource)
- uid: Octopus.Client.Model.ResourceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},Octopus.Client.Extensibility.LinkCollection)
  commentId: M:Octopus.Client.Model.ResourceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},Octopus.Client.Extensibility.LinkCollection)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},Octopus.Client.Extensibility.LinkCollection)'
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: ResourceCollection(IEnumerable<TResource>, LinkCollection)
  nameWithType: ResourceCollection<TResource>.ResourceCollection(IEnumerable<TResource>, LinkCollection)
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ResourceCollection(System.Collections.Generic.IEnumerable<TResource>, Octopus.Client.Extensibility.LinkCollection)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ResourceCollection(IEnumerable<TResource> items, LinkCollection links)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TResource}}
    - id: links
      type: Octopus.Client.Extensibility.LinkCollection
    content.vb: Public Sub New(items As IEnumerable(Of TResource), links As LinkCollection)
  overload: Octopus.Client.Model.ResourceCollection`1.#ctor*
  nameWithType.vb: ResourceCollection(Of TResource).ResourceCollection(IEnumerable(Of TResource), LinkCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ResourceCollection(System.Collections.Generic.IEnumerable(Of TResource), Octopus.Client.Extensibility.LinkCollection)
  name.vb: ResourceCollection(IEnumerable(Of TResource), LinkCollection)
- uid: Octopus.Client.Model.ResourceCollection`1.ItemType
  commentId: P:Octopus.Client.Model.ResourceCollection`1.ItemType
  id: ItemType
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: ItemType
  nameWithType: ResourceCollection<TResource>.ItemType
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ItemType
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ItemType
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(Order = 1)]

      public string ItemType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=1)>

      Public ReadOnly Property ItemType As String
  overload: Octopus.Client.Model.ResourceCollection`1.ItemType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  nameWithType.vb: ResourceCollection(Of TResource).ItemType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ItemType
- uid: Octopus.Client.Model.ResourceCollection`1.IsStale
  commentId: P:Octopus.Client.Model.ResourceCollection`1.IsStale
  id: IsStale
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: IsStale
  nameWithType: ResourceCollection<TResource>.IsStale
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.IsStale
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsStale
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 25
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(Order = 3)]

      public bool IsStale { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(Order:=3)>

      Public Property IsStale As Boolean
  overload: Octopus.Client.Model.ResourceCollection`1.IsStale*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 3
  nameWithType.vb: ResourceCollection(Of TResource).IsStale
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).IsStale
- uid: Octopus.Client.Model.ResourceCollection`1.TotalResults
  commentId: P:Octopus.Client.Model.ResourceCollection`1.TotalResults
  id: TotalResults
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: TotalResults
  nameWithType: ResourceCollection<TResource>.TotalResults
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.TotalResults
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TotalResults
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 28
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(Order = 4)]

      public int TotalResults { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty(Order:=4)>

      Public Property TotalResults As Integer
  overload: Octopus.Client.Model.ResourceCollection`1.TotalResults*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 4
  nameWithType.vb: ResourceCollection(Of TResource).TotalResults
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).TotalResults
- uid: Octopus.Client.Model.ResourceCollection`1.ItemsPerPage
  commentId: P:Octopus.Client.Model.ResourceCollection`1.ItemsPerPage
  id: ItemsPerPage
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: ItemsPerPage
  nameWithType: ResourceCollection<TResource>.ItemsPerPage
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ItemsPerPage
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ItemsPerPage
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 31
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(Order = 5)]

      public int ItemsPerPage { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty(Order:=5)>

      Public Property ItemsPerPage As Integer
  overload: Octopus.Client.Model.ResourceCollection`1.ItemsPerPage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 5
  nameWithType.vb: ResourceCollection(Of TResource).ItemsPerPage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ItemsPerPage
- uid: Octopus.Client.Model.ResourceCollection`1.Items
  commentId: P:Octopus.Client.Model.ResourceCollection`1.Items
  id: Items
  parent: Octopus.Client.Model.ResourceCollection`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ResourceCollection<TResource>.Items
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.Items
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/ResourceCollection.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Items
    path: ../source/Octopus.Client/Model/ResourceCollection.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [JsonProperty(Order = 10)]

      public IList<TResource> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{{TResource}}
    content.vb: >-
      <JsonProperty(Order:=10)>

      Public Property Items As IList(Of TResource)
  overload: Octopus.Client.Model.ResourceCollection`1.Items*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 10
  nameWithType.vb: ResourceCollection(Of TResource).Items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).Items
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.ResourceCollection`1.#ctor*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.#ctor
  name: ResourceCollection
  nameWithType: ResourceCollection<TResource>.ResourceCollection
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ResourceCollection
  nameWithType.vb: ResourceCollection(Of TResource).ResourceCollection
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ResourceCollection
- uid: System.Collections.Generic.IEnumerable{{TResource}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TResource>
  nameWithType: IEnumerable<TResource>
  fullName: System.Collections.Generic.IEnumerable<TResource>
  nameWithType.vb: IEnumerable(Of TResource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResource)
  name.vb: IEnumerable(Of TResource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Extensibility.LinkCollection
  commentId: T:Octopus.Client.Extensibility.LinkCollection
  parent: Octopus.Client.Extensibility
  name: LinkCollection
  nameWithType: LinkCollection
  fullName: Octopus.Client.Extensibility.LinkCollection
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.ResourceCollection`1.ItemType*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.ItemType
  name: ItemType
  nameWithType: ResourceCollection<TResource>.ItemType
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ItemType
  nameWithType.vb: ResourceCollection(Of TResource).ItemType
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ItemType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.ResourceCollection`1.IsStale*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.IsStale
  name: IsStale
  nameWithType: ResourceCollection<TResource>.IsStale
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.IsStale
  nameWithType.vb: ResourceCollection(Of TResource).IsStale
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).IsStale
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.ResourceCollection`1.TotalResults*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.TotalResults
  name: TotalResults
  nameWithType: ResourceCollection<TResource>.TotalResults
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.TotalResults
  nameWithType.vb: ResourceCollection(Of TResource).TotalResults
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).TotalResults
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Octopus.Client.Model.ResourceCollection`1.ItemsPerPage*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.ItemsPerPage
  name: ItemsPerPage
  nameWithType: ResourceCollection<TResource>.ItemsPerPage
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.ItemsPerPage
  nameWithType.vb: ResourceCollection(Of TResource).ItemsPerPage
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).ItemsPerPage
- uid: Octopus.Client.Model.ResourceCollection`1.Items*
  commentId: Overload:Octopus.Client.Model.ResourceCollection`1.Items
  name: Items
  nameWithType: ResourceCollection<TResource>.Items
  fullName: Octopus.Client.Model.ResourceCollection<TResource>.Items
  nameWithType.vb: ResourceCollection(Of TResource).Items
  fullName.vb: Octopus.Client.Model.ResourceCollection(Of TResource).Items
- uid: System.Collections.Generic.IList{{TResource}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TResource>
  nameWithType: IList<TResource>
  fullName: System.Collections.Generic.IList<TResource>
  nameWithType.vb: IList(Of TResource)
  fullName.vb: System.Collections.Generic.IList(Of TResource)
  name.vb: IList(Of TResource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
