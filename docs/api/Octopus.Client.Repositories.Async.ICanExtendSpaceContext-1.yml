### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1
  commentId: T:Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1
  id: ICanExtendSpaceContext`1
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  langs:
  - csharp
  - vb
  name: ICanExtendSpaceContext<T>
  nameWithType: ICanExtendSpaceContext<T>
  fullName: Octopus.Client.Repositories.Async.ICanExtendSpaceContext<T>
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ICanExtendSpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ICanExtendSpaceContext
    path: ../source/Octopus.Client/Repositories/Async/ICanExtendSpaceContext.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface ICanExtendSpaceContext<out T>
    typeParameters:
    - id: T
    content.vb: Public Interface ICanExtendSpaceContext(Of Out T)
  nameWithType.vb: ICanExtendSpaceContext(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Octopus.Client.Repositories.Async.ICanExtendSpaceContext(Of T)
  name.vb: ICanExtendSpaceContext(Of T)
- uid: Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  commentId: M:Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  id: UsingContext(Octopus.Client.SpaceContext)
  parent: Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1
  langs:
  - csharp
  - vb
  name: UsingContext(SpaceContext)
  nameWithType: ICanExtendSpaceContext<T>.UsingContext(SpaceContext)
  fullName: Octopus.Client.Repositories.Async.ICanExtendSpaceContext<T>.UsingContext(Octopus.Client.SpaceContext)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/ICanExtendSpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UsingContext
    path: ../source/Octopus.Client/Repositories/Async/ICanExtendSpaceContext.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: T UsingContext(SpaceContext spaceContext)
    parameters:
    - id: spaceContext
      type: Octopus.Client.SpaceContext
    return:
      type: '{T}'
    content.vb: Function UsingContext(spaceContext As SpaceContext) As T
  overload: Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext*
  nameWithType.vb: ICanExtendSpaceContext(Of T).UsingContext(SpaceContext)
  fullName.vb: Octopus.Client.Repositories.Async.ICanExtendSpaceContext(Of T).UsingContext(Octopus.Client.SpaceContext)
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext*
  commentId: Overload:Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1.UsingContext
  name: UsingContext
  nameWithType: ICanExtendSpaceContext<T>.UsingContext
  fullName: Octopus.Client.Repositories.Async.ICanExtendSpaceContext<T>.UsingContext
  nameWithType.vb: ICanExtendSpaceContext(Of T).UsingContext
  fullName.vb: Octopus.Client.Repositories.Async.ICanExtendSpaceContext(Of T).UsingContext
- uid: Octopus.Client.SpaceContext
  commentId: T:Octopus.Client.SpaceContext
  parent: Octopus.Client
  name: SpaceContext
  nameWithType: SpaceContext
  fullName: Octopus.Client.SpaceContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: T
  name: T
  nameWithType: T
  fullName: T
