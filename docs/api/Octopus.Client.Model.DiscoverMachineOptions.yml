### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.DiscoverMachineOptions
  commentId: T:Octopus.Client.Model.DiscoverMachineOptions
  id: DiscoverMachineOptions
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.DiscoverMachineOptions.#ctor(System.String)
  - Octopus.Client.Model.DiscoverMachineOptions.Host
  - Octopus.Client.Model.DiscoverMachineOptions.Port
  - Octopus.Client.Model.DiscoverMachineOptions.Proxy
  - Octopus.Client.Model.DiscoverMachineOptions.Type
  langs:
  - csharp
  - vb
  name: DiscoverMachineOptions
  nameWithType: DiscoverMachineOptions
  fullName: Octopus.Client.Model.DiscoverMachineOptions
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DiscoverMachineOptions
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 2
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public class DiscoverMachineOptions
    content.vb: Public Class DiscoverMachineOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.DiscoverMachineOptions.#ctor(System.String)
  commentId: M:Octopus.Client.Model.DiscoverMachineOptions.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Octopus.Client.Model.DiscoverMachineOptions
  langs:
  - csharp
  - vb
  name: DiscoverMachineOptions(String)
  nameWithType: DiscoverMachineOptions.DiscoverMachineOptions(String)
  fullName: Octopus.Client.Model.DiscoverMachineOptions.DiscoverMachineOptions(System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public DiscoverMachineOptions(string host)
    parameters:
    - id: host
      type: System.String
    content.vb: Public Sub New(host As String)
  overload: Octopus.Client.Model.DiscoverMachineOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.DiscoverMachineOptions.Host
  commentId: P:Octopus.Client.Model.DiscoverMachineOptions.Host
  id: Host
  parent: Octopus.Client.Model.DiscoverMachineOptions
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: DiscoverMachineOptions.Host
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Host
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Host
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Octopus.Client.Model.DiscoverMachineOptions.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.DiscoverMachineOptions.Port
  commentId: P:Octopus.Client.Model.DiscoverMachineOptions.Port
  id: Port
  parent: Octopus.Client.Model.DiscoverMachineOptions
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: DiscoverMachineOptions.Port
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Port
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Port
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: Octopus.Client.Model.DiscoverMachineOptions.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.DiscoverMachineOptions.Type
  commentId: P:Octopus.Client.Model.DiscoverMachineOptions.Type
  id: Type
  parent: Octopus.Client.Model.DiscoverMachineOptions
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: DiscoverMachineOptions.Type
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Type
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Type
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public DiscoverableEndpointType? Type { get; set; }
    parameters: []
    return:
      type: System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
    content.vb: Public Property Type As DiscoverableEndpointType?
  overload: Octopus.Client.Model.DiscoverMachineOptions.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.DiscoverMachineOptions.Proxy
  commentId: P:Octopus.Client.Model.DiscoverMachineOptions.Proxy
  id: Proxy
  parent: Octopus.Client.Model.DiscoverMachineOptions
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: DiscoverMachineOptions.Proxy
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Proxy
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/DiscoverMachineOptions.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Proxy
    path: ../source/Octopus.Client/Model/DiscoverMachineOptions.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public ProxyResource Proxy { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.ProxyResource
    content.vb: Public Property Proxy As ProxyResource
  overload: Octopus.Client.Model.DiscoverMachineOptions.Proxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.DiscoverMachineOptions.#ctor*
  commentId: Overload:Octopus.Client.Model.DiscoverMachineOptions.#ctor
  name: DiscoverMachineOptions
  nameWithType: DiscoverMachineOptions.DiscoverMachineOptions
  fullName: Octopus.Client.Model.DiscoverMachineOptions.DiscoverMachineOptions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.DiscoverMachineOptions.Host*
  commentId: Overload:Octopus.Client.Model.DiscoverMachineOptions.Host
  name: Host
  nameWithType: DiscoverMachineOptions.Host
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Host
- uid: Octopus.Client.Model.DiscoverMachineOptions.Port*
  commentId: Overload:Octopus.Client.Model.DiscoverMachineOptions.Port
  name: Port
  nameWithType: DiscoverMachineOptions.Port
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Octopus.Client.Model.DiscoverMachineOptions.Type*
  commentId: Overload:Octopus.Client.Model.DiscoverMachineOptions.Type
  name: Type
  nameWithType: DiscoverMachineOptions.Type
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Type
- uid: System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
  commentId: T:System.Nullable{Octopus.Client.Model.DiscoverableEndpointType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DiscoverableEndpointType>
  nameWithType: Nullable<DiscoverableEndpointType>
  fullName: System.Nullable<Octopus.Client.Model.DiscoverableEndpointType>
  nameWithType.vb: Nullable(Of DiscoverableEndpointType)
  fullName.vb: System.Nullable(Of Octopus.Client.Model.DiscoverableEndpointType)
  name.vb: Nullable(Of DiscoverableEndpointType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.DiscoverableEndpointType
    name: DiscoverableEndpointType
    nameWithType: DiscoverableEndpointType
    fullName: Octopus.Client.Model.DiscoverableEndpointType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.DiscoverableEndpointType
    name: DiscoverableEndpointType
    nameWithType: DiscoverableEndpointType
    fullName: Octopus.Client.Model.DiscoverableEndpointType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.DiscoverMachineOptions.Proxy*
  commentId: Overload:Octopus.Client.Model.DiscoverMachineOptions.Proxy
  name: Proxy
  nameWithType: DiscoverMachineOptions.Proxy
  fullName: Octopus.Client.Model.DiscoverMachineOptions.Proxy
- uid: Octopus.Client.Model.ProxyResource
  commentId: T:Octopus.Client.Model.ProxyResource
  parent: Octopus.Client.Model
  name: ProxyResource
  nameWithType: ProxyResource
  fullName: Octopus.Client.Model.ProxyResource
