### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository
  commentId: T:Octopus.Client.Repositories.Async.IVariableSetRepository
  id: IVariableSetRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames(System.String,System.String[])
  - Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IVariableSetRepository
  nameWithType: IVariableSetRepository
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IVariableSetRepository
    path: ../source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: 'public interface IVariableSetRepository : IGet<VariableSetResource>, IModify<VariableSetResource>, IGetAll<VariableSetResource>'
    content.vb: >-
      Public Interface IVariableSetRepository
          Inherits IGet(Of VariableSetResource), IModify(Of VariableSetResource), IGetAll(Of VariableSetResource)
  inheritedMembers:
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String)
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String[])
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Refresh(Octopus.Client.Model.VariableSetResource)
  - Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}.Modify(Octopus.Client.Model.VariableSetResource)
  - Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}.GetAll
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames(System.String,System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames(System.String,System.String[])
  id: GetVariableNames(System.String,System.String[])
  parent: Octopus.Client.Repositories.Async.IVariableSetRepository
  langs:
  - csharp
  - vb
  name: GetVariableNames(String, String[])
  nameWithType: IVariableSetRepository.GetVariableNames(String, String[])
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames(System.String, System.String[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetVariableNames
    path: ../source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<string[]> GetVariableNames(string projects, string[] environments)
    parameters:
    - id: projects
      type: System.String
    - id: environments
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.String[]}
    content.vb: Function GetVariableNames(projects As String, environments As String()) As Task(Of String())
  overload: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames*
  nameWithType.vb: IVariableSetRepository.GetVariableNames(String, String())
  fullName.vb: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames(System.String, System.String())
  name.vb: GetVariableNames(String, String())
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: GetVariablePreview(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: Octopus.Client.Repositories.Async.IVariableSetRepository
  langs:
  - csharp
  - vb
  name: GetVariablePreview(String, String, String, String, String, String, String, String)
  nameWithType: IVariableSetRepository.GetVariablePreview(String, String, String, String, String, String, String, String)
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview(System.String, System.String, System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetVariablePreview
    path: ../source/Octopus.Client/Repositories/Async/VariableSetRepository.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role)
    parameters:
    - id: project
      type: System.String
    - id: channel
      type: System.String
    - id: tenant
      type: System.String
    - id: runbook
      type: System.String
    - id: action
      type: System.String
    - id: environment
      type: System.String
    - id: machine
      type: System.String
    - id: role
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.VariableSetResource}
    content.vb: Function GetVariablePreview(project As String, channel As String, tenant As String, runbook As String, action As String, environment As String, machine As String, role As String) As Task(Of VariableSetResource)
  overload: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<VariableSetResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Get(System.String)
  nameWithType.vb: IGet(Of VariableSetResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<VariableSetResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of VariableSetResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<VariableSetResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Get(System.String[])
  nameWithType.vb: IGet(Of VariableSetResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<VariableSetResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of VariableSetResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Refresh(Octopus.Client.Model.VariableSetResource)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}.Refresh(Octopus.Client.Model.VariableSetResource)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(VariableSetResource)
  nameWithType: IGet<VariableSetResource>.Refresh(VariableSetResource)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Refresh(Octopus.Client.Model.VariableSetResource)
  nameWithType.vb: IGet(Of VariableSetResource).Refresh(VariableSetResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Refresh(Octopus.Client.Model.VariableSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<VariableSetResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of VariableSetResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}.Modify(Octopus.Client.Model.VariableSetResource)
  commentId: M:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}.Modify(Octopus.Client.Model.VariableSetResource)
  parent: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}
  definition: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(VariableSetResource)
  nameWithType: IModify<VariableSetResource>.Modify(VariableSetResource)
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.VariableSetResource>.Modify(Octopus.Client.Model.VariableSetResource)
  nameWithType.vb: IModify(Of VariableSetResource).Modify(VariableSetResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.VariableSetResource).Modify(Octopus.Client.Model.VariableSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<VariableSetResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.VariableSetResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of VariableSetResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.VariableSetResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}.GetAll
  commentId: M:Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}.GetAll
  parent: Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}
  definition: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<VariableSetResource>.GetAll()
  fullName: Octopus.Client.Repositories.Async.IGetAll<Octopus.Client.Model.VariableSetResource>.GetAll()
  nameWithType.vb: IGetAll(Of VariableSetResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.Async.IGetAll(Of Octopus.Client.Model.VariableSetResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<VariableSetResource>.GetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll<Octopus.Client.Model.VariableSetResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of VariableSetResource).GetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll(Of Octopus.Client.Model.VariableSetResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}
  commentId: T:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.VariableSetResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IGet`1
  name: IGet<VariableSetResource>
  nameWithType: IGet<VariableSetResource>
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.VariableSetResource>
  nameWithType.vb: IGet(Of VariableSetResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.VariableSetResource)
  name.vb: IGet(Of VariableSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}
  commentId: T:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.VariableSetResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IModify`1
  name: IModify<VariableSetResource>
  nameWithType: IModify<VariableSetResource>
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.VariableSetResource>
  nameWithType.vb: IModify(Of VariableSetResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.VariableSetResource)
  name.vb: IModify(Of VariableSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
  commentId: M:Octopus.Client.Repositories.Async.IGetAll`1.GetAll
  name: GetAll()
  nameWithType: IGetAll<TResource>.GetAll()
  fullName: Octopus.Client.Repositories.Async.IGetAll<TResource>.GetAll()
  nameWithType.vb: IGetAll(Of TResource).GetAll()
  fullName.vb: Octopus.Client.Repositories.Async.IGetAll(Of TResource).GetAll()
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll<TResource>.GetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll<TResource>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1.GetAll
    name: GetAll
    nameWithType: IGetAll(Of TResource).GetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll(Of TResource).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}
  commentId: T:Octopus.Client.Repositories.Async.IGetAll{Octopus.Client.Model.VariableSetResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IGetAll`1
  name: IGetAll<VariableSetResource>
  nameWithType: IGetAll<VariableSetResource>
  fullName: Octopus.Client.Repositories.Async.IGetAll<Octopus.Client.Model.VariableSetResource>
  nameWithType.vb: IGetAll(Of VariableSetResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGetAll(Of Octopus.Client.Model.VariableSetResource)
  name.vb: IGetAll(Of VariableSetResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1
  commentId: T:Octopus.Client.Repositories.Async.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1
  commentId: T:Octopus.Client.Repositories.Async.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGetAll`1
  commentId: T:Octopus.Client.Repositories.Async.IGetAll`1
  name: IGetAll<TResource>
  nameWithType: IGetAll<TResource>
  fullName: Octopus.Client.Repositories.Async.IGetAll<TResource>
  nameWithType.vb: IGetAll(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGetAll(Of TResource)
  name.vb: IGetAll(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGetAll`1
    name: IGetAll
    nameWithType: IGetAll
    fullName: Octopus.Client.Repositories.Async.IGetAll
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames*
  commentId: Overload:Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames
  name: GetVariableNames
  nameWithType: IVariableSetRepository.GetVariableNames
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariableNames
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String[]>
  nameWithType: Task<String[]>
  fullName: System.Threading.Tasks.Task<System.String[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of System.String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview*
  commentId: Overload:Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview
  name: GetVariablePreview
  nameWithType: IVariableSetRepository.GetVariablePreview
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository.GetVariablePreview
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.VariableSetResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.VariableSetResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VariableSetResource>
  nameWithType: Task<VariableSetResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.VariableSetResource>
  nameWithType.vb: Task(Of VariableSetResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.VariableSetResource)
  name.vb: Task(Of VariableSetResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.VariableSetResource
    name: VariableSetResource
    nameWithType: VariableSetResource
    fullName: Octopus.Client.Model.VariableSetResource
  - name: )
    nameWithType: )
    fullName: )
