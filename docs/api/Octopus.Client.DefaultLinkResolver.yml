### YamlMime:ManagedReference
items:
- uid: Octopus.Client.DefaultLinkResolver
  commentId: T:Octopus.Client.DefaultLinkResolver
  id: DefaultLinkResolver
  parent: Octopus.Client
  children:
  - Octopus.Client.DefaultLinkResolver.#ctor(System.Uri,System.String)
  - Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
  - Octopus.Client.DefaultLinkResolver.Resolve(System.String)
  - Octopus.Client.DefaultLinkResolver.ToString
  langs:
  - csharp
  - vb
  name: DefaultLinkResolver
  nameWithType: DefaultLinkResolver
  fullName: Octopus.Client.DefaultLinkResolver
  type: Class
  source:
    remote:
      path: source/Octopus.Client/DefaultLinkResolver.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DefaultLinkResolver
    path: ../source/Octopus.Client/DefaultLinkResolver.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nIn the same way web browsers can follow links like &quot;/api/foo&quot; by knowing the URI of the current page, this class\nallows application\nlinks to be resolved into fully-qualified URI&apos;s. This implementation also supports virtual directories. It assumes\nthat the\nAPI endpoint starts with <code>/api</code>.\n"
  example: []
  syntax:
    content: 'public class DefaultLinkResolver : ILinkResolver'
    content.vb: >-
      Public Class DefaultLinkResolver
          Implements ILinkResolver
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.ILinkResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.DefaultLinkResolver.#ctor(System.Uri,System.String)
  commentId: M:Octopus.Client.DefaultLinkResolver.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: Octopus.Client.DefaultLinkResolver
  langs:
  - csharp
  - vb
  name: DefaultLinkResolver(Uri, String)
  nameWithType: DefaultLinkResolver.DefaultLinkResolver(Uri, String)
  fullName: Octopus.Client.DefaultLinkResolver.DefaultLinkResolver(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/DefaultLinkResolver.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/DefaultLinkResolver.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nInitializes a new instance of the <xref href=\"Octopus.Client.DefaultLinkResolver\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DefaultLinkResolver(Uri root, string allUrisStartWith = "/api")
    parameters:
    - id: root
      type: System.Uri
      description: The root URI of the server.
    - id: allUrisStartWith
      type: System.String
      description: "\nA segment that users might or might not include when entering the root URI. If the\nsegment exists, it will be ignored.\n"
    content.vb: Public Sub New(root As Uri, allUrisStartWith As String = "/api")
  overload: Octopus.Client.DefaultLinkResolver.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
  commentId: P:Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
  id: IsUsingSecureConnection
  parent: Octopus.Client.DefaultLinkResolver
  langs:
  - csharp
  - vb
  name: IsUsingSecureConnection
  nameWithType: DefaultLinkResolver.IsUsingSecureConnection
  fullName: Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
  type: Property
  source:
    remote:
      path: source/Octopus.Client/DefaultLinkResolver.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsUsingSecureConnection
    path: ../source/Octopus.Client/DefaultLinkResolver.cs
    startLine: 44
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nIndicates whether a secure (SSL) connection is being used to communicate with the server.\n"
  example: []
  syntax:
    content: public bool IsUsingSecureConnection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsingSecureConnection As Boolean
  overload: Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection*
  implements:
  - Octopus.Client.ILinkResolver.IsUsingSecureConnection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.DefaultLinkResolver.Resolve(System.String)
  commentId: M:Octopus.Client.DefaultLinkResolver.Resolve(System.String)
  id: Resolve(System.String)
  parent: Octopus.Client.DefaultLinkResolver
  langs:
  - csharp
  - vb
  name: Resolve(String)
  nameWithType: DefaultLinkResolver.Resolve(String)
  fullName: Octopus.Client.DefaultLinkResolver.Resolve(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/DefaultLinkResolver.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Resolve
    path: ../source/Octopus.Client/DefaultLinkResolver.cs
    startLine: 53
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nResolves the specified link into a fully qualified URI.\n"
  example: []
  syntax:
    content: public Uri Resolve(string link)
    parameters:
    - id: link
      type: System.String
      description: The application relative link (should begin with a <code>/</code>).
    return:
      type: System.Uri
      description: "\nThe fully resolved URI.\n"
    content.vb: Public Function Resolve(link As String) As Uri
  overload: Octopus.Client.DefaultLinkResolver.Resolve*
  implements:
  - Octopus.Client.ILinkResolver.Resolve(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.DefaultLinkResolver.ToString
  commentId: M:Octopus.Client.DefaultLinkResolver.ToString
  id: ToString
  parent: Octopus.Client.DefaultLinkResolver
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DefaultLinkResolver.ToString()
  fullName: Octopus.Client.DefaultLinkResolver.ToString()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/DefaultLinkResolver.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ToString
    path: ../source/Octopus.Client/DefaultLinkResolver.cs
    startLine: 70
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the root URI that URI&apos;s are resolved from.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Octopus.Client.DefaultLinkResolver.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.ILinkResolver
  commentId: T:Octopus.Client.ILinkResolver
  parent: Octopus.Client
  name: ILinkResolver
  nameWithType: ILinkResolver
  fullName: Octopus.Client.ILinkResolver
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.DefaultLinkResolver
  commentId: T:Octopus.Client.DefaultLinkResolver
  name: DefaultLinkResolver
  nameWithType: DefaultLinkResolver
  fullName: Octopus.Client.DefaultLinkResolver
- uid: Octopus.Client.DefaultLinkResolver.#ctor*
  commentId: Overload:Octopus.Client.DefaultLinkResolver.#ctor
  name: DefaultLinkResolver
  nameWithType: DefaultLinkResolver.DefaultLinkResolver
  fullName: Octopus.Client.DefaultLinkResolver.DefaultLinkResolver
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection*
  commentId: Overload:Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
  name: IsUsingSecureConnection
  nameWithType: DefaultLinkResolver.IsUsingSecureConnection
  fullName: Octopus.Client.DefaultLinkResolver.IsUsingSecureConnection
- uid: Octopus.Client.ILinkResolver.IsUsingSecureConnection
  commentId: P:Octopus.Client.ILinkResolver.IsUsingSecureConnection
  parent: Octopus.Client.ILinkResolver
  name: IsUsingSecureConnection
  nameWithType: ILinkResolver.IsUsingSecureConnection
  fullName: Octopus.Client.ILinkResolver.IsUsingSecureConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.DefaultLinkResolver.Resolve*
  commentId: Overload:Octopus.Client.DefaultLinkResolver.Resolve
  name: Resolve
  nameWithType: DefaultLinkResolver.Resolve
  fullName: Octopus.Client.DefaultLinkResolver.Resolve
- uid: Octopus.Client.ILinkResolver.Resolve(System.String)
  commentId: M:Octopus.Client.ILinkResolver.Resolve(System.String)
  parent: Octopus.Client.ILinkResolver
  isExternal: true
  name: Resolve(String)
  nameWithType: ILinkResolver.Resolve(String)
  fullName: Octopus.Client.ILinkResolver.Resolve(System.String)
  spec.csharp:
  - uid: Octopus.Client.ILinkResolver.Resolve(System.String)
    name: Resolve
    nameWithType: ILinkResolver.Resolve
    fullName: Octopus.Client.ILinkResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.ILinkResolver.Resolve(System.String)
    name: Resolve
    nameWithType: ILinkResolver.Resolve
    fullName: Octopus.Client.ILinkResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.DefaultLinkResolver.ToString*
  commentId: Overload:Octopus.Client.DefaultLinkResolver.ToString
  name: ToString
  nameWithType: DefaultLinkResolver.ToString
  fullName: Octopus.Client.DefaultLinkResolver.ToString
