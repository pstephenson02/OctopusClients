### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
  commentId: T:Octopus.Client.Editors.Async.ProjectTriggerEditor
  id: ProjectTriggerEditor
  parent: Octopus.Client.Editors.Async
  children:
  - Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
  - Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,Octopus.Client.Model.Triggers.TriggerFilterResource,Octopus.Client.Model.Triggers.TriggerActionResource)
  - Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  - Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
  - Octopus.Client.Editors.Async.ProjectTriggerEditor.Save
  langs:
  - csharp
  - vb
  name: ProjectTriggerEditor
  nameWithType: ProjectTriggerEditor
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectTriggerEditor
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: 'public class ProjectTriggerEditor : IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>, IResourceBuilder'
    content.vb: >-
      Public Class ProjectTriggerEditor
          Implements IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor), IResourceBuilder
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  - Octopus.Client.Editors.Async.IResourceBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
  commentId: M:Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
  id: '#ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)'
  parent: Octopus.Client.Editors.Async.ProjectTriggerEditor
  langs:
  - csharp
  - vb
  name: ProjectTriggerEditor(IProjectTriggerRepository)
  nameWithType: ProjectTriggerEditor.ProjectTriggerEditor(IProjectTriggerRepository)
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.ProjectTriggerEditor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ProjectTriggerEditor(IProjectTriggerRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.Repositories.Async.IProjectTriggerRepository
    content.vb: Public Sub New(repository As IProjectTriggerRepository)
  overload: Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
  commentId: P:Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
  id: Instance
  parent: Octopus.Client.Editors.Async.ProjectTriggerEditor
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ProjectTriggerEditor.Instance
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Instance
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ProjectTriggerResource Instance { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.ProjectTriggerResource
    content.vb: Public ReadOnly Property Instance As ProjectTriggerResource
  overload: Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Instance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,Octopus.Client.Model.Triggers.TriggerFilterResource,Octopus.Client.Model.Triggers.TriggerActionResource)
  commentId: M:Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,Octopus.Client.Model.Triggers.TriggerFilterResource,Octopus.Client.Model.Triggers.TriggerActionResource)
  id: CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,Octopus.Client.Model.Triggers.TriggerFilterResource,Octopus.Client.Model.Triggers.TriggerActionResource)
  parent: Octopus.Client.Editors.Async.ProjectTriggerEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(ProjectResource, String, TriggerFilterResource, TriggerActionResource)
  nameWithType: ProjectTriggerEditor.CreateOrModify(ProjectResource, String, TriggerFilterResource, TriggerActionResource)
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify(Octopus.Client.Model.ProjectResource, System.String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: name
      type: System.String
    - id: filter
      type: Octopus.Client.Model.Triggers.TriggerFilterResource
    - id: action
      type: Octopus.Client.Model.Triggers.TriggerActionResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ProjectTriggerEditor}
    content.vb: Public Function CreateOrModify(project As ProjectResource, name As String, filter As TriggerFilterResource, action As TriggerActionResource) As Task(Of ProjectTriggerEditor)
  overload: Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  commentId: M:Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  id: Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  parent: Octopus.Client.Editors.Async.ProjectTriggerEditor
  langs:
  - csharp
  - vb
  name: Customize(Action<ProjectTriggerResource>)
  nameWithType: ProjectTriggerEditor.Customize(Action<ProjectTriggerResource>)
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize(System.Action<Octopus.Client.Model.ProjectTriggerResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Customize
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ProjectTriggerEditor Customize(Action<ProjectTriggerResource> customize)
    parameters:
    - id: customize
      type: System.Action{Octopus.Client.Model.ProjectTriggerResource}
    return:
      type: Octopus.Client.Editors.Async.ProjectTriggerEditor
    content.vb: Public Function Customize(customize As Action(Of ProjectTriggerResource)) As ProjectTriggerEditor
  overload: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  nameWithType.vb: ProjectTriggerEditor.Customize(Action(Of ProjectTriggerResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize(System.Action(Of Octopus.Client.Model.ProjectTriggerResource))
  name.vb: Customize(Action(Of ProjectTriggerResource))
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Save
  commentId: M:Octopus.Client.Editors.Async.ProjectTriggerEditor.Save
  id: Save
  parent: Octopus.Client.Editors.Async.ProjectTriggerEditor
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: ProjectTriggerEditor.Save()
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Save()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Save
    path: ../source/Octopus.Client/Editors/Async/ProjectTriggerEditor.cs
    startLine: 49
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<ProjectTriggerEditor> Save()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ProjectTriggerEditor}
    content.vb: Public Function Save As Task(Of ProjectTriggerEditor)
  overload: Octopus.Client.Editors.Async.ProjectTriggerEditor.Save*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Editors.Async
  commentId: N:Octopus.Client.Editors.Async
  name: Octopus.Client.Editors.Async
  nameWithType: Octopus.Client.Editors.Async
  fullName: Octopus.Client.Editors.Async
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  parent: Octopus.Client.Editors.Async
  definition: Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
  nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>
  nameWithType.vb: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor)
  name.vb: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
    name: ProjectTriggerEditor
    nameWithType: ProjectTriggerEditor
    fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
    name: ProjectTriggerEditor
    nameWithType: ProjectTriggerEditor
    fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceBuilder
  commentId: T:Octopus.Client.Editors.Async.IResourceBuilder
  parent: Octopus.Client.Editors.Async
  name: IResourceBuilder
  nameWithType: IResourceBuilder
  fullName: Octopus.Client.Editors.Async.IResourceBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors.Async.IResourceEditor`2
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<TResource, TResourceBuilder>
  nameWithType: IResourceEditor<TResource, TResourceBuilder>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder)
  name.vb: IResourceEditor(Of TResource, TResourceBuilder)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor*
  commentId: Overload:Octopus.Client.Editors.Async.ProjectTriggerEditor.#ctor
  name: ProjectTriggerEditor
  nameWithType: ProjectTriggerEditor.ProjectTriggerEditor
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.ProjectTriggerEditor
- uid: Octopus.Client.Repositories.Async.IProjectTriggerRepository
  commentId: T:Octopus.Client.Repositories.Async.IProjectTriggerRepository
  parent: Octopus.Client.Repositories.Async
  name: IProjectTriggerRepository
  nameWithType: IProjectTriggerRepository
  fullName: Octopus.Client.Repositories.Async.IProjectTriggerRepository
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance*
  commentId: Overload:Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
  name: Instance
  nameWithType: ProjectTriggerEditor.Instance
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Instance
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Instance
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>.Instance
  nameWithType.vb: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor).Instance
- uid: Octopus.Client.Model.ProjectTriggerResource
  commentId: T:Octopus.Client.Model.ProjectTriggerResource
  parent: Octopus.Client.Model
  name: ProjectTriggerResource
  nameWithType: ProjectTriggerResource
  fullName: Octopus.Client.Model.ProjectTriggerResource
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Instance
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Instance
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify*
  commentId: Overload:Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify
  name: CreateOrModify
  nameWithType: ProjectTriggerEditor.CreateOrModify
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.CreateOrModify
- uid: Octopus.Client.Model.ProjectResource
  commentId: T:Octopus.Client.Model.ProjectResource
  parent: Octopus.Client.Model
  name: ProjectResource
  nameWithType: ProjectResource
  fullName: Octopus.Client.Model.ProjectResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.Triggers.TriggerFilterResource
  commentId: T:Octopus.Client.Model.Triggers.TriggerFilterResource
  parent: Octopus.Client.Model.Triggers
  name: TriggerFilterResource
  nameWithType: TriggerFilterResource
  fullName: Octopus.Client.Model.Triggers.TriggerFilterResource
- uid: Octopus.Client.Model.Triggers.TriggerActionResource
  commentId: T:Octopus.Client.Model.Triggers.TriggerActionResource
  parent: Octopus.Client.Model.Triggers
  name: TriggerActionResource
  nameWithType: TriggerActionResource
  fullName: Octopus.Client.Model.Triggers.TriggerActionResource
- uid: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ProjectTriggerEditor}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ProjectTriggerEditor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ProjectTriggerEditor>
  nameWithType: Task<ProjectTriggerEditor>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Editors.Async.ProjectTriggerEditor>
  nameWithType.vb: Task(Of ProjectTriggerEditor)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Editors.Async.ProjectTriggerEditor)
  name.vb: Task(Of ProjectTriggerEditor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
    name: ProjectTriggerEditor
    nameWithType: ProjectTriggerEditor
    fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
    name: ProjectTriggerEditor
    nameWithType: ProjectTriggerEditor
    fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Triggers
  commentId: N:Octopus.Client.Model.Triggers
  name: Octopus.Client.Model.Triggers
  nameWithType: Octopus.Client.Model.Triggers
  fullName: Octopus.Client.Model.Triggers
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize*
  commentId: Overload:Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize
  name: Customize
  nameWithType: ProjectTriggerEditor.Customize
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Customize
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Customize(System.Action{Octopus.Client.Model.ProjectTriggerResource})
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  name: Customize(Action<ProjectTriggerResource>)
  nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>.Customize(Action<ProjectTriggerResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>.Customize(System.Action<Octopus.Client.Model.ProjectTriggerResource>)
  nameWithType.vb: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor).Customize(Action(Of ProjectTriggerResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor).Customize(System.Action(Of Octopus.Client.Model.ProjectTriggerResource))
  name.vb: Customize(Action(Of ProjectTriggerResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Octopus.Client.Model.ProjectTriggerResource}
  commentId: T:System.Action{Octopus.Client.Model.ProjectTriggerResource}
  parent: System
  definition: System.Action`1
  name: Action<ProjectTriggerResource>
  nameWithType: Action<ProjectTriggerResource>
  fullName: System.Action<Octopus.Client.Model.ProjectTriggerResource>
  nameWithType.vb: Action(Of ProjectTriggerResource)
  fullName.vb: System.Action(Of Octopus.Client.Model.ProjectTriggerResource)
  name.vb: Action(Of ProjectTriggerResource)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ProjectTriggerResource
    name: ProjectTriggerResource
    nameWithType: ProjectTriggerResource
    fullName: Octopus.Client.Model.ProjectTriggerResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor
  commentId: T:Octopus.Client.Editors.Async.ProjectTriggerEditor
  parent: Octopus.Client.Editors.Async
  name: ProjectTriggerEditor
  nameWithType: ProjectTriggerEditor
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  isExternal: true
  name: Customize(Action<TResource>)
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize(Action<TResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize(System.Action<TResource>)
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Customize(Action(Of TResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize(System.Action(Of TResource))
  name.vb: Customize(Action(Of TResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.ProjectTriggerEditor.Save*
  commentId: Overload:Octopus.Client.Editors.Async.ProjectTriggerEditor.Save
  name: Save
  nameWithType: ProjectTriggerEditor.Save
  fullName: Octopus.Client.Editors.Async.ProjectTriggerEditor.Save
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}.Save
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ProjectTriggerResource,Octopus.Client.Editors.Async.ProjectTriggerEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>.Save()
  nameWithType.vb: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of ProjectTriggerResource, ProjectTriggerEditor).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ProjectTriggerResource, Octopus.Client.Editors.Async.ProjectTriggerEditor).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save()
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
