### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  commentId: T:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  id: IBuiltInPackageRepositoryRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage(Octopus.Client.Model.PackageResource)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource})
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage(System.String,System.String)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages(System.Int32,System.Int32)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages(System.String,System.Int32,System.Int32)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode,System.Boolean)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean)
  - Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: IBuiltInPackageRepositoryRepository
  nameWithType: IBuiltInPackageRepositoryRepository
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IBuiltInPackageRepositoryRepository
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface IBuiltInPackageRepositoryRepository
    content.vb: Public Interface IBuiltInPackageRepositoryRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean)
  id: PushPackage(System.String,System.IO.Stream,System.Boolean)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: PushPackage(String, Stream, Boolean)
  nameWithType: IBuiltInPackageRepositoryRepository.PushPackage(String, Stream, Boolean)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String, System.IO.Stream, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PushPackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting = false)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.IO.Stream
    - id: replaceExisting
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
    content.vb: Function PushPackage(fileName As String, contents As Stream, replaceExisting As Boolean = False) As Task(Of PackageFromBuiltInFeedResource)
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean,System.Boolean)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,System.Boolean,System.Boolean)
  id: PushPackage(System.String,System.IO.Stream,System.Boolean,System.Boolean)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: PushPackage(String, Stream, Boolean, Boolean)
  nameWithType: IBuiltInPackageRepositoryRepository.PushPackage(String, Stream, Boolean, Boolean)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String, System.IO.Stream, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PushPackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.IO.Stream
    - id: replaceExisting
      type: System.Boolean
    - id: useDeltaCompression
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
    content.vb: Function PushPackage(fileName As String, contents As Stream, replaceExisting As Boolean, useDeltaCompression As Boolean) As Task(Of PackageFromBuiltInFeedResource)
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode)
  id: PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: PushPackage(String, Stream, OverwriteMode)
  nameWithType: IBuiltInPackageRepositoryRepository.PushPackage(String, Stream, OverwriteMode)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String, System.IO.Stream, Octopus.Client.Model.OverwriteMode)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PushPackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.IO.Stream
    - id: overwriteMode
      type: Octopus.Client.Model.OverwriteMode
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
    content.vb: Function PushPackage(fileName As String, contents As Stream, overwriteMode As OverwriteMode) As Task(Of PackageFromBuiltInFeedResource)
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode,System.Boolean)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode,System.Boolean)
  id: PushPackage(System.String,System.IO.Stream,Octopus.Client.Model.OverwriteMode,System.Boolean)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: PushPackage(String, Stream, OverwriteMode, Boolean)
  nameWithType: IBuiltInPackageRepositoryRepository.PushPackage(String, Stream, OverwriteMode, Boolean)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage(System.String, System.IO.Stream, Octopus.Client.Model.OverwriteMode, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PushPackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.IO.Stream
    - id: overwriteMode
      type: Octopus.Client.Model.OverwriteMode
    - id: useDeltaCompression
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
    content.vb: Function PushPackage(fileName As String, contents As Stream, overwriteMode As OverwriteMode, useDeltaCompression As Boolean) As Task(Of PackageFromBuiltInFeedResource)
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages(System.String,System.Int32,System.Int32)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages(System.String,System.Int32,System.Int32)
  id: ListPackages(System.String,System.Int32,System.Int32)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: ListPackages(String, Int32, Int32)
  nameWithType: IBuiltInPackageRepositoryRepository.ListPackages(String, Int32, Int32)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ListPackages
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ResourceCollection<PackageFromBuiltInFeedResource>> ListPackages(string packageId, int skip = 0, int take = 30)
    parameters:
    - id: packageId
      type: System.String
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.PackageFromBuiltInFeedResource}}
    content.vb: Function ListPackages(packageId As String, skip As Integer = 0, take As Integer = 30) As Task(Of ResourceCollection(Of PackageFromBuiltInFeedResource))
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages(System.Int32,System.Int32)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages(System.Int32,System.Int32)
  id: LatestPackages(System.Int32,System.Int32)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: LatestPackages(Int32, Int32)
  nameWithType: IBuiltInPackageRepositoryRepository.LatestPackages(Int32, Int32)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LatestPackages
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 21
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<ResourceCollection<PackageFromBuiltInFeedResource>> LatestPackages(int skip = 0, int take = 30)
    parameters:
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.PackageFromBuiltInFeedResource}}
    content.vb: Function LatestPackages(skip As Integer = 0, take As Integer = 30) As Task(Of ResourceCollection(Of PackageFromBuiltInFeedResource))
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage(Octopus.Client.Model.PackageResource)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage(Octopus.Client.Model.PackageResource)
  id: DeletePackage(Octopus.Client.Model.PackageResource)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: DeletePackage(PackageResource)
  nameWithType: IBuiltInPackageRepositoryRepository.DeletePackage(PackageResource)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage(Octopus.Client.Model.PackageResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeletePackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task DeletePackage(PackageResource package)
    parameters:
    - id: package
      type: Octopus.Client.Model.PackageResource
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeletePackage(package As PackageResource) As Task
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage*
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource})
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource})
  id: DeletePackages(System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource})
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: DeletePackages(IReadOnlyList<PackageResource>)
  nameWithType: IBuiltInPackageRepositoryRepository.DeletePackages(IReadOnlyList<PackageResource>)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages(System.Collections.Generic.IReadOnlyList<Octopus.Client.Model.PackageResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeletePackages
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task DeletePackages(IReadOnlyList<PackageResource> packages)
    parameters:
    - id: packages
      type: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeletePackages(packages As IReadOnlyList(Of PackageResource)) As Task
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages*
  nameWithType.vb: IBuiltInPackageRepositoryRepository.DeletePackages(IReadOnlyList(Of PackageResource))
  fullName.vb: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages(System.Collections.Generic.IReadOnlyList(Of Octopus.Client.Model.PackageResource))
  name.vb: DeletePackages(IReadOnlyList(Of PackageResource))
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage(System.String,System.String)
  commentId: M:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage(System.String,System.String)
  id: GetPackage(System.String,System.String)
  parent: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  langs:
  - csharp
  - vb
  name: GetPackage(String, String)
  nameWithType: IBuiltInPackageRepositoryRepository.GetPackage(String, String)
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetPackage
    path: ../source/Octopus.Client/Repositories/Async/BuiltInPackageRepositoryRepository.cs
    startLine: 25
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<PackageFromBuiltInFeedResource> GetPackage(string packageId, string version)
    parameters:
    - id: packageId
      type: System.String
    - id: version
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
    content.vb: Function GetPackage(packageId As String, version As String) As Task(Of PackageFromBuiltInFeedResource)
  overload: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage
  name: PushPackage
  nameWithType: IBuiltInPackageRepositoryRepository.PushPackage
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.PushPackage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.PackageFromBuiltInFeedResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PackageFromBuiltInFeedResource>
  nameWithType: Task<PackageFromBuiltInFeedResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.PackageFromBuiltInFeedResource>
  nameWithType.vb: Task(Of PackageFromBuiltInFeedResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.PackageFromBuiltInFeedResource)
  name.vb: Task(Of PackageFromBuiltInFeedResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageFromBuiltInFeedResource
    name: PackageFromBuiltInFeedResource
    nameWithType: PackageFromBuiltInFeedResource
    fullName: Octopus.Client.Model.PackageFromBuiltInFeedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageFromBuiltInFeedResource
    name: PackageFromBuiltInFeedResource
    nameWithType: PackageFromBuiltInFeedResource
    fullName: Octopus.Client.Model.PackageFromBuiltInFeedResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Model.OverwriteMode
  commentId: T:Octopus.Client.Model.OverwriteMode
  parent: Octopus.Client.Model
  name: OverwriteMode
  nameWithType: OverwriteMode
  fullName: Octopus.Client.Model.OverwriteMode
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages
  name: ListPackages
  nameWithType: IBuiltInPackageRepositoryRepository.ListPackages
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.ListPackages
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.PackageFromBuiltInFeedResource}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.PackageFromBuiltInFeedResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceCollection<PackageFromBuiltInFeedResource>>
  nameWithType: Task<ResourceCollection<PackageFromBuiltInFeedResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.PackageFromBuiltInFeedResource>>
  nameWithType.vb: Task(Of ResourceCollection(Of PackageFromBuiltInFeedResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.PackageFromBuiltInFeedResource))
  name.vb: Task(Of ResourceCollection(Of PackageFromBuiltInFeedResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageFromBuiltInFeedResource
    name: PackageFromBuiltInFeedResource
    nameWithType: PackageFromBuiltInFeedResource
    fullName: Octopus.Client.Model.PackageFromBuiltInFeedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageFromBuiltInFeedResource
    name: PackageFromBuiltInFeedResource
    nameWithType: PackageFromBuiltInFeedResource
    fullName: Octopus.Client.Model.PackageFromBuiltInFeedResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages
  name: LatestPackages
  nameWithType: IBuiltInPackageRepositoryRepository.LatestPackages
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.LatestPackages
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage
  name: DeletePackage
  nameWithType: IBuiltInPackageRepositoryRepository.DeletePackage
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackage
- uid: Octopus.Client.Model.PackageResource
  commentId: T:Octopus.Client.Model.PackageResource
  parent: Octopus.Client.Model
  name: PackageResource
  nameWithType: PackageResource
  fullName: Octopus.Client.Model.PackageResource
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages
  name: DeletePackages
  nameWithType: IBuiltInPackageRepositoryRepository.DeletePackages
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.DeletePackages
- uid: System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource}
  commentId: T:System.Collections.Generic.IReadOnlyList{Octopus.Client.Model.PackageResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PackageResource>
  nameWithType: IReadOnlyList<PackageResource>
  fullName: System.Collections.Generic.IReadOnlyList<Octopus.Client.Model.PackageResource>
  nameWithType.vb: IReadOnlyList(Of PackageResource)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Octopus.Client.Model.PackageResource)
  name.vb: IReadOnlyList(Of PackageResource)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageResource
    name: PackageResource
    nameWithType: PackageResource
    fullName: Octopus.Client.Model.PackageResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageResource
    name: PackageResource
    nameWithType: PackageResource
    fullName: Octopus.Client.Model.PackageResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage*
  commentId: Overload:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage
  name: GetPackage
  nameWithType: IBuiltInPackageRepositoryRepository.GetPackage
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository.GetPackage
