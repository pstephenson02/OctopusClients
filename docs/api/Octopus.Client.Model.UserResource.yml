### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.UserResource
  commentId: T:Octopus.Client.Model.UserResource
  id: UserResource
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.UserResource.#ctor
  - Octopus.Client.Model.UserResource.CanPasswordBeEdited
  - Octopus.Client.Model.UserResource.DisplayName
  - Octopus.Client.Model.UserResource.EmailAddress
  - Octopus.Client.Model.UserResource.Identities
  - Octopus.Client.Model.UserResource.IsActive
  - Octopus.Client.Model.UserResource.IsRequestor
  - Octopus.Client.Model.UserResource.IsService
  - Octopus.Client.Model.UserResource.Password
  - Octopus.Client.Model.UserResource.Username
  langs:
  - csharp
  - vb
  name: UserResource
  nameWithType: UserResource
  fullName: Octopus.Client.Model.UserResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UserResource
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: 'public class UserResource : Resource, IResource, IAuditedResource'
    content.vb: >-
      Public Class UserResource
          Inherits Resource
          Implements IResource, IAuditedResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  derivedClasses:
  - Octopus.Client.Model.RegisterCommand
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.UserResource.#ctor
  commentId: M:Octopus.Client.Model.UserResource.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: UserResource()
  nameWithType: UserResource.UserResource()
  fullName: Octopus.Client.Model.UserResource.UserResource()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public UserResource()
    content.vb: Public Sub New
  overload: Octopus.Client.Model.UserResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.Username
  commentId: P:Octopus.Client.Model.UserResource.Username
  id: Username
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: UserResource.Username
  fullName: Octopus.Client.Model.UserResource.Username
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Username
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [StringLength(64)]

      public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(64)>

      Public Property Username As String
  overload: Octopus.Client.Model.UserResource.Username*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.DisplayName
  commentId: P:Octopus.Client.Model.UserResource.DisplayName
  id: DisplayName
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: UserResource.DisplayName
  fullName: Octopus.Client.Model.UserResource.DisplayName
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DisplayName
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [Required(ErrorMessage = "Please enter a Display name.")]

      [StringLength(64, ErrorMessage = "Please enter a Display name with less than 64 characters.")]

      public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Please enter a Display name.")>

      <StringLength(64, ErrorMessage:="Please enter a Display name with less than 64 characters.")>

      Public Property DisplayName As String
  overload: Octopus.Client.Model.UserResource.DisplayName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Please enter a Display name.
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 64
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Please enter a Display name with less than 64 characters.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.IsActive
  commentId: P:Octopus.Client.Model.UserResource.IsActive
  id: IsActive
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: UserResource.IsActive
  fullName: Octopus.Client.Model.UserResource.IsActive
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsActive
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 26
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: Octopus.Client.Model.UserResource.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.IsService
  commentId: P:Octopus.Client.Model.UserResource.IsService
  id: IsService
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: IsService
  nameWithType: UserResource.IsService
  fullName: Octopus.Client.Model.UserResource.IsService
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsService
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool IsService { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsService As Boolean
  overload: Octopus.Client.Model.UserResource.IsService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.EmailAddress
  commentId: P:Octopus.Client.Model.UserResource.EmailAddress
  id: EmailAddress
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: EmailAddress
  nameWithType: UserResource.EmailAddress
  fullName: Octopus.Client.Model.UserResource.EmailAddress
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: EmailAddress
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 32
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [StringLength(256)]

      [DataType(DataType.EmailAddress)]

      public string EmailAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(256)>

      <DataType(DataType.EmailAddress)>

      Public Property EmailAddress As String
  overload: Octopus.Client.Model.UserResource.EmailAddress*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 256
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 10
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.CanPasswordBeEdited
  commentId: P:Octopus.Client.Model.UserResource.CanPasswordBeEdited
  id: CanPasswordBeEdited
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: CanPasswordBeEdited
  nameWithType: UserResource.CanPasswordBeEdited
  fullName: Octopus.Client.Model.UserResource.CanPasswordBeEdited
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CanPasswordBeEdited
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 38
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public bool CanPasswordBeEdited { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanPasswordBeEdited As Boolean
  overload: Octopus.Client.Model.UserResource.CanPasswordBeEdited*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.IsRequestor
  commentId: P:Octopus.Client.Model.UserResource.IsRequestor
  id: IsRequestor
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: IsRequestor
  nameWithType: UserResource.IsRequestor
  fullName: Octopus.Client.Model.UserResource.IsRequestor
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsRequestor
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets a value indicating whether this user resource represents the user who requested it.\n"
  example: []
  syntax:
    content: public bool IsRequestor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRequestor As Boolean
  overload: Octopus.Client.Model.UserResource.IsRequestor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.Password
  commentId: P:Octopus.Client.Model.UserResource.Password
  id: Password
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: UserResource.Password
  fullName: Octopus.Client.Model.UserResource.Password
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Password
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 45
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: >-
      [PasswordComplexity]

      [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <PasswordComplexity>

      <JsonProperty(NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Password As String
  overload: Octopus.Client.Model.UserResource.Password*
  attributes:
  - type: Octopus.Client.Validation.PasswordComplexityAttribute
    ctor: Octopus.Client.Validation.PasswordComplexityAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.UserResource.Identities
  commentId: P:Octopus.Client.Model.UserResource.Identities
  id: Identities
  parent: Octopus.Client.Model.UserResource
  langs:
  - csharp
  - vb
  name: Identities
  nameWithType: UserResource.Identities
  fullName: Octopus.Client.Model.UserResource.Identities
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/UserResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Identities
    path: ../source/Octopus.Client/Model/UserResource.cs
    startLine: 51
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public IdentityResource[] Identities { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.IdentityResource[]
    content.vb: Public Property Identities As IdentityResource()
  overload: Octopus.Client.Model.UserResource.Identities*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.UserResource.#ctor*
  commentId: Overload:Octopus.Client.Model.UserResource.#ctor
  name: UserResource
  nameWithType: UserResource.UserResource
  fullName: Octopus.Client.Model.UserResource.UserResource
- uid: Octopus.Client.Model.UserResource.Username*
  commentId: Overload:Octopus.Client.Model.UserResource.Username
  name: Username
  nameWithType: UserResource.Username
  fullName: Octopus.Client.Model.UserResource.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.UserResource.DisplayName*
  commentId: Overload:Octopus.Client.Model.UserResource.DisplayName
  name: DisplayName
  nameWithType: UserResource.DisplayName
  fullName: Octopus.Client.Model.UserResource.DisplayName
- uid: Octopus.Client.Model.UserResource.IsActive*
  commentId: Overload:Octopus.Client.Model.UserResource.IsActive
  name: IsActive
  nameWithType: UserResource.IsActive
  fullName: Octopus.Client.Model.UserResource.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.UserResource.IsService*
  commentId: Overload:Octopus.Client.Model.UserResource.IsService
  name: IsService
  nameWithType: UserResource.IsService
  fullName: Octopus.Client.Model.UserResource.IsService
- uid: Octopus.Client.Model.UserResource.EmailAddress*
  commentId: Overload:Octopus.Client.Model.UserResource.EmailAddress
  name: EmailAddress
  nameWithType: UserResource.EmailAddress
  fullName: Octopus.Client.Model.UserResource.EmailAddress
- uid: Octopus.Client.Model.UserResource.CanPasswordBeEdited*
  commentId: Overload:Octopus.Client.Model.UserResource.CanPasswordBeEdited
  name: CanPasswordBeEdited
  nameWithType: UserResource.CanPasswordBeEdited
  fullName: Octopus.Client.Model.UserResource.CanPasswordBeEdited
- uid: Octopus.Client.Model.UserResource.IsRequestor*
  commentId: Overload:Octopus.Client.Model.UserResource.IsRequestor
  name: IsRequestor
  nameWithType: UserResource.IsRequestor
  fullName: Octopus.Client.Model.UserResource.IsRequestor
- uid: Octopus.Client.Model.UserResource.Password*
  commentId: Overload:Octopus.Client.Model.UserResource.Password
  name: Password
  nameWithType: UserResource.Password
  fullName: Octopus.Client.Model.UserResource.Password
- uid: Octopus.Client.Model.UserResource.Identities*
  commentId: Overload:Octopus.Client.Model.UserResource.Identities
  name: Identities
  nameWithType: UserResource.Identities
  fullName: Octopus.Client.Model.UserResource.Identities
- uid: Octopus.Client.Model.IdentityResource[]
  isExternal: true
  name: IdentityResource[]
  nameWithType: IdentityResource[]
  fullName: Octopus.Client.Model.IdentityResource[]
  nameWithType.vb: IdentityResource()
  fullName.vb: Octopus.Client.Model.IdentityResource()
  name.vb: IdentityResource()
  spec.csharp:
  - uid: Octopus.Client.Model.IdentityResource
    name: IdentityResource
    nameWithType: IdentityResource
    fullName: Octopus.Client.Model.IdentityResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.IdentityResource
    name: IdentityResource
    nameWithType: IdentityResource
    fullName: Octopus.Client.Model.IdentityResource
  - name: ()
    nameWithType: ()
    fullName: ()
