### YamlMime:ManagedReference
items:
- uid: Octopus.Client.OctopusAsyncRepository
  commentId: T:Octopus.Client.OctopusAsyncRepository
  id: OctopusAsyncRepository
  parent: Octopus.Client
  children:
  - Octopus.Client.OctopusAsyncRepository.#ctor(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  - Octopus.Client.OctopusAsyncRepository.Accounts
  - Octopus.Client.OctopusAsyncRepository.ActionTemplates
  - Octopus.Client.OctopusAsyncRepository.Artifacts
  - Octopus.Client.OctopusAsyncRepository.Backups
  - Octopus.Client.OctopusAsyncRepository.Beta
  - Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
  - Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
  - Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
  - Octopus.Client.OctopusAsyncRepository.Certificates
  - Octopus.Client.OctopusAsyncRepository.Channels
  - Octopus.Client.OctopusAsyncRepository.Client
  - Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
  - Octopus.Client.OctopusAsyncRepository.Configuration
  - Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
  - Octopus.Client.OctopusAsyncRepository.Dashboards
  - Octopus.Client.OctopusAsyncRepository.Defects
  - Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
  - Octopus.Client.OctopusAsyncRepository.Deployments
  - Octopus.Client.OctopusAsyncRepository.DeploymentSettings
  - Octopus.Client.OctopusAsyncRepository.Environments
  - Octopus.Client.OctopusAsyncRepository.Events
  - Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
  - Octopus.Client.OctopusAsyncRepository.Feeds
  - Octopus.Client.OctopusAsyncRepository.HasLink(System.String)
  - Octopus.Client.OctopusAsyncRepository.HasLinkParameter(System.String,System.String)
  - Octopus.Client.OctopusAsyncRepository.Interruptions
  - Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
  - Octopus.Client.OctopusAsyncRepository.Licenses
  - Octopus.Client.OctopusAsyncRepository.Lifecycles
  - Octopus.Client.OctopusAsyncRepository.Link(System.String)
  - Octopus.Client.OctopusAsyncRepository.LoadRootDocument
  - Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument
  - Octopus.Client.OctopusAsyncRepository.MachinePolicies
  - Octopus.Client.OctopusAsyncRepository.MachineRoles
  - Octopus.Client.OctopusAsyncRepository.Machines
  - Octopus.Client.OctopusAsyncRepository.Migrations
  - Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
  - Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
  - Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
  - Octopus.Client.OctopusAsyncRepository.ProjectGroups
  - Octopus.Client.OctopusAsyncRepository.Projects
  - Octopus.Client.OctopusAsyncRepository.ProjectTriggers
  - Octopus.Client.OctopusAsyncRepository.Proxies
  - Octopus.Client.OctopusAsyncRepository.Releases
  - Octopus.Client.OctopusAsyncRepository.RetentionPolicies
  - Octopus.Client.OctopusAsyncRepository.RunbookProcesses
  - Octopus.Client.OctopusAsyncRepository.RunbookRuns
  - Octopus.Client.OctopusAsyncRepository.Runbooks
  - Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
  - Octopus.Client.OctopusAsyncRepository.Schedulers
  - Octopus.Client.OctopusAsyncRepository.Scope
  - Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
  - Octopus.Client.OctopusAsyncRepository.ServerStatus
  - Octopus.Client.OctopusAsyncRepository.Spaces
  - Octopus.Client.OctopusAsyncRepository.Subscriptions
  - Octopus.Client.OctopusAsyncRepository.TagSets
  - Octopus.Client.OctopusAsyncRepository.Tasks
  - Octopus.Client.OctopusAsyncRepository.Teams
  - Octopus.Client.OctopusAsyncRepository.Tenants
  - Octopus.Client.OctopusAsyncRepository.TenantVariables
  - Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
  - Octopus.Client.OctopusAsyncRepository.UserInvites
  - Octopus.Client.OctopusAsyncRepository.UserPermissions
  - Octopus.Client.OctopusAsyncRepository.UserRoles
  - Octopus.Client.OctopusAsyncRepository.Users
  - Octopus.Client.OctopusAsyncRepository.UserTeams
  - Octopus.Client.OctopusAsyncRepository.VariableSets
  - Octopus.Client.OctopusAsyncRepository.WorkerPools
  - Octopus.Client.OctopusAsyncRepository.Workers
  langs:
  - csharp
  - vb
  name: OctopusAsyncRepository
  nameWithType: OctopusAsyncRepository
  fullName: Octopus.Client.OctopusAsyncRepository
  type: Class
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusAsyncRepository
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 43
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  summary: "\nA simplified interface to commonly-used parts of the API.\nFunctionality not exposed by this interface can be accessed\nusing <xref href=\"Octopus.Client.IOctopusCommonAsyncRepository.Client\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nCreate using:\n<pre><code>using(var client = new OctopusAsyncClient(new OctopusServerEndpoint(&quot;http://myoctopus/&quot;))\n{\n    var repository = client.CreateRepository();\n}</code></pre>\n"
  example: []
  syntax:
    content: 'public class OctopusAsyncRepository : IOctopusAsyncRepository, IOctopusSpaceAsyncRepository, IOctopusSystemAsyncRepository, IOctopusCommonAsyncRepository'
    content.vb: >-
      Public Class OctopusAsyncRepository
          Implements IOctopusAsyncRepository, IOctopusSpaceAsyncRepository, IOctopusSystemAsyncRepository, IOctopusCommonAsyncRepository
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.IOctopusAsyncRepository
  - Octopus.Client.IOctopusSpaceAsyncRepository
  - Octopus.Client.IOctopusSystemAsyncRepository
  - Octopus.Client.IOctopusCommonAsyncRepository
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Octopus.Client.IOctopusAsyncRepository.Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.IOctopusAsyncRepository.Octopus.Client.OctopusRepositoryExtensions.ForSystem
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.OctopusAsyncRepository.#ctor(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  commentId: M:Octopus.Client.OctopusAsyncRepository.#ctor(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)
  id: '#ctor(Octopus.Client.IOctopusAsyncClient,Octopus.Client.RepositoryScope)'
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: OctopusAsyncRepository(IOctopusAsyncClient, RepositoryScope)
  nameWithType: OctopusAsyncRepository.OctopusAsyncRepository(IOctopusAsyncClient, RepositoryScope)
  fullName: Octopus.Client.OctopusAsyncRepository.OctopusAsyncRepository(Octopus.Client.IOctopusAsyncClient, Octopus.Client.RepositoryScope)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 50
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public OctopusAsyncRepository(IOctopusAsyncClient client, RepositoryScope repositoryScope = null)
    parameters:
    - id: client
      type: Octopus.Client.IOctopusAsyncClient
    - id: repositoryScope
      type: Octopus.Client.RepositoryScope
    content.vb: Public Sub New(client As IOctopusAsyncClient, repositoryScope As RepositoryScope = Nothing)
  overload: Octopus.Client.OctopusAsyncRepository.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncRepository.Client
  commentId: P:Octopus.Client.OctopusAsyncRepository.Client
  id: Client
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: OctopusAsyncRepository.Client
  fullName: Octopus.Client.OctopusAsyncRepository.Client
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Client
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 124
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusAsyncClient Client { get; }
    parameters: []
    return:
      type: Octopus.Client.IOctopusAsyncClient
    content.vb: Public ReadOnly Property Client As IOctopusAsyncClient
  overload: Octopus.Client.OctopusAsyncRepository.Client*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Client
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Scope
  commentId: P:Octopus.Client.OctopusAsyncRepository.Scope
  id: Scope
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: OctopusAsyncRepository.Scope
  fullName: Octopus.Client.OctopusAsyncRepository.Scope
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Scope
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 125
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public RepositoryScope Scope { get; }
    parameters: []
    return:
      type: Octopus.Client.RepositoryScope
    content.vb: Public ReadOnly Property Scope As RepositoryScope
  overload: Octopus.Client.OctopusAsyncRepository.Scope*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Scope
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Accounts
  commentId: P:Octopus.Client.OctopusAsyncRepository.Accounts
  id: Accounts
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Accounts
  nameWithType: OctopusAsyncRepository.Accounts
  fullName: Octopus.Client.OctopusAsyncRepository.Accounts
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Accounts
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 126
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IAccountRepository Accounts { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IAccountRepository
    content.vb: Public ReadOnly Property Accounts As IAccountRepository
  overload: Octopus.Client.OctopusAsyncRepository.Accounts*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Accounts
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.ActionTemplates
  commentId: P:Octopus.Client.OctopusAsyncRepository.ActionTemplates
  id: ActionTemplates
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: ActionTemplates
  nameWithType: OctopusAsyncRepository.ActionTemplates
  fullName: Octopus.Client.OctopusAsyncRepository.ActionTemplates
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ActionTemplates
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 127
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IActionTemplateRepository ActionTemplates { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IActionTemplateRepository
    content.vb: Public ReadOnly Property ActionTemplates As IActionTemplateRepository
  overload: Octopus.Client.OctopusAsyncRepository.ActionTemplates*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.ActionTemplates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Artifacts
  commentId: P:Octopus.Client.OctopusAsyncRepository.Artifacts
  id: Artifacts
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Artifacts
  nameWithType: OctopusAsyncRepository.Artifacts
  fullName: Octopus.Client.OctopusAsyncRepository.Artifacts
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Artifacts
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 128
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IArtifactRepository Artifacts { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IArtifactRepository
    content.vb: Public ReadOnly Property Artifacts As IArtifactRepository
  overload: Octopus.Client.OctopusAsyncRepository.Artifacts*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Artifacts
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Beta
  commentId: P:Octopus.Client.OctopusAsyncRepository.Beta
  id: Beta
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Beta
  nameWithType: OctopusAsyncRepository.Beta
  fullName: Octopus.Client.OctopusAsyncRepository.Beta
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Beta
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 129
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusSpaceAsyncBetaRepository Beta { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository
    content.vb: Public ReadOnly Property Beta As IOctopusSpaceAsyncBetaRepository
  overload: Octopus.Client.OctopusAsyncRepository.Beta*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Beta
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Backups
  commentId: P:Octopus.Client.OctopusAsyncRepository.Backups
  id: Backups
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Backups
  nameWithType: OctopusAsyncRepository.Backups
  fullName: Octopus.Client.OctopusAsyncRepository.Backups
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Backups
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 130
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IBackupRepository Backups { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IBackupRepository
    content.vb: Public ReadOnly Property Backups As IBackupRepository
  overload: Octopus.Client.OctopusAsyncRepository.Backups*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Backups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
  commentId: P:Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
  id: BuiltInPackageRepository
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: BuiltInPackageRepository
  nameWithType: OctopusAsyncRepository.BuiltInPackageRepository
  fullName: Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: BuiltInPackageRepository
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 131
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
    content.vb: Public ReadOnly Property BuiltInPackageRepository As IBuiltInPackageRepositoryRepository
  overload: Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.BuiltInPackageRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
  commentId: P:Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
  id: BuildInformationRepository
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: BuildInformationRepository
  nameWithType: OctopusAsyncRepository.BuildInformationRepository
  fullName: Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: BuildInformationRepository
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 132
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IBuildInformationRepository BuildInformationRepository { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IBuildInformationRepository
    content.vb: Public ReadOnly Property BuildInformationRepository As IBuildInformationRepository
  overload: Octopus.Client.OctopusAsyncRepository.BuildInformationRepository*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.BuildInformationRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
  commentId: P:Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
  id: CertificateConfiguration
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: CertificateConfiguration
  nameWithType: OctopusAsyncRepository.CertificateConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CertificateConfiguration
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 133
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ICertificateConfigurationRepository CertificateConfiguration { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ICertificateConfigurationRepository
    content.vb: Public ReadOnly Property CertificateConfiguration As ICertificateConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.CertificateConfiguration*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.CertificateConfiguration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Certificates
  commentId: P:Octopus.Client.OctopusAsyncRepository.Certificates
  id: Certificates
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Certificates
  nameWithType: OctopusAsyncRepository.Certificates
  fullName: Octopus.Client.OctopusAsyncRepository.Certificates
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Certificates
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 134
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ICertificateRepository Certificates { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ICertificateRepository
    content.vb: Public ReadOnly Property Certificates As ICertificateRepository
  overload: Octopus.Client.OctopusAsyncRepository.Certificates*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Certificates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Channels
  commentId: P:Octopus.Client.OctopusAsyncRepository.Channels
  id: Channels
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: OctopusAsyncRepository.Channels
  fullName: Octopus.Client.OctopusAsyncRepository.Channels
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Channels
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 135
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IChannelRepository Channels { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IChannelRepository
    content.vb: Public ReadOnly Property Channels As IChannelRepository
  overload: Octopus.Client.OctopusAsyncRepository.Channels*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Channels
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
  commentId: P:Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
  id: CommunityActionTemplates
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: CommunityActionTemplates
  nameWithType: OctopusAsyncRepository.CommunityActionTemplates
  fullName: Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CommunityActionTemplates
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 136
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository
    content.vb: Public ReadOnly Property CommunityActionTemplates As ICommunityActionTemplateRepository
  overload: Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.CommunityActionTemplates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Configuration
  commentId: P:Octopus.Client.OctopusAsyncRepository.Configuration
  id: Configuration
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: OctopusAsyncRepository.Configuration
  fullName: Octopus.Client.OctopusAsyncRepository.Configuration
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Configuration
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 137
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IConfigurationRepository Configuration { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IConfigurationRepository
    content.vb: Public ReadOnly Property Configuration As IConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.Configuration*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Configuration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
  commentId: P:Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
  id: DashboardConfigurations
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: DashboardConfigurations
  nameWithType: OctopusAsyncRepository.DashboardConfigurations
  fullName: Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DashboardConfigurations
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 138
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDashboardConfigurationRepository DashboardConfigurations { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDashboardConfigurationRepository
    content.vb: Public ReadOnly Property DashboardConfigurations As IDashboardConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.DashboardConfigurations*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.DashboardConfigurations
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Dashboards
  commentId: P:Octopus.Client.OctopusAsyncRepository.Dashboards
  id: Dashboards
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Dashboards
  nameWithType: OctopusAsyncRepository.Dashboards
  fullName: Octopus.Client.OctopusAsyncRepository.Dashboards
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Dashboards
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 139
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDashboardRepository Dashboards { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDashboardRepository
    content.vb: Public ReadOnly Property Dashboards As IDashboardRepository
  overload: Octopus.Client.OctopusAsyncRepository.Dashboards*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Dashboards
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Defects
  commentId: P:Octopus.Client.OctopusAsyncRepository.Defects
  id: Defects
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Defects
  nameWithType: OctopusAsyncRepository.Defects
  fullName: Octopus.Client.OctopusAsyncRepository.Defects
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Defects
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 140
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDefectsRepository Defects { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDefectsRepository
    content.vb: Public ReadOnly Property Defects As IDefectsRepository
  overload: Octopus.Client.OctopusAsyncRepository.Defects*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Defects
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
  commentId: P:Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
  id: DeploymentProcesses
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: DeploymentProcesses
  nameWithType: OctopusAsyncRepository.DeploymentProcesses
  fullName: Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeploymentProcesses
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 141
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDeploymentProcessRepository DeploymentProcesses { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDeploymentProcessRepository
    content.vb: Public ReadOnly Property DeploymentProcesses As IDeploymentProcessRepository
  overload: Octopus.Client.OctopusAsyncRepository.DeploymentProcesses*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentProcesses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.DeploymentSettings
  commentId: P:Octopus.Client.OctopusAsyncRepository.DeploymentSettings
  id: DeploymentSettings
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: DeploymentSettings
  nameWithType: OctopusAsyncRepository.DeploymentSettings
  fullName: Octopus.Client.OctopusAsyncRepository.DeploymentSettings
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeploymentSettings
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 142
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDeploymentSettingsRepository DeploymentSettings { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDeploymentSettingsRepository
    content.vb: Public ReadOnly Property DeploymentSettings As IDeploymentSettingsRepository
  overload: Octopus.Client.OctopusAsyncRepository.DeploymentSettings*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Deployments
  commentId: P:Octopus.Client.OctopusAsyncRepository.Deployments
  id: Deployments
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Deployments
  nameWithType: OctopusAsyncRepository.Deployments
  fullName: Octopus.Client.OctopusAsyncRepository.Deployments
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Deployments
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 143
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IDeploymentRepository Deployments { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IDeploymentRepository
    content.vb: Public ReadOnly Property Deployments As IDeploymentRepository
  overload: Octopus.Client.OctopusAsyncRepository.Deployments*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Deployments
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Environments
  commentId: P:Octopus.Client.OctopusAsyncRepository.Environments
  id: Environments
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Environments
  nameWithType: OctopusAsyncRepository.Environments
  fullName: Octopus.Client.OctopusAsyncRepository.Environments
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Environments
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 144
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IEnvironmentRepository Environments { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IEnvironmentRepository
    content.vb: Public ReadOnly Property Environments As IEnvironmentRepository
  overload: Octopus.Client.OctopusAsyncRepository.Environments*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Environments
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Events
  commentId: P:Octopus.Client.OctopusAsyncRepository.Events
  id: Events
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: OctopusAsyncRepository.Events
  fullName: Octopus.Client.OctopusAsyncRepository.Events
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Events
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 145
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IEventRepository Events { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IEventRepository
    content.vb: Public ReadOnly Property Events As IEventRepository
  overload: Octopus.Client.OctopusAsyncRepository.Events*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Events
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
  commentId: P:Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
  id: FeaturesConfiguration
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: FeaturesConfiguration
  nameWithType: OctopusAsyncRepository.FeaturesConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FeaturesConfiguration
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 146
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository
    content.vb: Public ReadOnly Property FeaturesConfiguration As IFeaturesConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.FeaturesConfiguration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Feeds
  commentId: P:Octopus.Client.OctopusAsyncRepository.Feeds
  id: Feeds
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Feeds
  nameWithType: OctopusAsyncRepository.Feeds
  fullName: Octopus.Client.OctopusAsyncRepository.Feeds
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Feeds
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 147
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IFeedRepository Feeds { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IFeedRepository
    content.vb: Public ReadOnly Property Feeds As IFeedRepository
  overload: Octopus.Client.OctopusAsyncRepository.Feeds*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Feeds
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Interruptions
  commentId: P:Octopus.Client.OctopusAsyncRepository.Interruptions
  id: Interruptions
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Interruptions
  nameWithType: OctopusAsyncRepository.Interruptions
  fullName: Octopus.Client.OctopusAsyncRepository.Interruptions
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Interruptions
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 148
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IInterruptionRepository Interruptions { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IInterruptionRepository
    content.vb: Public ReadOnly Property Interruptions As IInterruptionRepository
  overload: Octopus.Client.OctopusAsyncRepository.Interruptions*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Interruptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
  commentId: P:Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
  id: LibraryVariableSets
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: LibraryVariableSets
  nameWithType: OctopusAsyncRepository.LibraryVariableSets
  fullName: Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LibraryVariableSets
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 149
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ILibraryVariableSetRepository LibraryVariableSets { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ILibraryVariableSetRepository
    content.vb: Public ReadOnly Property LibraryVariableSets As ILibraryVariableSetRepository
  overload: Octopus.Client.OctopusAsyncRepository.LibraryVariableSets*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.LibraryVariableSets
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Licenses
  commentId: P:Octopus.Client.OctopusAsyncRepository.Licenses
  id: Licenses
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Licenses
  nameWithType: OctopusAsyncRepository.Licenses
  fullName: Octopus.Client.OctopusAsyncRepository.Licenses
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Licenses
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 150
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ILicensesRepository Licenses { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ILicensesRepository
    content.vb: Public ReadOnly Property Licenses As ILicensesRepository
  overload: Octopus.Client.OctopusAsyncRepository.Licenses*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Licenses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Lifecycles
  commentId: P:Octopus.Client.OctopusAsyncRepository.Lifecycles
  id: Lifecycles
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Lifecycles
  nameWithType: OctopusAsyncRepository.Lifecycles
  fullName: Octopus.Client.OctopusAsyncRepository.Lifecycles
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Lifecycles
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 151
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ILifecyclesRepository Lifecycles { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ILifecyclesRepository
    content.vb: Public ReadOnly Property Lifecycles As ILifecyclesRepository
  overload: Octopus.Client.OctopusAsyncRepository.Lifecycles*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Lifecycles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.MachinePolicies
  commentId: P:Octopus.Client.OctopusAsyncRepository.MachinePolicies
  id: MachinePolicies
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: MachinePolicies
  nameWithType: OctopusAsyncRepository.MachinePolicies
  fullName: Octopus.Client.OctopusAsyncRepository.MachinePolicies
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MachinePolicies
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 152
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IMachinePolicyRepository MachinePolicies { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IMachinePolicyRepository
    content.vb: Public ReadOnly Property MachinePolicies As IMachinePolicyRepository
  overload: Octopus.Client.OctopusAsyncRepository.MachinePolicies*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.MachinePolicies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Machines
  commentId: P:Octopus.Client.OctopusAsyncRepository.Machines
  id: Machines
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Machines
  nameWithType: OctopusAsyncRepository.Machines
  fullName: Octopus.Client.OctopusAsyncRepository.Machines
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Machines
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 153
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IMachineRepository Machines { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IMachineRepository
    content.vb: Public ReadOnly Property Machines As IMachineRepository
  overload: Octopus.Client.OctopusAsyncRepository.Machines*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Machines
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.MachineRoles
  commentId: P:Octopus.Client.OctopusAsyncRepository.MachineRoles
  id: MachineRoles
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: MachineRoles
  nameWithType: OctopusAsyncRepository.MachineRoles
  fullName: Octopus.Client.OctopusAsyncRepository.MachineRoles
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MachineRoles
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 154
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IMachineRoleRepository MachineRoles { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IMachineRoleRepository
    content.vb: Public ReadOnly Property MachineRoles As IMachineRoleRepository
  overload: Octopus.Client.OctopusAsyncRepository.MachineRoles*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.MachineRoles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Migrations
  commentId: P:Octopus.Client.OctopusAsyncRepository.Migrations
  id: Migrations
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Migrations
  nameWithType: OctopusAsyncRepository.Migrations
  fullName: Octopus.Client.OctopusAsyncRepository.Migrations
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Migrations
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 155
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IMigrationRepository Migrations { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IMigrationRepository
    content.vb: Public ReadOnly Property Migrations As IMigrationRepository
  overload: Octopus.Client.OctopusAsyncRepository.Migrations*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Migrations
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
  commentId: P:Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
  id: OctopusServerNodes
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: OctopusServerNodes
  nameWithType: OctopusAsyncRepository.OctopusServerNodes
  fullName: Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: OctopusServerNodes
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 156
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IOctopusServerNodeRepository OctopusServerNodes { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IOctopusServerNodeRepository
    content.vb: Public ReadOnly Property OctopusServerNodes As IOctopusServerNodeRepository
  overload: Octopus.Client.OctopusAsyncRepository.OctopusServerNodes*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.OctopusServerNodes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
  commentId: P:Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
  id: PerformanceConfiguration
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: PerformanceConfiguration
  nameWithType: OctopusAsyncRepository.PerformanceConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PerformanceConfiguration
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 157
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository
    content.vb: Public ReadOnly Property PerformanceConfiguration As IPerformanceConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.PerformanceConfiguration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
  commentId: P:Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
  id: PackageMetadataRepository
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: PackageMetadataRepository
  nameWithType: OctopusAsyncRepository.PackageMetadataRepository
  fullName: Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PackageMetadataRepository
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 158
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IPackageMetadataRepository PackageMetadataRepository { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IPackageMetadataRepository
    content.vb: Public ReadOnly Property PackageMetadataRepository As IPackageMetadataRepository
  overload: Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.PackageMetadataRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.ProjectGroups
  commentId: P:Octopus.Client.OctopusAsyncRepository.ProjectGroups
  id: ProjectGroups
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: ProjectGroups
  nameWithType: OctopusAsyncRepository.ProjectGroups
  fullName: Octopus.Client.OctopusAsyncRepository.ProjectGroups
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectGroups
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 159
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IProjectGroupRepository ProjectGroups { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IProjectGroupRepository
    content.vb: Public ReadOnly Property ProjectGroups As IProjectGroupRepository
  overload: Octopus.Client.OctopusAsyncRepository.ProjectGroups*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.ProjectGroups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Projects
  commentId: P:Octopus.Client.OctopusAsyncRepository.Projects
  id: Projects
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: OctopusAsyncRepository.Projects
  fullName: Octopus.Client.OctopusAsyncRepository.Projects
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Projects
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 160
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IProjectRepository Projects { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IProjectRepository
    content.vb: Public ReadOnly Property Projects As IProjectRepository
  overload: Octopus.Client.OctopusAsyncRepository.Projects*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Projects
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Runbooks
  commentId: P:Octopus.Client.OctopusAsyncRepository.Runbooks
  id: Runbooks
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Runbooks
  nameWithType: OctopusAsyncRepository.Runbooks
  fullName: Octopus.Client.OctopusAsyncRepository.Runbooks
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Runbooks
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 161
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IRunbookRepository Runbooks { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IRunbookRepository
    content.vb: Public ReadOnly Property Runbooks As IRunbookRepository
  overload: Octopus.Client.OctopusAsyncRepository.Runbooks*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Runbooks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.RunbookProcesses
  commentId: P:Octopus.Client.OctopusAsyncRepository.RunbookProcesses
  id: RunbookProcesses
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: RunbookProcesses
  nameWithType: OctopusAsyncRepository.RunbookProcesses
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookProcesses
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RunbookProcesses
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 162
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IRunbookProcessRepository RunbookProcesses { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IRunbookProcessRepository
    content.vb: Public ReadOnly Property RunbookProcesses As IRunbookProcessRepository
  overload: Octopus.Client.OctopusAsyncRepository.RunbookProcesses*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.RunbookProcesses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
  commentId: P:Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
  id: RunbookSnapshots
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: RunbookSnapshots
  nameWithType: OctopusAsyncRepository.RunbookSnapshots
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RunbookSnapshots
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 163
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IRunbookSnapshotRepository RunbookSnapshots { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
    content.vb: Public ReadOnly Property RunbookSnapshots As IRunbookSnapshotRepository
  overload: Octopus.Client.OctopusAsyncRepository.RunbookSnapshots*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.RunbookSnapshots
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.RunbookRuns
  commentId: P:Octopus.Client.OctopusAsyncRepository.RunbookRuns
  id: RunbookRuns
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: RunbookRuns
  nameWithType: OctopusAsyncRepository.RunbookRuns
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookRuns
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RunbookRuns
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 164
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IRunbookRunRepository RunbookRuns { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IRunbookRunRepository
    content.vb: Public ReadOnly Property RunbookRuns As IRunbookRunRepository
  overload: Octopus.Client.OctopusAsyncRepository.RunbookRuns*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.RunbookRuns
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.ProjectTriggers
  commentId: P:Octopus.Client.OctopusAsyncRepository.ProjectTriggers
  id: ProjectTriggers
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: ProjectTriggers
  nameWithType: OctopusAsyncRepository.ProjectTriggers
  fullName: Octopus.Client.OctopusAsyncRepository.ProjectTriggers
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectTriggers
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 165
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IProjectTriggerRepository ProjectTriggers { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IProjectTriggerRepository
    content.vb: Public ReadOnly Property ProjectTriggers As IProjectTriggerRepository
  overload: Octopus.Client.OctopusAsyncRepository.ProjectTriggers*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.ProjectTriggers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Proxies
  commentId: P:Octopus.Client.OctopusAsyncRepository.Proxies
  id: Proxies
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Proxies
  nameWithType: OctopusAsyncRepository.Proxies
  fullName: Octopus.Client.OctopusAsyncRepository.Proxies
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Proxies
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 166
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IProxyRepository Proxies { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IProxyRepository
    content.vb: Public ReadOnly Property Proxies As IProxyRepository
  overload: Octopus.Client.OctopusAsyncRepository.Proxies*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Proxies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Releases
  commentId: P:Octopus.Client.OctopusAsyncRepository.Releases
  id: Releases
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Releases
  nameWithType: OctopusAsyncRepository.Releases
  fullName: Octopus.Client.OctopusAsyncRepository.Releases
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Releases
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 167
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IReleaseRepository Releases { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IReleaseRepository
    content.vb: Public ReadOnly Property Releases As IReleaseRepository
  overload: Octopus.Client.OctopusAsyncRepository.Releases*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Releases
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.RetentionPolicies
  commentId: P:Octopus.Client.OctopusAsyncRepository.RetentionPolicies
  id: RetentionPolicies
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: RetentionPolicies
  nameWithType: OctopusAsyncRepository.RetentionPolicies
  fullName: Octopus.Client.OctopusAsyncRepository.RetentionPolicies
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RetentionPolicies
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 168
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IRetentionPolicyRepository RetentionPolicies { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IRetentionPolicyRepository
    content.vb: Public ReadOnly Property RetentionPolicies As IRetentionPolicyRepository
  overload: Octopus.Client.OctopusAsyncRepository.RetentionPolicies*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.RetentionPolicies
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Schedulers
  commentId: P:Octopus.Client.OctopusAsyncRepository.Schedulers
  id: Schedulers
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Schedulers
  nameWithType: OctopusAsyncRepository.Schedulers
  fullName: Octopus.Client.OctopusAsyncRepository.Schedulers
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Schedulers
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 169
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ISchedulerRepository Schedulers { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ISchedulerRepository
    content.vb: Public ReadOnly Property Schedulers As ISchedulerRepository
  overload: Octopus.Client.OctopusAsyncRepository.Schedulers*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Schedulers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.ServerStatus
  commentId: P:Octopus.Client.OctopusAsyncRepository.ServerStatus
  id: ServerStatus
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: ServerStatus
  nameWithType: OctopusAsyncRepository.ServerStatus
  fullName: Octopus.Client.OctopusAsyncRepository.ServerStatus
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ServerStatus
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 170
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IServerStatusRepository ServerStatus { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IServerStatusRepository
    content.vb: Public ReadOnly Property ServerStatus As IServerStatusRepository
  overload: Octopus.Client.OctopusAsyncRepository.ServerStatus*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.ServerStatus
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Spaces
  commentId: P:Octopus.Client.OctopusAsyncRepository.Spaces
  id: Spaces
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Spaces
  nameWithType: OctopusAsyncRepository.Spaces
  fullName: Octopus.Client.OctopusAsyncRepository.Spaces
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Spaces
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 171
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ISpaceRepository Spaces { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ISpaceRepository
    content.vb: Public ReadOnly Property Spaces As ISpaceRepository
  overload: Octopus.Client.OctopusAsyncRepository.Spaces*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Spaces
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Subscriptions
  commentId: P:Octopus.Client.OctopusAsyncRepository.Subscriptions
  id: Subscriptions
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Subscriptions
  nameWithType: OctopusAsyncRepository.Subscriptions
  fullName: Octopus.Client.OctopusAsyncRepository.Subscriptions
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Subscriptions
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 172
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ISubscriptionRepository Subscriptions { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ISubscriptionRepository
    content.vb: Public ReadOnly Property Subscriptions As ISubscriptionRepository
  overload: Octopus.Client.OctopusAsyncRepository.Subscriptions*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Subscriptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.TagSets
  commentId: P:Octopus.Client.OctopusAsyncRepository.TagSets
  id: TagSets
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: TagSets
  nameWithType: OctopusAsyncRepository.TagSets
  fullName: Octopus.Client.OctopusAsyncRepository.TagSets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TagSets
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 173
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ITagSetRepository TagSets { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ITagSetRepository
    content.vb: Public ReadOnly Property TagSets As ITagSetRepository
  overload: Octopus.Client.OctopusAsyncRepository.TagSets*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.TagSets
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Tasks
  commentId: P:Octopus.Client.OctopusAsyncRepository.Tasks
  id: Tasks
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: OctopusAsyncRepository.Tasks
  fullName: Octopus.Client.OctopusAsyncRepository.Tasks
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Tasks
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 174
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ITaskRepository Tasks { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ITaskRepository
    content.vb: Public ReadOnly Property Tasks As ITaskRepository
  overload: Octopus.Client.OctopusAsyncRepository.Tasks*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Tasks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Teams
  commentId: P:Octopus.Client.OctopusAsyncRepository.Teams
  id: Teams
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Teams
  nameWithType: OctopusAsyncRepository.Teams
  fullName: Octopus.Client.OctopusAsyncRepository.Teams
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Teams
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 175
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ITeamsRepository Teams { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ITeamsRepository
    content.vb: Public ReadOnly Property Teams As ITeamsRepository
  overload: Octopus.Client.OctopusAsyncRepository.Teams*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Teams
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Tenants
  commentId: P:Octopus.Client.OctopusAsyncRepository.Tenants
  id: Tenants
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Tenants
  nameWithType: OctopusAsyncRepository.Tenants
  fullName: Octopus.Client.OctopusAsyncRepository.Tenants
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Tenants
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 176
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ITenantRepository Tenants { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ITenantRepository
    content.vb: Public ReadOnly Property Tenants As ITenantRepository
  overload: Octopus.Client.OctopusAsyncRepository.Tenants*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Tenants
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.TenantVariables
  commentId: P:Octopus.Client.OctopusAsyncRepository.TenantVariables
  id: TenantVariables
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: TenantVariables
  nameWithType: OctopusAsyncRepository.TenantVariables
  fullName: Octopus.Client.OctopusAsyncRepository.TenantVariables
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TenantVariables
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 177
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public ITenantVariablesRepository TenantVariables { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.ITenantVariablesRepository
    content.vb: Public ReadOnly Property TenantVariables As ITenantVariablesRepository
  overload: Octopus.Client.OctopusAsyncRepository.TenantVariables*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.TenantVariables
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.UserInvites
  commentId: P:Octopus.Client.OctopusAsyncRepository.UserInvites
  id: UserInvites
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: UserInvites
  nameWithType: OctopusAsyncRepository.UserInvites
  fullName: Octopus.Client.OctopusAsyncRepository.UserInvites
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UserInvites
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 178
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUserInvitesRepository UserInvites { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUserInvitesRepository
    content.vb: Public ReadOnly Property UserInvites As IUserInvitesRepository
  overload: Octopus.Client.OctopusAsyncRepository.UserInvites*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.UserInvites
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Users
  commentId: P:Octopus.Client.OctopusAsyncRepository.Users
  id: Users
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: OctopusAsyncRepository.Users
  fullName: Octopus.Client.OctopusAsyncRepository.Users
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Users
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 179
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUserRepository Users { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUserRepository
    content.vb: Public ReadOnly Property Users As IUserRepository
  overload: Octopus.Client.OctopusAsyncRepository.Users*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.Users
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.UserRoles
  commentId: P:Octopus.Client.OctopusAsyncRepository.UserRoles
  id: UserRoles
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: UserRoles
  nameWithType: OctopusAsyncRepository.UserRoles
  fullName: Octopus.Client.OctopusAsyncRepository.UserRoles
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UserRoles
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 180
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUserRolesRepository UserRoles { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUserRolesRepository
    content.vb: Public ReadOnly Property UserRoles As IUserRolesRepository
  overload: Octopus.Client.OctopusAsyncRepository.UserRoles*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.UserRoles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.VariableSets
  commentId: P:Octopus.Client.OctopusAsyncRepository.VariableSets
  id: VariableSets
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: VariableSets
  nameWithType: OctopusAsyncRepository.VariableSets
  fullName: Octopus.Client.OctopusAsyncRepository.VariableSets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: VariableSets
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 181
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IVariableSetRepository VariableSets { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IVariableSetRepository
    content.vb: Public ReadOnly Property VariableSets As IVariableSetRepository
  overload: Octopus.Client.OctopusAsyncRepository.VariableSets*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.VariableSets
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.WorkerPools
  commentId: P:Octopus.Client.OctopusAsyncRepository.WorkerPools
  id: WorkerPools
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: WorkerPools
  nameWithType: OctopusAsyncRepository.WorkerPools
  fullName: Octopus.Client.OctopusAsyncRepository.WorkerPools
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: WorkerPools
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 182
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IWorkerPoolRepository WorkerPools { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IWorkerPoolRepository
    content.vb: Public ReadOnly Property WorkerPools As IWorkerPoolRepository
  overload: Octopus.Client.OctopusAsyncRepository.WorkerPools*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.WorkerPools
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.Workers
  commentId: P:Octopus.Client.OctopusAsyncRepository.Workers
  id: Workers
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Workers
  nameWithType: OctopusAsyncRepository.Workers
  fullName: Octopus.Client.OctopusAsyncRepository.Workers
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Workers
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 183
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IWorkerRepository Workers { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IWorkerRepository
    content.vb: Public ReadOnly Property Workers As IWorkerRepository
  overload: Octopus.Client.OctopusAsyncRepository.Workers*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.Workers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
  commentId: P:Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
  id: ScopedUserRoles
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: ScopedUserRoles
  nameWithType: OctopusAsyncRepository.ScopedUserRoles
  fullName: Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ScopedUserRoles
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 184
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IScopedUserRoleRepository ScopedUserRoles { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IScopedUserRoleRepository
    content.vb: Public ReadOnly Property ScopedUserRoles As IScopedUserRoleRepository
  overload: Octopus.Client.OctopusAsyncRepository.ScopedUserRoles*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.ScopedUserRoles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.UserPermissions
  commentId: P:Octopus.Client.OctopusAsyncRepository.UserPermissions
  id: UserPermissions
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: UserPermissions
  nameWithType: OctopusAsyncRepository.UserPermissions
  fullName: Octopus.Client.OctopusAsyncRepository.UserPermissions
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UserPermissions
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 185
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUserPermissionsRepository UserPermissions { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUserPermissionsRepository
    content.vb: Public ReadOnly Property UserPermissions As IUserPermissionsRepository
  overload: Octopus.Client.OctopusAsyncRepository.UserPermissions*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.UserPermissions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.UserTeams
  commentId: P:Octopus.Client.OctopusAsyncRepository.UserTeams
  id: UserTeams
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: UserTeams
  nameWithType: OctopusAsyncRepository.UserTeams
  fullName: Octopus.Client.OctopusAsyncRepository.UserTeams
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UserTeams
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 186
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUserTeamsRepository UserTeams { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUserTeamsRepository
    content.vb: Public ReadOnly Property UserTeams As IUserTeamsRepository
  overload: Octopus.Client.OctopusAsyncRepository.UserTeams*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.UserTeams
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
  commentId: P:Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
  id: UpgradeConfiguration
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: UpgradeConfiguration
  nameWithType: OctopusAsyncRepository.UpgradeConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
  type: Property
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UpgradeConfiguration
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 187
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    parameters: []
    return:
      type: Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository
    content.vb: Public ReadOnly Property UpgradeConfiguration As IUpgradeConfigurationRepository
  overload: Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.UpgradeConfiguration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.OctopusAsyncRepository.HasLink(System.String)
  commentId: M:Octopus.Client.OctopusAsyncRepository.HasLink(System.String)
  id: HasLink(System.String)
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: HasLink(String)
  nameWithType: OctopusAsyncRepository.HasLink(String)
  fullName: Octopus.Client.OctopusAsyncRepository.HasLink(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: HasLink
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 189
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task<bool> HasLink(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HasLink(name As String) As Task(Of Boolean)
  overload: Octopus.Client.OctopusAsyncRepository.HasLink*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncRepository.HasLinkParameter(System.String,System.String)
  commentId: M:Octopus.Client.OctopusAsyncRepository.HasLinkParameter(System.String,System.String)
  id: HasLinkParameter(System.String,System.String)
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: HasLinkParameter(String, String)
  nameWithType: OctopusAsyncRepository.HasLinkParameter(String, String)
  fullName: Octopus.Client.OctopusAsyncRepository.HasLinkParameter(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: HasLinkParameter
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 196
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task<bool> HasLinkParameter(string linkName, string parameterName)
    parameters:
    - id: linkName
      type: System.String
    - id: parameterName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HasLinkParameter(linkName As String, parameterName As String) As Task(Of Boolean)
  overload: Octopus.Client.OctopusAsyncRepository.HasLinkParameter*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncRepository.Link(System.String)
  commentId: M:Octopus.Client.OctopusAsyncRepository.Link(System.String)
  id: Link(System.String)
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: Link(String)
  nameWithType: OctopusAsyncRepository.Link(String)
  fullName: Octopus.Client.OctopusAsyncRepository.Link(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Link
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 216
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task<string> Link(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function Link(name As String) As Task(Of String)
  overload: Octopus.Client.OctopusAsyncRepository.Link*
  implements:
  - Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncRepository.LoadRootDocument
  commentId: M:Octopus.Client.OctopusAsyncRepository.LoadRootDocument
  id: LoadRootDocument
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: LoadRootDocument()
  nameWithType: OctopusAsyncRepository.LoadRootDocument()
  fullName: Octopus.Client.OctopusAsyncRepository.LoadRootDocument()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LoadRootDocument
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 225
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task<RootResource> LoadRootDocument()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RootResource}
    content.vb: Public Function LoadRootDocument As Task(Of RootResource)
  overload: Octopus.Client.OctopusAsyncRepository.LoadRootDocument*
  implements:
  - Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument
  commentId: M:Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument
  id: LoadSpaceRootDocument
  parent: Octopus.Client.OctopusAsyncRepository
  langs:
  - csharp
  - vb
  name: LoadSpaceRootDocument()
  nameWithType: OctopusAsyncRepository.LoadSpaceRootDocument()
  fullName: Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/OctopusAsyncRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LoadSpaceRootDocument
    path: ../source/Octopus.Client/OctopusAsyncRepository.cs
    startLine: 226
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public Task<SpaceRootResource> LoadSpaceRootDocument()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.SpaceRootResource}
    content.vb: Public Function LoadSpaceRootDocument As Task(Of SpaceRootResource)
  overload: Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument*
  implements:
  - Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Client
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.Client
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: Client
  nameWithType: IOctopusCommonAsyncRepository.Client
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Client
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.IOctopusAsyncRepository
  commentId: T:Octopus.Client.IOctopusAsyncRepository
  parent: Octopus.Client
  name: IOctopusAsyncRepository
  nameWithType: IOctopusAsyncRepository
  fullName: Octopus.Client.IOctopusAsyncRepository
- uid: Octopus.Client.IOctopusSpaceAsyncRepository
  commentId: T:Octopus.Client.IOctopusSpaceAsyncRepository
  parent: Octopus.Client
  name: IOctopusSpaceAsyncRepository
  nameWithType: IOctopusSpaceAsyncRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository
- uid: Octopus.Client.IOctopusSystemAsyncRepository
  commentId: T:Octopus.Client.IOctopusSystemAsyncRepository
  parent: Octopus.Client
  name: IOctopusSystemAsyncRepository
  nameWithType: IOctopusSystemAsyncRepository
  fullName: Octopus.Client.IOctopusSystemAsyncRepository
- uid: Octopus.Client.IOctopusCommonAsyncRepository
  commentId: T:Octopus.Client.IOctopusCommonAsyncRepository
  parent: Octopus.Client
  name: IOctopusCommonAsyncRepository
  nameWithType: IOctopusCommonAsyncRepository
  fullName: Octopus.Client.IOctopusCommonAsyncRepository
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncRepository.Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.OctopusRepositoryExtensions
  definition: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  name: ForSpace(SpaceResource)
  nameWithType: OctopusRepositoryExtensions.ForSpace(SpaceResource)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: OctopusRepositoryExtensions.ForSpace
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: OctopusRepositoryExtensions.ForSpace
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.IOctopusAsyncRepository.Octopus.Client.OctopusRepositoryExtensions.ForSystem
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  parent: Octopus.Client.OctopusRepositoryExtensions
  definition: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  name: ForSystem()
  nameWithType: OctopusRepositoryExtensions.ForSystem()
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem()
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem
    name: ForSystem
    nameWithType: OctopusRepositoryExtensions.ForSystem
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem
    name: ForSystem
    nameWithType: OctopusRepositoryExtensions.ForSystem
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
  name: ForSpace(IOctopusAsyncRepository, SpaceResource)
  nameWithType: OctopusRepositoryExtensions.ForSpace(IOctopusAsyncRepository, SpaceResource)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository, Octopus.Client.Model.SpaceResource)
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: OctopusRepositoryExtensions.ForSpace
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncRepository
    name: IOctopusAsyncRepository
    nameWithType: IOctopusAsyncRepository
    fullName: Octopus.Client.IOctopusAsyncRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSpace(Octopus.Client.IOctopusAsyncRepository,Octopus.Client.Model.SpaceResource)
    name: ForSpace
    nameWithType: OctopusRepositoryExtensions.ForSpace
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSpace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncRepository
    name: IOctopusAsyncRepository
    nameWithType: IOctopusAsyncRepository
    fullName: Octopus.Client.IOctopusAsyncRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusRepositoryExtensions
  commentId: T:Octopus.Client.OctopusRepositoryExtensions
  parent: Octopus.Client
  name: OctopusRepositoryExtensions
  nameWithType: OctopusRepositoryExtensions
  fullName: Octopus.Client.OctopusRepositoryExtensions
- uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  commentId: M:Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  name: ForSystem(IOctopusAsyncRepository)
  nameWithType: OctopusRepositoryExtensions.ForSystem(IOctopusAsyncRepository)
  fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
  spec.csharp:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
    name: ForSystem
    nameWithType: OctopusRepositoryExtensions.ForSystem
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncRepository
    name: IOctopusAsyncRepository
    nameWithType: IOctopusAsyncRepository
    fullName: Octopus.Client.IOctopusAsyncRepository
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.OctopusRepositoryExtensions.ForSystem(Octopus.Client.IOctopusAsyncRepository)
    name: ForSystem
    nameWithType: OctopusRepositoryExtensions.ForSystem
    fullName: Octopus.Client.OctopusRepositoryExtensions.ForSystem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.IOctopusAsyncRepository
    name: IOctopusAsyncRepository
    nameWithType: IOctopusAsyncRepository
    fullName: Octopus.Client.IOctopusAsyncRepository
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncRepository.#ctor*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.#ctor
  name: OctopusAsyncRepository
  nameWithType: OctopusAsyncRepository.OctopusAsyncRepository
  fullName: Octopus.Client.OctopusAsyncRepository.OctopusAsyncRepository
- uid: Octopus.Client.IOctopusAsyncClient
  commentId: T:Octopus.Client.IOctopusAsyncClient
  parent: Octopus.Client
  name: IOctopusAsyncClient
  nameWithType: IOctopusAsyncClient
  fullName: Octopus.Client.IOctopusAsyncClient
- uid: Octopus.Client.RepositoryScope
  commentId: T:Octopus.Client.RepositoryScope
  parent: Octopus.Client
  name: RepositoryScope
  nameWithType: RepositoryScope
  fullName: Octopus.Client.RepositoryScope
- uid: Octopus.Client.OctopusAsyncRepository.Client*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Client
  name: Client
  nameWithType: OctopusAsyncRepository.Client
  fullName: Octopus.Client.OctopusAsyncRepository.Client
- uid: Octopus.Client.OctopusAsyncRepository.Scope*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Scope
  name: Scope
  nameWithType: OctopusAsyncRepository.Scope
  fullName: Octopus.Client.OctopusAsyncRepository.Scope
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Scope
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.Scope
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: Scope
  nameWithType: IOctopusCommonAsyncRepository.Scope
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Scope
- uid: Octopus.Client.OctopusAsyncRepository.Accounts*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Accounts
  name: Accounts
  nameWithType: OctopusAsyncRepository.Accounts
  fullName: Octopus.Client.OctopusAsyncRepository.Accounts
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Accounts
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Accounts
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Accounts
  nameWithType: IOctopusSpaceAsyncRepository.Accounts
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Accounts
- uid: Octopus.Client.Repositories.Async.IAccountRepository
  commentId: T:Octopus.Client.Repositories.Async.IAccountRepository
  parent: Octopus.Client.Repositories.Async
  name: IAccountRepository
  nameWithType: IAccountRepository
  fullName: Octopus.Client.Repositories.Async.IAccountRepository
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.OctopusAsyncRepository.ActionTemplates*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.ActionTemplates
  name: ActionTemplates
  nameWithType: OctopusAsyncRepository.ActionTemplates
  fullName: Octopus.Client.OctopusAsyncRepository.ActionTemplates
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.ActionTemplates
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.ActionTemplates
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: ActionTemplates
  nameWithType: IOctopusSpaceAsyncRepository.ActionTemplates
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.ActionTemplates
- uid: Octopus.Client.Repositories.Async.IActionTemplateRepository
  commentId: T:Octopus.Client.Repositories.Async.IActionTemplateRepository
  parent: Octopus.Client.Repositories.Async
  name: IActionTemplateRepository
  nameWithType: IActionTemplateRepository
  fullName: Octopus.Client.Repositories.Async.IActionTemplateRepository
- uid: Octopus.Client.OctopusAsyncRepository.Artifacts*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Artifacts
  name: Artifacts
  nameWithType: OctopusAsyncRepository.Artifacts
  fullName: Octopus.Client.OctopusAsyncRepository.Artifacts
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Artifacts
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Artifacts
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Artifacts
  nameWithType: IOctopusSpaceAsyncRepository.Artifacts
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Artifacts
- uid: Octopus.Client.Repositories.Async.IArtifactRepository
  commentId: T:Octopus.Client.Repositories.Async.IArtifactRepository
  parent: Octopus.Client.Repositories.Async
  name: IArtifactRepository
  nameWithType: IArtifactRepository
  fullName: Octopus.Client.Repositories.Async.IArtifactRepository
- uid: Octopus.Client.OctopusAsyncRepository.Beta*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Beta
  name: Beta
  nameWithType: OctopusAsyncRepository.Beta
  fullName: Octopus.Client.OctopusAsyncRepository.Beta
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Beta
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Beta
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Beta
  nameWithType: IOctopusSpaceAsyncRepository.Beta
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Beta
- uid: Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository
  commentId: T:Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository
  parent: Octopus.Client.Repositories.Async
  name: IOctopusSpaceAsyncBetaRepository
  nameWithType: IOctopusSpaceAsyncBetaRepository
  fullName: Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository
- uid: Octopus.Client.OctopusAsyncRepository.Backups*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Backups
  name: Backups
  nameWithType: OctopusAsyncRepository.Backups
  fullName: Octopus.Client.OctopusAsyncRepository.Backups
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Backups
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Backups
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Backups
  nameWithType: IOctopusSystemAsyncRepository.Backups
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Backups
- uid: Octopus.Client.Repositories.Async.IBackupRepository
  commentId: T:Octopus.Client.Repositories.Async.IBackupRepository
  parent: Octopus.Client.Repositories.Async
  name: IBackupRepository
  nameWithType: IBackupRepository
  fullName: Octopus.Client.Repositories.Async.IBackupRepository
- uid: Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
  name: BuiltInPackageRepository
  nameWithType: OctopusAsyncRepository.BuiltInPackageRepository
  fullName: Octopus.Client.OctopusAsyncRepository.BuiltInPackageRepository
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.BuiltInPackageRepository
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.BuiltInPackageRepository
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: BuiltInPackageRepository
  nameWithType: IOctopusSpaceAsyncRepository.BuiltInPackageRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.BuiltInPackageRepository
- uid: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  commentId: T:Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
  parent: Octopus.Client.Repositories.Async
  name: IBuiltInPackageRepositoryRepository
  nameWithType: IBuiltInPackageRepositoryRepository
  fullName: Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository
- uid: Octopus.Client.OctopusAsyncRepository.BuildInformationRepository*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
  name: BuildInformationRepository
  nameWithType: OctopusAsyncRepository.BuildInformationRepository
  fullName: Octopus.Client.OctopusAsyncRepository.BuildInformationRepository
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.BuildInformationRepository
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.BuildInformationRepository
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: BuildInformationRepository
  nameWithType: IOctopusSpaceAsyncRepository.BuildInformationRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.BuildInformationRepository
- uid: Octopus.Client.Repositories.Async.IBuildInformationRepository
  commentId: T:Octopus.Client.Repositories.Async.IBuildInformationRepository
  parent: Octopus.Client.Repositories.Async
  name: IBuildInformationRepository
  nameWithType: IBuildInformationRepository
  fullName: Octopus.Client.Repositories.Async.IBuildInformationRepository
- uid: Octopus.Client.OctopusAsyncRepository.CertificateConfiguration*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
  name: CertificateConfiguration
  nameWithType: OctopusAsyncRepository.CertificateConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.CertificateConfiguration
- uid: Octopus.Client.IOctopusSystemAsyncRepository.CertificateConfiguration
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.CertificateConfiguration
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: CertificateConfiguration
  nameWithType: IOctopusSystemAsyncRepository.CertificateConfiguration
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.CertificateConfiguration
- uid: Octopus.Client.Repositories.Async.ICertificateConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.ICertificateConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: ICertificateConfigurationRepository
  nameWithType: ICertificateConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.ICertificateConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.Certificates*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Certificates
  name: Certificates
  nameWithType: OctopusAsyncRepository.Certificates
  fullName: Octopus.Client.OctopusAsyncRepository.Certificates
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Certificates
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Certificates
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Certificates
  nameWithType: IOctopusSpaceAsyncRepository.Certificates
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Certificates
- uid: Octopus.Client.Repositories.Async.ICertificateRepository
  commentId: T:Octopus.Client.Repositories.Async.ICertificateRepository
  parent: Octopus.Client.Repositories.Async
  name: ICertificateRepository
  nameWithType: ICertificateRepository
  fullName: Octopus.Client.Repositories.Async.ICertificateRepository
- uid: Octopus.Client.OctopusAsyncRepository.Channels*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Channels
  name: Channels
  nameWithType: OctopusAsyncRepository.Channels
  fullName: Octopus.Client.OctopusAsyncRepository.Channels
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Channels
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Channels
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Channels
  nameWithType: IOctopusSpaceAsyncRepository.Channels
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Channels
- uid: Octopus.Client.Repositories.Async.IChannelRepository
  commentId: T:Octopus.Client.Repositories.Async.IChannelRepository
  parent: Octopus.Client.Repositories.Async
  name: IChannelRepository
  nameWithType: IChannelRepository
  fullName: Octopus.Client.Repositories.Async.IChannelRepository
- uid: Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
  name: CommunityActionTemplates
  nameWithType: OctopusAsyncRepository.CommunityActionTemplates
  fullName: Octopus.Client.OctopusAsyncRepository.CommunityActionTemplates
- uid: Octopus.Client.IOctopusCommonAsyncRepository.CommunityActionTemplates
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.CommunityActionTemplates
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: CommunityActionTemplates
  nameWithType: IOctopusCommonAsyncRepository.CommunityActionTemplates
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.CommunityActionTemplates
- uid: Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository
  commentId: T:Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository
  parent: Octopus.Client.Repositories.Async
  name: ICommunityActionTemplateRepository
  nameWithType: ICommunityActionTemplateRepository
  fullName: Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository
- uid: Octopus.Client.OctopusAsyncRepository.Configuration*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Configuration
  name: Configuration
  nameWithType: OctopusAsyncRepository.Configuration
  fullName: Octopus.Client.OctopusAsyncRepository.Configuration
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Configuration
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Configuration
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Configuration
  nameWithType: IOctopusSystemAsyncRepository.Configuration
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Configuration
- uid: Octopus.Client.Repositories.Async.IConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.IConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: IConfigurationRepository
  nameWithType: IConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.IConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.DashboardConfigurations*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
  name: DashboardConfigurations
  nameWithType: OctopusAsyncRepository.DashboardConfigurations
  fullName: Octopus.Client.OctopusAsyncRepository.DashboardConfigurations
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.DashboardConfigurations
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.DashboardConfigurations
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: DashboardConfigurations
  nameWithType: IOctopusSpaceAsyncRepository.DashboardConfigurations
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.DashboardConfigurations
- uid: Octopus.Client.Repositories.Async.IDashboardConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.IDashboardConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: IDashboardConfigurationRepository
  nameWithType: IDashboardConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.IDashboardConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.Dashboards*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Dashboards
  name: Dashboards
  nameWithType: OctopusAsyncRepository.Dashboards
  fullName: Octopus.Client.OctopusAsyncRepository.Dashboards
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Dashboards
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Dashboards
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Dashboards
  nameWithType: IOctopusSpaceAsyncRepository.Dashboards
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Dashboards
- uid: Octopus.Client.Repositories.Async.IDashboardRepository
  commentId: T:Octopus.Client.Repositories.Async.IDashboardRepository
  parent: Octopus.Client.Repositories.Async
  name: IDashboardRepository
  nameWithType: IDashboardRepository
  fullName: Octopus.Client.Repositories.Async.IDashboardRepository
- uid: Octopus.Client.OctopusAsyncRepository.Defects*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Defects
  name: Defects
  nameWithType: OctopusAsyncRepository.Defects
  fullName: Octopus.Client.OctopusAsyncRepository.Defects
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Defects
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Defects
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Defects
  nameWithType: IOctopusSpaceAsyncRepository.Defects
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Defects
- uid: Octopus.Client.Repositories.Async.IDefectsRepository
  commentId: T:Octopus.Client.Repositories.Async.IDefectsRepository
  parent: Octopus.Client.Repositories.Async
  name: IDefectsRepository
  nameWithType: IDefectsRepository
  fullName: Octopus.Client.Repositories.Async.IDefectsRepository
- uid: Octopus.Client.OctopusAsyncRepository.DeploymentProcesses*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
  name: DeploymentProcesses
  nameWithType: OctopusAsyncRepository.DeploymentProcesses
  fullName: Octopus.Client.OctopusAsyncRepository.DeploymentProcesses
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentProcesses
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentProcesses
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: DeploymentProcesses
  nameWithType: IOctopusSpaceAsyncRepository.DeploymentProcesses
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentProcesses
- uid: Octopus.Client.Repositories.Async.IDeploymentProcessRepository
  commentId: T:Octopus.Client.Repositories.Async.IDeploymentProcessRepository
  parent: Octopus.Client.Repositories.Async
  name: IDeploymentProcessRepository
  nameWithType: IDeploymentProcessRepository
  fullName: Octopus.Client.Repositories.Async.IDeploymentProcessRepository
- uid: Octopus.Client.OctopusAsyncRepository.DeploymentSettings*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.DeploymentSettings
  name: DeploymentSettings
  nameWithType: OctopusAsyncRepository.DeploymentSettings
  fullName: Octopus.Client.OctopusAsyncRepository.DeploymentSettings
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentSettings
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentSettings
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: DeploymentSettings
  nameWithType: IOctopusSpaceAsyncRepository.DeploymentSettings
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.DeploymentSettings
- uid: Octopus.Client.Repositories.Async.IDeploymentSettingsRepository
  commentId: T:Octopus.Client.Repositories.Async.IDeploymentSettingsRepository
  parent: Octopus.Client.Repositories.Async
  name: IDeploymentSettingsRepository
  nameWithType: IDeploymentSettingsRepository
  fullName: Octopus.Client.Repositories.Async.IDeploymentSettingsRepository
- uid: Octopus.Client.OctopusAsyncRepository.Deployments*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Deployments
  name: Deployments
  nameWithType: OctopusAsyncRepository.Deployments
  fullName: Octopus.Client.OctopusAsyncRepository.Deployments
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Deployments
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Deployments
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Deployments
  nameWithType: IOctopusSpaceAsyncRepository.Deployments
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Deployments
- uid: Octopus.Client.Repositories.Async.IDeploymentRepository
  commentId: T:Octopus.Client.Repositories.Async.IDeploymentRepository
  parent: Octopus.Client.Repositories.Async
  name: IDeploymentRepository
  nameWithType: IDeploymentRepository
  fullName: Octopus.Client.Repositories.Async.IDeploymentRepository
- uid: Octopus.Client.OctopusAsyncRepository.Environments*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Environments
  name: Environments
  nameWithType: OctopusAsyncRepository.Environments
  fullName: Octopus.Client.OctopusAsyncRepository.Environments
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Environments
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Environments
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Environments
  nameWithType: IOctopusSpaceAsyncRepository.Environments
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Environments
- uid: Octopus.Client.Repositories.Async.IEnvironmentRepository
  commentId: T:Octopus.Client.Repositories.Async.IEnvironmentRepository
  parent: Octopus.Client.Repositories.Async
  name: IEnvironmentRepository
  nameWithType: IEnvironmentRepository
  fullName: Octopus.Client.Repositories.Async.IEnvironmentRepository
- uid: Octopus.Client.OctopusAsyncRepository.Events*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Events
  name: Events
  nameWithType: OctopusAsyncRepository.Events
  fullName: Octopus.Client.OctopusAsyncRepository.Events
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Events
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.Events
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: Events
  nameWithType: IOctopusCommonAsyncRepository.Events
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Events
- uid: Octopus.Client.Repositories.Async.IEventRepository
  commentId: T:Octopus.Client.Repositories.Async.IEventRepository
  parent: Octopus.Client.Repositories.Async
  name: IEventRepository
  nameWithType: IEventRepository
  fullName: Octopus.Client.Repositories.Async.IEventRepository
- uid: Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
  name: FeaturesConfiguration
  nameWithType: OctopusAsyncRepository.FeaturesConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.FeaturesConfiguration
- uid: Octopus.Client.IOctopusSystemAsyncRepository.FeaturesConfiguration
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.FeaturesConfiguration
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: FeaturesConfiguration
  nameWithType: IOctopusSystemAsyncRepository.FeaturesConfiguration
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.FeaturesConfiguration
- uid: Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: IFeaturesConfigurationRepository
  nameWithType: IFeaturesConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.Feeds*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Feeds
  name: Feeds
  nameWithType: OctopusAsyncRepository.Feeds
  fullName: Octopus.Client.OctopusAsyncRepository.Feeds
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Feeds
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Feeds
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Feeds
  nameWithType: IOctopusSpaceAsyncRepository.Feeds
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Feeds
- uid: Octopus.Client.Repositories.Async.IFeedRepository
  commentId: T:Octopus.Client.Repositories.Async.IFeedRepository
  parent: Octopus.Client.Repositories.Async
  name: IFeedRepository
  nameWithType: IFeedRepository
  fullName: Octopus.Client.Repositories.Async.IFeedRepository
- uid: Octopus.Client.OctopusAsyncRepository.Interruptions*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Interruptions
  name: Interruptions
  nameWithType: OctopusAsyncRepository.Interruptions
  fullName: Octopus.Client.OctopusAsyncRepository.Interruptions
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Interruptions
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Interruptions
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Interruptions
  nameWithType: IOctopusSpaceAsyncRepository.Interruptions
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Interruptions
- uid: Octopus.Client.Repositories.Async.IInterruptionRepository
  commentId: T:Octopus.Client.Repositories.Async.IInterruptionRepository
  parent: Octopus.Client.Repositories.Async
  name: IInterruptionRepository
  nameWithType: IInterruptionRepository
  fullName: Octopus.Client.Repositories.Async.IInterruptionRepository
- uid: Octopus.Client.OctopusAsyncRepository.LibraryVariableSets*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
  name: LibraryVariableSets
  nameWithType: OctopusAsyncRepository.LibraryVariableSets
  fullName: Octopus.Client.OctopusAsyncRepository.LibraryVariableSets
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.LibraryVariableSets
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.LibraryVariableSets
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: LibraryVariableSets
  nameWithType: IOctopusSpaceAsyncRepository.LibraryVariableSets
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.LibraryVariableSets
- uid: Octopus.Client.Repositories.Async.ILibraryVariableSetRepository
  commentId: T:Octopus.Client.Repositories.Async.ILibraryVariableSetRepository
  parent: Octopus.Client.Repositories.Async
  name: ILibraryVariableSetRepository
  nameWithType: ILibraryVariableSetRepository
  fullName: Octopus.Client.Repositories.Async.ILibraryVariableSetRepository
- uid: Octopus.Client.OctopusAsyncRepository.Licenses*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Licenses
  name: Licenses
  nameWithType: OctopusAsyncRepository.Licenses
  fullName: Octopus.Client.OctopusAsyncRepository.Licenses
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Licenses
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Licenses
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Licenses
  nameWithType: IOctopusSystemAsyncRepository.Licenses
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Licenses
- uid: Octopus.Client.Repositories.Async.ILicensesRepository
  commentId: T:Octopus.Client.Repositories.Async.ILicensesRepository
  parent: Octopus.Client.Repositories.Async
  name: ILicensesRepository
  nameWithType: ILicensesRepository
  fullName: Octopus.Client.Repositories.Async.ILicensesRepository
- uid: Octopus.Client.OctopusAsyncRepository.Lifecycles*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Lifecycles
  name: Lifecycles
  nameWithType: OctopusAsyncRepository.Lifecycles
  fullName: Octopus.Client.OctopusAsyncRepository.Lifecycles
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Lifecycles
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Lifecycles
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Lifecycles
  nameWithType: IOctopusSpaceAsyncRepository.Lifecycles
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Lifecycles
- uid: Octopus.Client.Repositories.Async.ILifecyclesRepository
  commentId: T:Octopus.Client.Repositories.Async.ILifecyclesRepository
  parent: Octopus.Client.Repositories.Async
  name: ILifecyclesRepository
  nameWithType: ILifecyclesRepository
  fullName: Octopus.Client.Repositories.Async.ILifecyclesRepository
- uid: Octopus.Client.OctopusAsyncRepository.MachinePolicies*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.MachinePolicies
  name: MachinePolicies
  nameWithType: OctopusAsyncRepository.MachinePolicies
  fullName: Octopus.Client.OctopusAsyncRepository.MachinePolicies
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.MachinePolicies
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.MachinePolicies
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: MachinePolicies
  nameWithType: IOctopusSpaceAsyncRepository.MachinePolicies
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.MachinePolicies
- uid: Octopus.Client.Repositories.Async.IMachinePolicyRepository
  commentId: T:Octopus.Client.Repositories.Async.IMachinePolicyRepository
  parent: Octopus.Client.Repositories.Async
  name: IMachinePolicyRepository
  nameWithType: IMachinePolicyRepository
  fullName: Octopus.Client.Repositories.Async.IMachinePolicyRepository
- uid: Octopus.Client.OctopusAsyncRepository.Machines*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Machines
  name: Machines
  nameWithType: OctopusAsyncRepository.Machines
  fullName: Octopus.Client.OctopusAsyncRepository.Machines
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Machines
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Machines
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Machines
  nameWithType: IOctopusSpaceAsyncRepository.Machines
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Machines
- uid: Octopus.Client.Repositories.Async.IMachineRepository
  commentId: T:Octopus.Client.Repositories.Async.IMachineRepository
  parent: Octopus.Client.Repositories.Async
  name: IMachineRepository
  nameWithType: IMachineRepository
  fullName: Octopus.Client.Repositories.Async.IMachineRepository
- uid: Octopus.Client.OctopusAsyncRepository.MachineRoles*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.MachineRoles
  name: MachineRoles
  nameWithType: OctopusAsyncRepository.MachineRoles
  fullName: Octopus.Client.OctopusAsyncRepository.MachineRoles
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.MachineRoles
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.MachineRoles
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: MachineRoles
  nameWithType: IOctopusSpaceAsyncRepository.MachineRoles
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.MachineRoles
- uid: Octopus.Client.Repositories.Async.IMachineRoleRepository
  commentId: T:Octopus.Client.Repositories.Async.IMachineRoleRepository
  parent: Octopus.Client.Repositories.Async
  name: IMachineRoleRepository
  nameWithType: IMachineRoleRepository
  fullName: Octopus.Client.Repositories.Async.IMachineRoleRepository
- uid: Octopus.Client.OctopusAsyncRepository.Migrations*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Migrations
  name: Migrations
  nameWithType: OctopusAsyncRepository.Migrations
  fullName: Octopus.Client.OctopusAsyncRepository.Migrations
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Migrations
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Migrations
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Migrations
  nameWithType: IOctopusSystemAsyncRepository.Migrations
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Migrations
- uid: Octopus.Client.Repositories.Async.IMigrationRepository
  commentId: T:Octopus.Client.Repositories.Async.IMigrationRepository
  parent: Octopus.Client.Repositories.Async
  name: IMigrationRepository
  nameWithType: IMigrationRepository
  fullName: Octopus.Client.Repositories.Async.IMigrationRepository
- uid: Octopus.Client.OctopusAsyncRepository.OctopusServerNodes*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
  name: OctopusServerNodes
  nameWithType: OctopusAsyncRepository.OctopusServerNodes
  fullName: Octopus.Client.OctopusAsyncRepository.OctopusServerNodes
- uid: Octopus.Client.IOctopusSystemAsyncRepository.OctopusServerNodes
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.OctopusServerNodes
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: OctopusServerNodes
  nameWithType: IOctopusSystemAsyncRepository.OctopusServerNodes
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.OctopusServerNodes
- uid: Octopus.Client.Repositories.Async.IOctopusServerNodeRepository
  commentId: T:Octopus.Client.Repositories.Async.IOctopusServerNodeRepository
  parent: Octopus.Client.Repositories.Async
  name: IOctopusServerNodeRepository
  nameWithType: IOctopusServerNodeRepository
  fullName: Octopus.Client.Repositories.Async.IOctopusServerNodeRepository
- uid: Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
  name: PerformanceConfiguration
  nameWithType: OctopusAsyncRepository.PerformanceConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.PerformanceConfiguration
- uid: Octopus.Client.IOctopusSystemAsyncRepository.PerformanceConfiguration
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.PerformanceConfiguration
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: PerformanceConfiguration
  nameWithType: IOctopusSystemAsyncRepository.PerformanceConfiguration
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.PerformanceConfiguration
- uid: Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: IPerformanceConfigurationRepository
  nameWithType: IPerformanceConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
  name: PackageMetadataRepository
  nameWithType: OctopusAsyncRepository.PackageMetadataRepository
  fullName: Octopus.Client.OctopusAsyncRepository.PackageMetadataRepository
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.PackageMetadataRepository
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.PackageMetadataRepository
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: PackageMetadataRepository
  nameWithType: IOctopusSpaceAsyncRepository.PackageMetadataRepository
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.PackageMetadataRepository
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  commentId: T:Octopus.Client.Repositories.Async.IPackageMetadataRepository
  parent: Octopus.Client.Repositories.Async
  name: IPackageMetadataRepository
  nameWithType: IPackageMetadataRepository
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository
- uid: Octopus.Client.OctopusAsyncRepository.ProjectGroups*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.ProjectGroups
  name: ProjectGroups
  nameWithType: OctopusAsyncRepository.ProjectGroups
  fullName: Octopus.Client.OctopusAsyncRepository.ProjectGroups
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.ProjectGroups
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.ProjectGroups
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: ProjectGroups
  nameWithType: IOctopusSpaceAsyncRepository.ProjectGroups
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.ProjectGroups
- uid: Octopus.Client.Repositories.Async.IProjectGroupRepository
  commentId: T:Octopus.Client.Repositories.Async.IProjectGroupRepository
  parent: Octopus.Client.Repositories.Async
  name: IProjectGroupRepository
  nameWithType: IProjectGroupRepository
  fullName: Octopus.Client.Repositories.Async.IProjectGroupRepository
- uid: Octopus.Client.OctopusAsyncRepository.Projects*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Projects
  name: Projects
  nameWithType: OctopusAsyncRepository.Projects
  fullName: Octopus.Client.OctopusAsyncRepository.Projects
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Projects
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Projects
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Projects
  nameWithType: IOctopusSpaceAsyncRepository.Projects
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Projects
- uid: Octopus.Client.Repositories.Async.IProjectRepository
  commentId: T:Octopus.Client.Repositories.Async.IProjectRepository
  parent: Octopus.Client.Repositories.Async
  name: IProjectRepository
  nameWithType: IProjectRepository
  fullName: Octopus.Client.Repositories.Async.IProjectRepository
- uid: Octopus.Client.OctopusAsyncRepository.Runbooks*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Runbooks
  name: Runbooks
  nameWithType: OctopusAsyncRepository.Runbooks
  fullName: Octopus.Client.OctopusAsyncRepository.Runbooks
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Runbooks
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Runbooks
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Runbooks
  nameWithType: IOctopusSpaceAsyncRepository.Runbooks
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Runbooks
- uid: Octopus.Client.Repositories.Async.IRunbookRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookRepository
  parent: Octopus.Client.Repositories.Async
  name: IRunbookRepository
  nameWithType: IRunbookRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookRepository
- uid: Octopus.Client.OctopusAsyncRepository.RunbookProcesses*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.RunbookProcesses
  name: RunbookProcesses
  nameWithType: OctopusAsyncRepository.RunbookProcesses
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookProcesses
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookProcesses
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.RunbookProcesses
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: RunbookProcesses
  nameWithType: IOctopusSpaceAsyncRepository.RunbookProcesses
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookProcesses
- uid: Octopus.Client.Repositories.Async.IRunbookProcessRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookProcessRepository
  parent: Octopus.Client.Repositories.Async
  name: IRunbookProcessRepository
  nameWithType: IRunbookProcessRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookProcessRepository
- uid: Octopus.Client.OctopusAsyncRepository.RunbookSnapshots*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
  name: RunbookSnapshots
  nameWithType: OctopusAsyncRepository.RunbookSnapshots
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookSnapshots
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookSnapshots
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.RunbookSnapshots
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: RunbookSnapshots
  nameWithType: IOctopusSpaceAsyncRepository.RunbookSnapshots
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookSnapshots
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  parent: Octopus.Client.Repositories.Async
  name: IRunbookSnapshotRepository
  nameWithType: IRunbookSnapshotRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
- uid: Octopus.Client.OctopusAsyncRepository.RunbookRuns*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.RunbookRuns
  name: RunbookRuns
  nameWithType: OctopusAsyncRepository.RunbookRuns
  fullName: Octopus.Client.OctopusAsyncRepository.RunbookRuns
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookRuns
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.RunbookRuns
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: RunbookRuns
  nameWithType: IOctopusSpaceAsyncRepository.RunbookRuns
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.RunbookRuns
- uid: Octopus.Client.Repositories.Async.IRunbookRunRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookRunRepository
  parent: Octopus.Client.Repositories.Async
  name: IRunbookRunRepository
  nameWithType: IRunbookRunRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookRunRepository
- uid: Octopus.Client.OctopusAsyncRepository.ProjectTriggers*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.ProjectTriggers
  name: ProjectTriggers
  nameWithType: OctopusAsyncRepository.ProjectTriggers
  fullName: Octopus.Client.OctopusAsyncRepository.ProjectTriggers
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.ProjectTriggers
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.ProjectTriggers
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: ProjectTriggers
  nameWithType: IOctopusSpaceAsyncRepository.ProjectTriggers
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.ProjectTriggers
- uid: Octopus.Client.Repositories.Async.IProjectTriggerRepository
  commentId: T:Octopus.Client.Repositories.Async.IProjectTriggerRepository
  parent: Octopus.Client.Repositories.Async
  name: IProjectTriggerRepository
  nameWithType: IProjectTriggerRepository
  fullName: Octopus.Client.Repositories.Async.IProjectTriggerRepository
- uid: Octopus.Client.OctopusAsyncRepository.Proxies*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Proxies
  name: Proxies
  nameWithType: OctopusAsyncRepository.Proxies
  fullName: Octopus.Client.OctopusAsyncRepository.Proxies
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Proxies
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Proxies
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Proxies
  nameWithType: IOctopusSpaceAsyncRepository.Proxies
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Proxies
- uid: Octopus.Client.Repositories.Async.IProxyRepository
  commentId: T:Octopus.Client.Repositories.Async.IProxyRepository
  parent: Octopus.Client.Repositories.Async
  name: IProxyRepository
  nameWithType: IProxyRepository
  fullName: Octopus.Client.Repositories.Async.IProxyRepository
- uid: Octopus.Client.OctopusAsyncRepository.Releases*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Releases
  name: Releases
  nameWithType: OctopusAsyncRepository.Releases
  fullName: Octopus.Client.OctopusAsyncRepository.Releases
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Releases
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Releases
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Releases
  nameWithType: IOctopusSpaceAsyncRepository.Releases
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Releases
- uid: Octopus.Client.Repositories.Async.IReleaseRepository
  commentId: T:Octopus.Client.Repositories.Async.IReleaseRepository
  parent: Octopus.Client.Repositories.Async
  name: IReleaseRepository
  nameWithType: IReleaseRepository
  fullName: Octopus.Client.Repositories.Async.IReleaseRepository
- uid: Octopus.Client.OctopusAsyncRepository.RetentionPolicies*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.RetentionPolicies
  name: RetentionPolicies
  nameWithType: OctopusAsyncRepository.RetentionPolicies
  fullName: Octopus.Client.OctopusAsyncRepository.RetentionPolicies
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.RetentionPolicies
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.RetentionPolicies
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: RetentionPolicies
  nameWithType: IOctopusSpaceAsyncRepository.RetentionPolicies
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.RetentionPolicies
- uid: Octopus.Client.Repositories.Async.IRetentionPolicyRepository
  commentId: T:Octopus.Client.Repositories.Async.IRetentionPolicyRepository
  parent: Octopus.Client.Repositories.Async
  name: IRetentionPolicyRepository
  nameWithType: IRetentionPolicyRepository
  fullName: Octopus.Client.Repositories.Async.IRetentionPolicyRepository
- uid: Octopus.Client.OctopusAsyncRepository.Schedulers*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Schedulers
  name: Schedulers
  nameWithType: OctopusAsyncRepository.Schedulers
  fullName: Octopus.Client.OctopusAsyncRepository.Schedulers
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Schedulers
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Schedulers
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Schedulers
  nameWithType: IOctopusSystemAsyncRepository.Schedulers
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Schedulers
- uid: Octopus.Client.Repositories.Async.ISchedulerRepository
  commentId: T:Octopus.Client.Repositories.Async.ISchedulerRepository
  parent: Octopus.Client.Repositories.Async
  name: ISchedulerRepository
  nameWithType: ISchedulerRepository
  fullName: Octopus.Client.Repositories.Async.ISchedulerRepository
- uid: Octopus.Client.OctopusAsyncRepository.ServerStatus*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.ServerStatus
  name: ServerStatus
  nameWithType: OctopusAsyncRepository.ServerStatus
  fullName: Octopus.Client.OctopusAsyncRepository.ServerStatus
- uid: Octopus.Client.IOctopusSystemAsyncRepository.ServerStatus
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.ServerStatus
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: ServerStatus
  nameWithType: IOctopusSystemAsyncRepository.ServerStatus
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.ServerStatus
- uid: Octopus.Client.Repositories.Async.IServerStatusRepository
  commentId: T:Octopus.Client.Repositories.Async.IServerStatusRepository
  parent: Octopus.Client.Repositories.Async
  name: IServerStatusRepository
  nameWithType: IServerStatusRepository
  fullName: Octopus.Client.Repositories.Async.IServerStatusRepository
- uid: Octopus.Client.OctopusAsyncRepository.Spaces*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Spaces
  name: Spaces
  nameWithType: OctopusAsyncRepository.Spaces
  fullName: Octopus.Client.OctopusAsyncRepository.Spaces
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Spaces
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Spaces
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Spaces
  nameWithType: IOctopusSystemAsyncRepository.Spaces
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Spaces
- uid: Octopus.Client.Repositories.Async.ISpaceRepository
  commentId: T:Octopus.Client.Repositories.Async.ISpaceRepository
  parent: Octopus.Client.Repositories.Async
  name: ISpaceRepository
  nameWithType: ISpaceRepository
  fullName: Octopus.Client.Repositories.Async.ISpaceRepository
- uid: Octopus.Client.OctopusAsyncRepository.Subscriptions*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Subscriptions
  name: Subscriptions
  nameWithType: OctopusAsyncRepository.Subscriptions
  fullName: Octopus.Client.OctopusAsyncRepository.Subscriptions
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Subscriptions
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Subscriptions
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Subscriptions
  nameWithType: IOctopusSpaceAsyncRepository.Subscriptions
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Subscriptions
- uid: Octopus.Client.Repositories.Async.ISubscriptionRepository
  commentId: T:Octopus.Client.Repositories.Async.ISubscriptionRepository
  parent: Octopus.Client.Repositories.Async
  name: ISubscriptionRepository
  nameWithType: ISubscriptionRepository
  fullName: Octopus.Client.Repositories.Async.ISubscriptionRepository
- uid: Octopus.Client.OctopusAsyncRepository.TagSets*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.TagSets
  name: TagSets
  nameWithType: OctopusAsyncRepository.TagSets
  fullName: Octopus.Client.OctopusAsyncRepository.TagSets
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.TagSets
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.TagSets
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: TagSets
  nameWithType: IOctopusSpaceAsyncRepository.TagSets
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.TagSets
- uid: Octopus.Client.Repositories.Async.ITagSetRepository
  commentId: T:Octopus.Client.Repositories.Async.ITagSetRepository
  parent: Octopus.Client.Repositories.Async
  name: ITagSetRepository
  nameWithType: ITagSetRepository
  fullName: Octopus.Client.Repositories.Async.ITagSetRepository
- uid: Octopus.Client.OctopusAsyncRepository.Tasks*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Tasks
  name: Tasks
  nameWithType: OctopusAsyncRepository.Tasks
  fullName: Octopus.Client.OctopusAsyncRepository.Tasks
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Tasks
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.Tasks
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: Tasks
  nameWithType: IOctopusCommonAsyncRepository.Tasks
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Tasks
- uid: Octopus.Client.Repositories.Async.ITaskRepository
  commentId: T:Octopus.Client.Repositories.Async.ITaskRepository
  parent: Octopus.Client.Repositories.Async
  name: ITaskRepository
  nameWithType: ITaskRepository
  fullName: Octopus.Client.Repositories.Async.ITaskRepository
- uid: Octopus.Client.OctopusAsyncRepository.Teams*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Teams
  name: Teams
  nameWithType: OctopusAsyncRepository.Teams
  fullName: Octopus.Client.OctopusAsyncRepository.Teams
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Teams
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.Teams
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: Teams
  nameWithType: IOctopusCommonAsyncRepository.Teams
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Teams
- uid: Octopus.Client.Repositories.Async.ITeamsRepository
  commentId: T:Octopus.Client.Repositories.Async.ITeamsRepository
  parent: Octopus.Client.Repositories.Async
  name: ITeamsRepository
  nameWithType: ITeamsRepository
  fullName: Octopus.Client.Repositories.Async.ITeamsRepository
- uid: Octopus.Client.OctopusAsyncRepository.Tenants*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Tenants
  name: Tenants
  nameWithType: OctopusAsyncRepository.Tenants
  fullName: Octopus.Client.OctopusAsyncRepository.Tenants
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Tenants
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Tenants
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Tenants
  nameWithType: IOctopusSpaceAsyncRepository.Tenants
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Tenants
- uid: Octopus.Client.Repositories.Async.ITenantRepository
  commentId: T:Octopus.Client.Repositories.Async.ITenantRepository
  parent: Octopus.Client.Repositories.Async
  name: ITenantRepository
  nameWithType: ITenantRepository
  fullName: Octopus.Client.Repositories.Async.ITenantRepository
- uid: Octopus.Client.OctopusAsyncRepository.TenantVariables*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.TenantVariables
  name: TenantVariables
  nameWithType: OctopusAsyncRepository.TenantVariables
  fullName: Octopus.Client.OctopusAsyncRepository.TenantVariables
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.TenantVariables
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.TenantVariables
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: TenantVariables
  nameWithType: IOctopusSpaceAsyncRepository.TenantVariables
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.TenantVariables
- uid: Octopus.Client.Repositories.Async.ITenantVariablesRepository
  commentId: T:Octopus.Client.Repositories.Async.ITenantVariablesRepository
  parent: Octopus.Client.Repositories.Async
  name: ITenantVariablesRepository
  nameWithType: ITenantVariablesRepository
  fullName: Octopus.Client.Repositories.Async.ITenantVariablesRepository
- uid: Octopus.Client.OctopusAsyncRepository.UserInvites*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.UserInvites
  name: UserInvites
  nameWithType: OctopusAsyncRepository.UserInvites
  fullName: Octopus.Client.OctopusAsyncRepository.UserInvites
- uid: Octopus.Client.IOctopusCommonAsyncRepository.UserInvites
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.UserInvites
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: UserInvites
  nameWithType: IOctopusCommonAsyncRepository.UserInvites
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.UserInvites
- uid: Octopus.Client.Repositories.Async.IUserInvitesRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserInvitesRepository
  parent: Octopus.Client.Repositories.Async
  name: IUserInvitesRepository
  nameWithType: IUserInvitesRepository
  fullName: Octopus.Client.Repositories.Async.IUserInvitesRepository
- uid: Octopus.Client.OctopusAsyncRepository.Users*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Users
  name: Users
  nameWithType: OctopusAsyncRepository.Users
  fullName: Octopus.Client.OctopusAsyncRepository.Users
- uid: Octopus.Client.IOctopusSystemAsyncRepository.Users
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.Users
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: Users
  nameWithType: IOctopusSystemAsyncRepository.Users
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.Users
- uid: Octopus.Client.Repositories.Async.IUserRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserRepository
  parent: Octopus.Client.Repositories.Async
  name: IUserRepository
  nameWithType: IUserRepository
  fullName: Octopus.Client.Repositories.Async.IUserRepository
- uid: Octopus.Client.OctopusAsyncRepository.UserRoles*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.UserRoles
  name: UserRoles
  nameWithType: OctopusAsyncRepository.UserRoles
  fullName: Octopus.Client.OctopusAsyncRepository.UserRoles
- uid: Octopus.Client.IOctopusSystemAsyncRepository.UserRoles
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.UserRoles
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: UserRoles
  nameWithType: IOctopusSystemAsyncRepository.UserRoles
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.UserRoles
- uid: Octopus.Client.Repositories.Async.IUserRolesRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserRolesRepository
  parent: Octopus.Client.Repositories.Async
  name: IUserRolesRepository
  nameWithType: IUserRolesRepository
  fullName: Octopus.Client.Repositories.Async.IUserRolesRepository
- uid: Octopus.Client.OctopusAsyncRepository.VariableSets*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.VariableSets
  name: VariableSets
  nameWithType: OctopusAsyncRepository.VariableSets
  fullName: Octopus.Client.OctopusAsyncRepository.VariableSets
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.VariableSets
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.VariableSets
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: VariableSets
  nameWithType: IOctopusSpaceAsyncRepository.VariableSets
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.VariableSets
- uid: Octopus.Client.Repositories.Async.IVariableSetRepository
  commentId: T:Octopus.Client.Repositories.Async.IVariableSetRepository
  parent: Octopus.Client.Repositories.Async
  name: IVariableSetRepository
  nameWithType: IVariableSetRepository
  fullName: Octopus.Client.Repositories.Async.IVariableSetRepository
- uid: Octopus.Client.OctopusAsyncRepository.WorkerPools*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.WorkerPools
  name: WorkerPools
  nameWithType: OctopusAsyncRepository.WorkerPools
  fullName: Octopus.Client.OctopusAsyncRepository.WorkerPools
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.WorkerPools
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.WorkerPools
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: WorkerPools
  nameWithType: IOctopusSpaceAsyncRepository.WorkerPools
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.WorkerPools
- uid: Octopus.Client.Repositories.Async.IWorkerPoolRepository
  commentId: T:Octopus.Client.Repositories.Async.IWorkerPoolRepository
  parent: Octopus.Client.Repositories.Async
  name: IWorkerPoolRepository
  nameWithType: IWorkerPoolRepository
  fullName: Octopus.Client.Repositories.Async.IWorkerPoolRepository
- uid: Octopus.Client.OctopusAsyncRepository.Workers*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Workers
  name: Workers
  nameWithType: OctopusAsyncRepository.Workers
  fullName: Octopus.Client.OctopusAsyncRepository.Workers
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.Workers
  commentId: P:Octopus.Client.IOctopusSpaceAsyncRepository.Workers
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: Workers
  nameWithType: IOctopusSpaceAsyncRepository.Workers
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.Workers
- uid: Octopus.Client.Repositories.Async.IWorkerRepository
  commentId: T:Octopus.Client.Repositories.Async.IWorkerRepository
  parent: Octopus.Client.Repositories.Async
  name: IWorkerRepository
  nameWithType: IWorkerRepository
  fullName: Octopus.Client.Repositories.Async.IWorkerRepository
- uid: Octopus.Client.OctopusAsyncRepository.ScopedUserRoles*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
  name: ScopedUserRoles
  nameWithType: OctopusAsyncRepository.ScopedUserRoles
  fullName: Octopus.Client.OctopusAsyncRepository.ScopedUserRoles
- uid: Octopus.Client.IOctopusCommonAsyncRepository.ScopedUserRoles
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.ScopedUserRoles
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: ScopedUserRoles
  nameWithType: IOctopusCommonAsyncRepository.ScopedUserRoles
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.ScopedUserRoles
- uid: Octopus.Client.Repositories.Async.IScopedUserRoleRepository
  commentId: T:Octopus.Client.Repositories.Async.IScopedUserRoleRepository
  parent: Octopus.Client.Repositories.Async
  name: IScopedUserRoleRepository
  nameWithType: IScopedUserRoleRepository
  fullName: Octopus.Client.Repositories.Async.IScopedUserRoleRepository
- uid: Octopus.Client.OctopusAsyncRepository.UserPermissions*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.UserPermissions
  name: UserPermissions
  nameWithType: OctopusAsyncRepository.UserPermissions
  fullName: Octopus.Client.OctopusAsyncRepository.UserPermissions
- uid: Octopus.Client.IOctopusCommonAsyncRepository.UserPermissions
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.UserPermissions
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: UserPermissions
  nameWithType: IOctopusCommonAsyncRepository.UserPermissions
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.UserPermissions
- uid: Octopus.Client.Repositories.Async.IUserPermissionsRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserPermissionsRepository
  parent: Octopus.Client.Repositories.Async
  name: IUserPermissionsRepository
  nameWithType: IUserPermissionsRepository
  fullName: Octopus.Client.Repositories.Async.IUserPermissionsRepository
- uid: Octopus.Client.OctopusAsyncRepository.UserTeams*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.UserTeams
  name: UserTeams
  nameWithType: OctopusAsyncRepository.UserTeams
  fullName: Octopus.Client.OctopusAsyncRepository.UserTeams
- uid: Octopus.Client.IOctopusCommonAsyncRepository.UserTeams
  commentId: P:Octopus.Client.IOctopusCommonAsyncRepository.UserTeams
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  name: UserTeams
  nameWithType: IOctopusCommonAsyncRepository.UserTeams
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.UserTeams
- uid: Octopus.Client.Repositories.Async.IUserTeamsRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserTeamsRepository
  parent: Octopus.Client.Repositories.Async
  name: IUserTeamsRepository
  nameWithType: IUserTeamsRepository
  fullName: Octopus.Client.Repositories.Async.IUserTeamsRepository
- uid: Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
  name: UpgradeConfiguration
  nameWithType: OctopusAsyncRepository.UpgradeConfiguration
  fullName: Octopus.Client.OctopusAsyncRepository.UpgradeConfiguration
- uid: Octopus.Client.IOctopusSystemAsyncRepository.UpgradeConfiguration
  commentId: P:Octopus.Client.IOctopusSystemAsyncRepository.UpgradeConfiguration
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: UpgradeConfiguration
  nameWithType: IOctopusSystemAsyncRepository.UpgradeConfiguration
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.UpgradeConfiguration
- uid: Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository
  commentId: T:Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository
  parent: Octopus.Client.Repositories.Async
  name: IUpgradeConfigurationRepository
  nameWithType: IUpgradeConfigurationRepository
  fullName: Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository
- uid: Octopus.Client.OctopusAsyncRepository.HasLink*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.HasLink
  name: HasLink
  nameWithType: OctopusAsyncRepository.HasLink
  fullName: Octopus.Client.OctopusAsyncRepository.HasLink
- uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
  commentId: M:Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  isExternal: true
  name: HasLink(String)
  nameWithType: IOctopusCommonAsyncRepository.HasLink(String)
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
    name: HasLink
    nameWithType: IOctopusCommonAsyncRepository.HasLink
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLink(System.String)
    name: HasLink
    nameWithType: IOctopusCommonAsyncRepository.HasLink
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.OctopusAsyncRepository.HasLinkParameter*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.HasLinkParameter
  name: HasLinkParameter
  nameWithType: OctopusAsyncRepository.HasLinkParameter
  fullName: Octopus.Client.OctopusAsyncRepository.HasLinkParameter
- uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String,System.String)
  commentId: M:Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String,System.String)
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  isExternal: true
  name: HasLinkParameter(String, String)
  nameWithType: IOctopusCommonAsyncRepository.HasLinkParameter(String, String)
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String, System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String,System.String)
    name: HasLinkParameter
    nameWithType: IOctopusCommonAsyncRepository.HasLinkParameter
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter(System.String,System.String)
    name: HasLinkParameter
    nameWithType: IOctopusCommonAsyncRepository.HasLinkParameter
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.HasLinkParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncRepository.Link*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.Link
  name: Link
  nameWithType: OctopusAsyncRepository.Link
  fullName: Octopus.Client.OctopusAsyncRepository.Link
- uid: Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
  commentId: M:Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
  parent: Octopus.Client.IOctopusCommonAsyncRepository
  isExternal: true
  name: Link(String)
  nameWithType: IOctopusCommonAsyncRepository.Link(String)
  fullName: Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
    name: Link
    nameWithType: IOctopusCommonAsyncRepository.Link
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusCommonAsyncRepository.Link(System.String)
    name: Link
    nameWithType: IOctopusCommonAsyncRepository.Link
    fullName: Octopus.Client.IOctopusCommonAsyncRepository.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncRepository.LoadRootDocument*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.LoadRootDocument
  name: LoadRootDocument
  nameWithType: OctopusAsyncRepository.LoadRootDocument
  fullName: Octopus.Client.OctopusAsyncRepository.LoadRootDocument
- uid: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
  commentId: M:Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
  parent: Octopus.Client.IOctopusSystemAsyncRepository
  name: LoadRootDocument()
  nameWithType: IOctopusSystemAsyncRepository.LoadRootDocument()
  fullName: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument()
  spec.csharp:
  - uid: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
    name: LoadRootDocument
    nameWithType: IOctopusSystemAsyncRepository.LoadRootDocument
    fullName: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
    name: LoadRootDocument
    nameWithType: IOctopusSystemAsyncRepository.LoadRootDocument
    fullName: Octopus.Client.IOctopusSystemAsyncRepository.LoadRootDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.RootResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.RootResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RootResource>
  nameWithType: Task<RootResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.RootResource>
  nameWithType.vb: Task(Of RootResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.RootResource)
  name.vb: Task(Of RootResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RootResource
    name: RootResource
    nameWithType: RootResource
    fullName: Octopus.Client.Model.RootResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RootResource
    name: RootResource
    nameWithType: RootResource
    fullName: Octopus.Client.Model.RootResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument*
  commentId: Overload:Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument
  name: LoadSpaceRootDocument
  nameWithType: OctopusAsyncRepository.LoadSpaceRootDocument
  fullName: Octopus.Client.OctopusAsyncRepository.LoadSpaceRootDocument
- uid: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
  commentId: M:Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
  parent: Octopus.Client.IOctopusSpaceAsyncRepository
  name: LoadSpaceRootDocument()
  nameWithType: IOctopusSpaceAsyncRepository.LoadSpaceRootDocument()
  fullName: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument()
  spec.csharp:
  - uid: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
    name: LoadSpaceRootDocument
    nameWithType: IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
    fullName: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
    name: LoadSpaceRootDocument
    nameWithType: IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
    fullName: Octopus.Client.IOctopusSpaceAsyncRepository.LoadSpaceRootDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.SpaceRootResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.SpaceRootResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SpaceRootResource>
  nameWithType: Task<SpaceRootResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.SpaceRootResource>
  nameWithType.vb: Task(Of SpaceRootResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.SpaceRootResource)
  name.vb: Task(Of SpaceRootResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceRootResource
    name: SpaceRootResource
    nameWithType: SpaceRootResource
    fullName: Octopus.Client.Model.SpaceRootResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceRootResource
    name: SpaceRootResource
    nameWithType: SpaceRootResource
    fullName: Octopus.Client.Model.SpaceRootResource
  - name: )
    nameWithType: )
    fullName: )
