### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.PermissionScope
  commentId: T:Octopus.Client.Model.PermissionScope
  id: PermissionScope
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.PermissionScope.Environments
  - Octopus.Client.Model.PermissionScope.ProjectGroups
  - Octopus.Client.Model.PermissionScope.Projects
  - Octopus.Client.Model.PermissionScope.Tenants
  langs:
  - csharp
  - vb
  name: PermissionScope
  nameWithType: PermissionScope
  fullName: Octopus.Client.Model.PermissionScope
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/PermissionScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PermissionScope
    path: ../source/Octopus.Client/Model/PermissionScope.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static class PermissionScope
    content.vb: Public Module PermissionScope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Octopus.Client.Model.PermissionScope.Environments
  commentId: F:Octopus.Client.Model.PermissionScope.Environments
  id: Environments
  parent: Octopus.Client.Model.PermissionScope
  langs:
  - csharp
  - vb
  name: Environments
  nameWithType: PermissionScope.Environments
  fullName: Octopus.Client.Model.PermissionScope.Environments
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/PermissionScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Environments
    path: ../source/Octopus.Client/Model/PermissionScope.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Environments = "environments"
    return:
      type: System.String
    content.vb: Public Const Environments As String = "environments"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.PermissionScope.Projects
  commentId: F:Octopus.Client.Model.PermissionScope.Projects
  id: Projects
  parent: Octopus.Client.Model.PermissionScope
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: PermissionScope.Projects
  fullName: Octopus.Client.Model.PermissionScope.Projects
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/PermissionScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Projects
    path: ../source/Octopus.Client/Model/PermissionScope.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Projects = "projects"
    return:
      type: System.String
    content.vb: Public Const Projects As String = "projects"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.PermissionScope.ProjectGroups
  commentId: F:Octopus.Client.Model.PermissionScope.ProjectGroups
  id: ProjectGroups
  parent: Octopus.Client.Model.PermissionScope
  langs:
  - csharp
  - vb
  name: ProjectGroups
  nameWithType: PermissionScope.ProjectGroups
  fullName: Octopus.Client.Model.PermissionScope.ProjectGroups
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/PermissionScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectGroups
    path: ../source/Octopus.Client/Model/PermissionScope.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string ProjectGroups = "projectgroups"
    return:
      type: System.String
    content.vb: Public Const ProjectGroups As String = "projectgroups"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.PermissionScope.Tenants
  commentId: F:Octopus.Client.Model.PermissionScope.Tenants
  id: Tenants
  parent: Octopus.Client.Model.PermissionScope
  langs:
  - csharp
  - vb
  name: Tenants
  nameWithType: PermissionScope.Tenants
  fullName: Octopus.Client.Model.PermissionScope.Tenants
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/PermissionScope.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Tenants
    path: ../source/Octopus.Client/Model/PermissionScope.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Tenants = "tenants"
    return:
      type: System.String
    content.vb: Public Const Tenants As String = "tenants"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
