### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.InterruptionResource
  commentId: T:Octopus.Client.Model.InterruptionResource
  id: InterruptionResource
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
  - Octopus.Client.Model.InterruptionResource.CorrelationId
  - Octopus.Client.Model.InterruptionResource.Created
  - Octopus.Client.Model.InterruptionResource.Form
  - Octopus.Client.Model.InterruptionResource.HasResponsibility
  - Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
  - Octopus.Client.Model.InterruptionResource.IsPending
  - Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
  - Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
  - Octopus.Client.Model.InterruptionResource.ResponsibleUserId
  - Octopus.Client.Model.InterruptionResource.SpaceId
  - Octopus.Client.Model.InterruptionResource.TaskId
  - Octopus.Client.Model.InterruptionResource.Title
  langs:
  - csharp
  - vb
  name: InterruptionResource
  nameWithType: InterruptionResource
  fullName: Octopus.Client.Model.InterruptionResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: InterruptionResource
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nAn interruption is a request by a process running in the Octopus Server for\nuser action or input.\n"
  example: []
  syntax:
    content: 'public class InterruptionResource : Resource, IResource, IAuditedResource, IHaveSpaceResource'
    content.vb: >-
      Public Class InterruptionResource
          Inherits Resource
          Implements IResource, IAuditedResource, IHaveSpaceResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  - Octopus.Client.Extensibility.IHaveSpaceResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.InterruptionResource.Title
  commentId: P:Octopus.Client.Model.InterruptionResource.Title
  id: Title
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: InterruptionResource.Title
  fullName: Octopus.Client.Model.InterruptionResource.Title
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Title
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets a title for this interruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 2)]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=2)>

      Public Property Title As String
  overload: Octopus.Client.Model.InterruptionResource.Title*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.Created
  commentId: P:Octopus.Client.Model.InterruptionResource.Created
  id: Created
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: InterruptionResource.Created
  fullName: Octopus.Client.Model.InterruptionResource.Created
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Created
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets the time at which the interruption was created.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 5)]

      public DateTimeOffset Created { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: >-
      <JsonProperty(Order:=5)>

      Public Property Created As DateTimeOffset
  overload: Octopus.Client.Model.InterruptionResource.Created*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.IsPending
  commentId: P:Octopus.Client.Model.InterruptionResource.IsPending
  id: IsPending
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: IsPending
  nameWithType: InterruptionResource.IsPending
  fullName: Octopus.Client.Model.InterruptionResource.IsPending
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsPending
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 28
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nTrue if the interruption is waiting for user action; otherwise, false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 10)]

      public bool IsPending { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(Order:=10)>

      Public Property IsPending As Boolean
  overload: Octopus.Client.Model.InterruptionResource.IsPending*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 10
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.Form
  commentId: P:Octopus.Client.Model.InterruptionResource.Form
  id: Form
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: Form
  nameWithType: InterruptionResource.Form
  fullName: Octopus.Client.Model.InterruptionResource.Form
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Form
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets the form requesting user input.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 15)]

      public Form Form { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.Forms.Form
    content.vb: >-
      <JsonProperty(Order:=15)>

      Public Property Form As Form
  overload: Octopus.Client.Model.InterruptionResource.Form*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 15
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
  commentId: P:Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
  id: RelatedDocumentIds
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: RelatedDocumentIds
  nameWithType: InterruptionResource.RelatedDocumentIds
  fullName: Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RelatedDocumentIds
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 40
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets the ids of documents related to this interruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 20)]

      public ReferenceCollection RelatedDocumentIds { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.ReferenceCollection
    content.vb: >-
      <JsonProperty(Order:=20)>

      Public Property RelatedDocumentIds As ReferenceCollection
  overload: Octopus.Client.Model.InterruptionResource.RelatedDocumentIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 20
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
  commentId: P:Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
  id: ResponsibleTeamIds
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: ResponsibleTeamIds
  nameWithType: InterruptionResource.ResponsibleTeamIds
  fullName: Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ResponsibleTeamIds
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 46
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets the ids of groups that can take responsibility for this interruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 25)]

      public ReferenceCollection ResponsibleTeamIds { get; set; }
    parameters: []
    return:
      type: Octopus.Client.Model.ReferenceCollection
    content.vb: >-
      <JsonProperty(Order:=25)>

      Public Property ResponsibleTeamIds As ReferenceCollection
  overload: Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 25
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.ResponsibleUserId
  commentId: P:Octopus.Client.Model.InterruptionResource.ResponsibleUserId
  id: ResponsibleUserId
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: ResponsibleUserId
  nameWithType: InterruptionResource.ResponsibleUserId
  fullName: Octopus.Client.Model.InterruptionResource.ResponsibleUserId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ResponsibleUserId
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 52
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets the\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 30)]

      public string ResponsibleUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=30)>

      Public Property ResponsibleUserId As String
  overload: Octopus.Client.Model.InterruptionResource.ResponsibleUserId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 30
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
  commentId: P:Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
  id: CanTakeResponsibility
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: CanTakeResponsibility
  nameWithType: InterruptionResource.CanTakeResponsibility
  fullName: Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CanTakeResponsibility
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 59
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets a value indicating whether the current user has permissions to take responsibility for this\ninterruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 35)]

      public bool CanTakeResponsibility { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(Order:=35)>

      Public Property CanTakeResponsibility As Boolean
  overload: Octopus.Client.Model.InterruptionResource.CanTakeResponsibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 35
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.HasResponsibility
  commentId: P:Octopus.Client.Model.InterruptionResource.HasResponsibility
  id: HasResponsibility
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: HasResponsibility
  nameWithType: InterruptionResource.HasResponsibility
  fullName: Octopus.Client.Model.InterruptionResource.HasResponsibility
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: HasResponsibility
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 65
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets a value indicating whether the current user has responsibility for this interruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 40)]

      public bool HasResponsibility { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(Order:=40)>

      Public Property HasResponsibility As Boolean
  overload: Octopus.Client.Model.InterruptionResource.HasResponsibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 40
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.TaskId
  commentId: P:Octopus.Client.Model.InterruptionResource.TaskId
  id: TaskId
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: InterruptionResource.TaskId
  fullName: Octopus.Client.Model.InterruptionResource.TaskId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: TaskId
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 71
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets the id of the Server Task raising the interruption.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 45)]

      public string TaskId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=45)>

      Public Property TaskId As String
  overload: Octopus.Client.Model.InterruptionResource.TaskId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 45
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.CorrelationId
  commentId: P:Octopus.Client.Model.InterruptionResource.CorrelationId
  id: CorrelationId
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: InterruptionResource.CorrelationId
  fullName: Octopus.Client.Model.InterruptionResource.CorrelationId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CorrelationId
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 78
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nGets or sets the correlation ID of the activity in which the interruption was requested,\nif any.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 45)]

      public string CorrelationId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty(Order:=45)>

      Public Property CorrelationId As String
  overload: Octopus.Client.Model.InterruptionResource.CorrelationId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 45
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
  commentId: P:Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
  id: IsLinkedToOtherInterruption
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: IsLinkedToOtherInterruption
  nameWithType: InterruptionResource.IsLinkedToOtherInterruption
  fullName: Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IsLinkedToOtherInterruption
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 86
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  summary: "\nIf this interruption is linked to another it will be \nautomatically completed when the other one is. Used to \nhandle interruptions in child deployments.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(Order = 50)]

      public bool IsLinkedToOtherInterruption { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty(Order:=50)>

      Public Property IsLinkedToOtherInterruption As Boolean
  overload: Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 50
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.InterruptionResource.SpaceId
  commentId: P:Octopus.Client.Model.InterruptionResource.SpaceId
  id: SpaceId
  parent: Octopus.Client.Model.InterruptionResource
  langs:
  - csharp
  - vb
  name: SpaceId
  nameWithType: InterruptionResource.SpaceId
  fullName: Octopus.Client.Model.InterruptionResource.SpaceId
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/InterruptionResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpaceId
    path: ../source/Octopus.Client/Model/InterruptionResource.cs
    startLine: 89
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public string SpaceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpaceId As String
  overload: Octopus.Client.Model.InterruptionResource.SpaceId*
  implements:
  - Octopus.Client.Extensibility.IHaveSpaceResource.SpaceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Extensibility.IHaveSpaceResource
  commentId: T:Octopus.Client.Extensibility.IHaveSpaceResource
  parent: Octopus.Client.Extensibility
  name: IHaveSpaceResource
  nameWithType: IHaveSpaceResource
  fullName: Octopus.Client.Extensibility.IHaveSpaceResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.InterruptionResource.Title*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.Title
  name: Title
  nameWithType: InterruptionResource.Title
  fullName: Octopus.Client.Model.InterruptionResource.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.InterruptionResource.Created*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.Created
  name: Created
  nameWithType: InterruptionResource.Created
  fullName: Octopus.Client.Model.InterruptionResource.Created
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Octopus.Client.Model.InterruptionResource.IsPending*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.IsPending
  name: IsPending
  nameWithType: InterruptionResource.IsPending
  fullName: Octopus.Client.Model.InterruptionResource.IsPending
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.Model.InterruptionResource.Form*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.Form
  name: Form
  nameWithType: InterruptionResource.Form
  fullName: Octopus.Client.Model.InterruptionResource.Form
- uid: Octopus.Client.Model.Forms.Form
  commentId: T:Octopus.Client.Model.Forms.Form
  parent: Octopus.Client.Model.Forms
  name: Form
  nameWithType: Form
  fullName: Octopus.Client.Model.Forms.Form
- uid: Octopus.Client.Model.Forms
  commentId: N:Octopus.Client.Model.Forms
  name: Octopus.Client.Model.Forms
  nameWithType: Octopus.Client.Model.Forms
  fullName: Octopus.Client.Model.Forms
- uid: Octopus.Client.Model.InterruptionResource.RelatedDocumentIds*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
  name: RelatedDocumentIds
  nameWithType: InterruptionResource.RelatedDocumentIds
  fullName: Octopus.Client.Model.InterruptionResource.RelatedDocumentIds
- uid: Octopus.Client.Model.ReferenceCollection
  commentId: T:Octopus.Client.Model.ReferenceCollection
  parent: Octopus.Client.Model
  name: ReferenceCollection
  nameWithType: ReferenceCollection
  fullName: Octopus.Client.Model.ReferenceCollection
- uid: Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
  name: ResponsibleTeamIds
  nameWithType: InterruptionResource.ResponsibleTeamIds
  fullName: Octopus.Client.Model.InterruptionResource.ResponsibleTeamIds
- uid: Octopus.Client.Model.InterruptionResource.ResponsibleUserId*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.ResponsibleUserId
  name: ResponsibleUserId
  nameWithType: InterruptionResource.ResponsibleUserId
  fullName: Octopus.Client.Model.InterruptionResource.ResponsibleUserId
- uid: Octopus.Client.Model.InterruptionResource.CanTakeResponsibility*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
  name: CanTakeResponsibility
  nameWithType: InterruptionResource.CanTakeResponsibility
  fullName: Octopus.Client.Model.InterruptionResource.CanTakeResponsibility
- uid: Octopus.Client.Model.InterruptionResource.HasResponsibility*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.HasResponsibility
  name: HasResponsibility
  nameWithType: InterruptionResource.HasResponsibility
  fullName: Octopus.Client.Model.InterruptionResource.HasResponsibility
- uid: Octopus.Client.Model.InterruptionResource.TaskId*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.TaskId
  name: TaskId
  nameWithType: InterruptionResource.TaskId
  fullName: Octopus.Client.Model.InterruptionResource.TaskId
- uid: Octopus.Client.Model.InterruptionResource.CorrelationId*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.CorrelationId
  name: CorrelationId
  nameWithType: InterruptionResource.CorrelationId
  fullName: Octopus.Client.Model.InterruptionResource.CorrelationId
- uid: Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
  name: IsLinkedToOtherInterruption
  nameWithType: InterruptionResource.IsLinkedToOtherInterruption
  fullName: Octopus.Client.Model.InterruptionResource.IsLinkedToOtherInterruption
- uid: Octopus.Client.Model.InterruptionResource.SpaceId*
  commentId: Overload:Octopus.Client.Model.InterruptionResource.SpaceId
  name: SpaceId
  nameWithType: InterruptionResource.SpaceId
  fullName: Octopus.Client.Model.InterruptionResource.SpaceId
- uid: Octopus.Client.Extensibility.IHaveSpaceResource.SpaceId
  commentId: P:Octopus.Client.Extensibility.IHaveSpaceResource.SpaceId
  parent: Octopus.Client.Extensibility.IHaveSpaceResource
  name: SpaceId
  nameWithType: IHaveSpaceResource.SpaceId
  fullName: Octopus.Client.Extensibility.IHaveSpaceResource.SpaceId
