### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IUserPermissionsRepository
  commentId: T:Octopus.Client.Repositories.IUserPermissionsRepository
  id: IUserPermissionsRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IUserPermissionsRepository.Export(Octopus.Client.Model.UserPermissionSetResource)
  - Octopus.Client.Repositories.IUserPermissionsRepository.Get(Octopus.Client.Model.UserResource)
  - Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration(Octopus.Client.Model.UserResource)
  langs:
  - csharp
  - vb
  name: IUserPermissionsRepository
  nameWithType: IUserPermissionsRepository
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/UserPermissionsRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IUserPermissionsRepository
    path: ../source/Octopus.Client/Repositories/UserPermissionsRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: 'public interface IUserPermissionsRepository : ICanExtendSpaceContext<IUserPermissionsRepository>'
    content.vb: >-
      Public Interface IUserPermissionsRepository
          Inherits ICanExtendSpaceContext(Of IUserPermissionsRepository)
  inheritedMembers:
  - Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}.UsingContext(Octopus.Client.SpaceContext)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.Get(Octopus.Client.Model.UserResource)
  commentId: M:Octopus.Client.Repositories.IUserPermissionsRepository.Get(Octopus.Client.Model.UserResource)
  id: Get(Octopus.Client.Model.UserResource)
  parent: Octopus.Client.Repositories.IUserPermissionsRepository
  langs:
  - csharp
  - vb
  name: Get(UserResource)
  nameWithType: IUserPermissionsRepository.Get(UserResource)
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.Get(Octopus.Client.Model.UserResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/UserPermissionsRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/Repositories/UserPermissionsRepository.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: UserPermissionSetResource Get(UserResource user)
    parameters:
    - id: user
      type: Octopus.Client.Model.UserResource
    return:
      type: Octopus.Client.Model.UserPermissionSetResource
    content.vb: Function Get(user As UserResource) As UserPermissionSetResource
  overload: Octopus.Client.Repositories.IUserPermissionsRepository.Get*
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration(Octopus.Client.Model.UserResource)
  commentId: M:Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration(Octopus.Client.Model.UserResource)
  id: GetConfiguration(Octopus.Client.Model.UserResource)
  parent: Octopus.Client.Repositories.IUserPermissionsRepository
  langs:
  - csharp
  - vb
  name: GetConfiguration(UserResource)
  nameWithType: IUserPermissionsRepository.GetConfiguration(UserResource)
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration(Octopus.Client.Model.UserResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/UserPermissionsRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetConfiguration
    path: ../source/Octopus.Client/Repositories/UserPermissionsRepository.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: UserPermissionSetResource GetConfiguration(UserResource user)
    parameters:
    - id: user
      type: Octopus.Client.Model.UserResource
    return:
      type: Octopus.Client.Model.UserPermissionSetResource
    content.vb: Function GetConfiguration(user As UserResource) As UserPermissionSetResource
  overload: Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration*
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.Export(Octopus.Client.Model.UserPermissionSetResource)
  commentId: M:Octopus.Client.Repositories.IUserPermissionsRepository.Export(Octopus.Client.Model.UserPermissionSetResource)
  id: Export(Octopus.Client.Model.UserPermissionSetResource)
  parent: Octopus.Client.Repositories.IUserPermissionsRepository
  langs:
  - csharp
  - vb
  name: Export(UserPermissionSetResource)
  nameWithType: IUserPermissionsRepository.Export(UserPermissionSetResource)
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.Export(Octopus.Client.Model.UserPermissionSetResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/UserPermissionsRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Export
    path: ../source/Octopus.Client/Repositories/UserPermissionsRepository.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: Stream Export(UserPermissionSetResource userPermissions)
    parameters:
    - id: userPermissions
      type: Octopus.Client.Model.UserPermissionSetResource
    return:
      type: System.IO.Stream
    content.vb: Function Export(userPermissions As UserPermissionSetResource) As Stream
  overload: Octopus.Client.Repositories.IUserPermissionsRepository.Export*
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}.UsingContext(Octopus.Client.SpaceContext)
  commentId: M:Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}.UsingContext(Octopus.Client.SpaceContext)
  parent: Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}
  definition: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  name: UsingContext(SpaceContext)
  nameWithType: ICanExtendSpaceContext<IUserPermissionsRepository>.UsingContext(SpaceContext)
  fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<Octopus.Client.Repositories.IUserPermissionsRepository>.UsingContext(Octopus.Client.SpaceContext)
  nameWithType.vb: ICanExtendSpaceContext(Of IUserPermissionsRepository).UsingContext(SpaceContext)
  fullName.vb: Octopus.Client.Repositories.ICanExtendSpaceContext(Of Octopus.Client.Repositories.IUserPermissionsRepository).UsingContext(Octopus.Client.SpaceContext)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
    name: UsingContext
    nameWithType: ICanExtendSpaceContext<IUserPermissionsRepository>.UsingContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<Octopus.Client.Repositories.IUserPermissionsRepository>.UsingContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.SpaceContext
    name: SpaceContext
    nameWithType: SpaceContext
    fullName: Octopus.Client.SpaceContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
    name: UsingContext
    nameWithType: ICanExtendSpaceContext(Of IUserPermissionsRepository).UsingContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext(Of Octopus.Client.Repositories.IUserPermissionsRepository).UsingContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.SpaceContext
    name: SpaceContext
    nameWithType: SpaceContext
    fullName: Octopus.Client.SpaceContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  commentId: M:Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
  name: UsingContext(SpaceContext)
  nameWithType: ICanExtendSpaceContext<T>.UsingContext(SpaceContext)
  fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<T>.UsingContext(Octopus.Client.SpaceContext)
  nameWithType.vb: ICanExtendSpaceContext(Of T).UsingContext(SpaceContext)
  fullName.vb: Octopus.Client.Repositories.ICanExtendSpaceContext(Of T).UsingContext(Octopus.Client.SpaceContext)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
    name: UsingContext
    nameWithType: ICanExtendSpaceContext<T>.UsingContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<T>.UsingContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.SpaceContext
    name: SpaceContext
    nameWithType: SpaceContext
    fullName: Octopus.Client.SpaceContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1.UsingContext(Octopus.Client.SpaceContext)
    name: UsingContext
    nameWithType: ICanExtendSpaceContext(Of T).UsingContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext(Of T).UsingContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.SpaceContext
    name: SpaceContext
    nameWithType: SpaceContext
    fullName: Octopus.Client.SpaceContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}
  commentId: T:Octopus.Client.Repositories.ICanExtendSpaceContext{Octopus.Client.Repositories.IUserPermissionsRepository}
  parent: Octopus.Client.Repositories
  definition: Octopus.Client.Repositories.ICanExtendSpaceContext`1
  name: ICanExtendSpaceContext<IUserPermissionsRepository>
  nameWithType: ICanExtendSpaceContext<IUserPermissionsRepository>
  fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<Octopus.Client.Repositories.IUserPermissionsRepository>
  nameWithType.vb: ICanExtendSpaceContext(Of IUserPermissionsRepository)
  fullName.vb: Octopus.Client.Repositories.ICanExtendSpaceContext(Of Octopus.Client.Repositories.IUserPermissionsRepository)
  name.vb: ICanExtendSpaceContext(Of IUserPermissionsRepository)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1
    name: ICanExtendSpaceContext
    nameWithType: ICanExtendSpaceContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Repositories.IUserPermissionsRepository
    name: IUserPermissionsRepository
    nameWithType: IUserPermissionsRepository
    fullName: Octopus.Client.Repositories.IUserPermissionsRepository
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1
    name: ICanExtendSpaceContext
    nameWithType: ICanExtendSpaceContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Repositories.IUserPermissionsRepository
    name: IUserPermissionsRepository
    nameWithType: IUserPermissionsRepository
    fullName: Octopus.Client.Repositories.IUserPermissionsRepository
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1
  commentId: T:Octopus.Client.Repositories.ICanExtendSpaceContext`1
  name: ICanExtendSpaceContext<T>
  nameWithType: ICanExtendSpaceContext<T>
  fullName: Octopus.Client.Repositories.ICanExtendSpaceContext<T>
  nameWithType.vb: ICanExtendSpaceContext(Of T)
  fullName.vb: Octopus.Client.Repositories.ICanExtendSpaceContext(Of T)
  name.vb: ICanExtendSpaceContext(Of T)
  spec.csharp:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1
    name: ICanExtendSpaceContext
    nameWithType: ICanExtendSpaceContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.ICanExtendSpaceContext`1
    name: ICanExtendSpaceContext
    nameWithType: ICanExtendSpaceContext
    fullName: Octopus.Client.Repositories.ICanExtendSpaceContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.Get*
  commentId: Overload:Octopus.Client.Repositories.IUserPermissionsRepository.Get
  name: Get
  nameWithType: IUserPermissionsRepository.Get
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.Get
- uid: Octopus.Client.Model.UserResource
  commentId: T:Octopus.Client.Model.UserResource
  parent: Octopus.Client.Model
  name: UserResource
  nameWithType: UserResource
  fullName: Octopus.Client.Model.UserResource
- uid: Octopus.Client.Model.UserPermissionSetResource
  commentId: T:Octopus.Client.Model.UserPermissionSetResource
  parent: Octopus.Client.Model
  name: UserPermissionSetResource
  nameWithType: UserPermissionSetResource
  fullName: Octopus.Client.Model.UserPermissionSetResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration*
  commentId: Overload:Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration
  name: GetConfiguration
  nameWithType: IUserPermissionsRepository.GetConfiguration
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.GetConfiguration
- uid: Octopus.Client.Repositories.IUserPermissionsRepository.Export*
  commentId: Overload:Octopus.Client.Repositories.IUserPermissionsRepository.Export
  name: Export
  nameWithType: IUserPermissionsRepository.Export
  fullName: Octopus.Client.Repositories.IUserPermissionsRepository.Export
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
