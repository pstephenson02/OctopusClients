### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  commentId: T:Octopus.Client.Repositories.Async.IPackageMetadataRepository
  id: IPackageMetadataRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get(System.String)
  - Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,Octopus.Client.Model.OverwriteMode)
  - Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,System.Boolean)
  langs:
  - csharp
  - vb
  name: IPackageMetadataRepository
  nameWithType: IPackageMetadataRepository
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IPackageMetadataRepository
    path: ../source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
    startLine: 70
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface IPackageMetadataRepository
    content.vb: Public Interface IPackageMetadataRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get(System.String)
  id: Get(System.String)
  parent: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: IPackageMetadataRepository.Get(String)
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
    startLine: 72
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<OctopusPackageMetadataMappedResource> Get(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource}
    content.vb: Function Get(id As String) As Task(Of OctopusPackageMetadataMappedResource)
  overload: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get*
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,Octopus.Client.Model.OverwriteMode)
  commentId: M:Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,Octopus.Client.Model.OverwriteMode)
  id: Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,Octopus.Client.Model.OverwriteMode)
  parent: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  langs:
  - csharp
  - vb
  name: Push(String, String, OctopusPackageMetadata, OverwriteMode)
  nameWithType: IPackageMetadataRepository.Push(String, String, OctopusPackageMetadata, OverwriteMode)
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String, System.String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, Octopus.Client.Model.OverwriteMode)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Push
    path: ../source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
    startLine: 73
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, OverwriteMode overwriteMode)
    parameters:
    - id: packageId
      type: System.String
    - id: version
      type: System.String
    - id: octopusMetadata
      type: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata
    - id: overwriteMode
      type: Octopus.Client.Model.OverwriteMode
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource}
    content.vb: Function Push(packageId As String, version As String, octopusMetadata As OctopusPackageMetadata, overwriteMode As OverwriteMode) As Task(Of OctopusPackageMetadataMappedResource)
  overload: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push*
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,System.Boolean)
  commentId: M:Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,System.Boolean)
  id: Push(System.String,System.String,Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata,System.Boolean)
  parent: Octopus.Client.Repositories.Async.IPackageMetadataRepository
  langs:
  - csharp
  - vb
  name: Push(String, String, OctopusPackageMetadata, Boolean)
  nameWithType: IPackageMetadataRepository.Push(String, String, OctopusPackageMetadata, Boolean)
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push(System.String, System.String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Push
    path: ../source/Octopus.Client/Repositories/Async/PackageMetadataRepository.cs
    startLine: 74
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: >-
      [Obsolete]

      Task<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, bool replaceExisting)
    parameters:
    - id: packageId
      type: System.String
    - id: version
      type: System.String
    - id: octopusMetadata
      type: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata
    - id: replaceExisting
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource}
    content.vb: >-
      <Obsolete>

      Function Push(packageId As String, version As String, octopusMetadata As OctopusPackageMetadata, replaceExisting As Boolean) As Task(Of OctopusPackageMetadataMappedResource)
  overload: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get*
  commentId: Overload:Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get
  name: Get
  nameWithType: IPackageMetadataRepository.Get
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OctopusPackageMetadataMappedResource>
  nameWithType: Task<OctopusPackageMetadataMappedResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource>
  nameWithType.vb: Task(Of OctopusPackageMetadataMappedResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource)
  name.vb: Task(Of OctopusPackageMetadataMappedResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource
    name: OctopusPackageMetadataMappedResource
    nameWithType: OctopusPackageMetadataMappedResource
    fullName: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource
    name: OctopusPackageMetadataMappedResource
    nameWithType: OctopusPackageMetadataMappedResource
    fullName: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push*
  commentId: Overload:Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push
  name: Push
  nameWithType: IPackageMetadataRepository.Push
  fullName: Octopus.Client.Repositories.Async.IPackageMetadataRepository.Push
- uid: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata
  commentId: T:Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata
  parent: Octopus.Client.Model.PackageMetadata
  name: OctopusPackageMetadata
  nameWithType: OctopusPackageMetadata
  fullName: Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata
- uid: Octopus.Client.Model.OverwriteMode
  commentId: T:Octopus.Client.Model.OverwriteMode
  parent: Octopus.Client.Model
  name: OverwriteMode
  nameWithType: OverwriteMode
  fullName: Octopus.Client.Model.OverwriteMode
- uid: Octopus.Client.Model.PackageMetadata
  commentId: N:Octopus.Client.Model.PackageMetadata
  name: Octopus.Client.Model.PackageMetadata
  nameWithType: Octopus.Client.Model.PackageMetadata
  fullName: Octopus.Client.Model.PackageMetadata
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
