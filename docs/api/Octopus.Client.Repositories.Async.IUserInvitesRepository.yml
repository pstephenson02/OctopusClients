### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IUserInvitesRepository
  commentId: T:Octopus.Client.Repositories.Async.IUserInvitesRepository
  id: IUserInvitesRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(Octopus.Client.Model.ReferenceCollection)
  - Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(System.String)
  langs:
  - csharp
  - vb
  name: IUserInvitesRepository
  nameWithType: IUserInvitesRepository
  fullName: Octopus.Client.Repositories.Async.IUserInvitesRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IUserInvitesRepository
    path: ../source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: public interface IUserInvitesRepository
    content.vb: Public Interface IUserInvitesRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(System.String)
  id: Invite(System.String)
  parent: Octopus.Client.Repositories.Async.IUserInvitesRepository
  langs:
  - csharp
  - vb
  name: Invite(String)
  nameWithType: IUserInvitesRepository.Invite(String)
  fullName: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Invite
    path: ../source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<InvitationResource> Invite(string addToTeamId)
    parameters:
    - id: addToTeamId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.InvitationResource}
    content.vb: Function Invite(addToTeamId As String) As Task(Of InvitationResource)
  overload: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite*
- uid: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(Octopus.Client.Model.ReferenceCollection)
  commentId: M:Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(Octopus.Client.Model.ReferenceCollection)
  id: Invite(Octopus.Client.Model.ReferenceCollection)
  parent: Octopus.Client.Repositories.Async.IUserInvitesRepository
  langs:
  - csharp
  - vb
  name: Invite(ReferenceCollection)
  nameWithType: IUserInvitesRepository.Invite(ReferenceCollection)
  fullName: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite(Octopus.Client.Model.ReferenceCollection)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Invite
    path: ../source/Octopus.Client/Repositories/Async/UserInvitesRepository.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<InvitationResource> Invite(ReferenceCollection addToTeamIds)
    parameters:
    - id: addToTeamIds
      type: Octopus.Client.Model.ReferenceCollection
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.InvitationResource}
    content.vb: Function Invite(addToTeamIds As ReferenceCollection) As Task(Of InvitationResource)
  overload: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite*
  commentId: Overload:Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite
  name: Invite
  nameWithType: IUserInvitesRepository.Invite
  fullName: Octopus.Client.Repositories.Async.IUserInvitesRepository.Invite
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.InvitationResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.InvitationResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<InvitationResource>
  nameWithType: Task<InvitationResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.InvitationResource>
  nameWithType.vb: Task(Of InvitationResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.InvitationResource)
  name.vb: Task(Of InvitationResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.InvitationResource
    name: InvitationResource
    nameWithType: InvitationResource
    fullName: Octopus.Client.Model.InvitationResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.InvitationResource
    name: InvitationResource
    nameWithType: InvitationResource
    fullName: Octopus.Client.Model.InvitationResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Model.ReferenceCollection
  commentId: T:Octopus.Client.Model.ReferenceCollection
  parent: Octopus.Client.Model
  name: ReferenceCollection
  nameWithType: ReferenceCollection
  fullName: Octopus.Client.Model.ReferenceCollection
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
