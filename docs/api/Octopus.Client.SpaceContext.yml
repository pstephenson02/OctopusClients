### YamlMime:ManagedReference
items:
- uid: Octopus.Client.SpaceContext
  commentId: T:Octopus.Client.SpaceContext
  id: SpaceContext
  parent: Octopus.Client
  children:
  - Octopus.Client.SpaceContext.AllSpaces
  - Octopus.Client.SpaceContext.AllSpacesAndSystem
  - Octopus.Client.SpaceContext.ApplySpaceSelection(System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}},System.Action)
  - Octopus.Client.SpaceContext.ApplySpaceSelection``1(System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},``0},System.Func{``0})
  - Octopus.Client.SpaceContext.IncludeSystem
  - Octopus.Client.SpaceContext.SpecificSpace(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.SpaceContext.SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
  - Octopus.Client.SpaceContext.SpecificSpaces(Octopus.Client.Model.SpaceResource[])
  - Octopus.Client.SpaceContext.SpecificSpaces(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  - Octopus.Client.SpaceContext.SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
  - Octopus.Client.SpaceContext.SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  - Octopus.Client.SpaceContext.SystemOnly
  langs:
  - csharp
  - vb
  name: SpaceContext
  nameWithType: SpaceContext
  fullName: Octopus.Client.SpaceContext
  type: Class
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpaceContext
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public class SpaceContext
    content.vb: Public Class SpaceContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.SpaceContext.AllSpaces
  commentId: M:Octopus.Client.SpaceContext.AllSpaces
  id: AllSpaces
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: AllSpaces()
  nameWithType: SpaceContext.AllSpaces()
  fullName: Octopus.Client.SpaceContext.AllSpaces()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AllSpaces
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext AllSpaces()
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function AllSpaces As SpaceContext
  overload: Octopus.Client.SpaceContext.AllSpaces*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.SpaceContext.AllSpacesAndSystem
  commentId: M:Octopus.Client.SpaceContext.AllSpacesAndSystem
  id: AllSpacesAndSystem
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: AllSpacesAndSystem()
  nameWithType: SpaceContext.AllSpacesAndSystem()
  fullName: Octopus.Client.SpaceContext.AllSpacesAndSystem()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AllSpacesAndSystem
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext AllSpacesAndSystem()
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function AllSpacesAndSystem As SpaceContext
  overload: Octopus.Client.SpaceContext.AllSpacesAndSystem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.SpaceContext.SpecificSpace(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.SpaceContext.SpecificSpace(Octopus.Client.Model.SpaceResource)
  id: SpecificSpace(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpace(SpaceResource)
  nameWithType: SpaceContext.SpecificSpace(SpaceResource)
  fullName: Octopus.Client.SpaceContext.SpecificSpace(Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpace
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpace(SpaceResource space)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpace(space As SpaceResource) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.SpaceContext.SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
  commentId: M:Octopus.Client.SpaceContext.SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
  id: SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpaceAndSystem(SpaceResource)
  nameWithType: SpaceContext.SpecificSpaceAndSystem(SpaceResource)
  fullName: Octopus.Client.SpaceContext.SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpaceAndSystem
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpaceAndSystem(SpaceResource space)
    parameters:
    - id: space
      type: Octopus.Client.Model.SpaceResource
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpaceAndSystem(space As SpaceResource) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpaceAndSystem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.SpaceContext.SpecificSpaces(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  commentId: M:Octopus.Client.SpaceContext.SpecificSpaces(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  id: SpecificSpaces(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpaces(IEnumerable<SpaceResource>)
  nameWithType: SpaceContext.SpecificSpaces(IEnumerable<SpaceResource>)
  fullName: Octopus.Client.SpaceContext.SpecificSpaces(System.Collections.Generic.IEnumerable<Octopus.Client.Model.SpaceResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpaces
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpaces(IEnumerable<SpaceResource> spaces)
    parameters:
    - id: spaces
      type: System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource}
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpaces(spaces As IEnumerable(Of SpaceResource)) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpaces*
  nameWithType.vb: SpaceContext.SpecificSpaces(IEnumerable(Of SpaceResource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.SpaceContext.SpecificSpaces(System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.SpaceResource))
  name.vb: SpecificSpaces(IEnumerable(Of SpaceResource))
- uid: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  commentId: M:Octopus.Client.SpaceContext.SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  id: SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource})
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpacesAndSystem(IEnumerable<SpaceResource>)
  nameWithType: SpaceContext.SpecificSpacesAndSystem(IEnumerable<SpaceResource>)
  fullName: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable<Octopus.Client.Model.SpaceResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpacesAndSystem
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpacesAndSystem(IEnumerable<SpaceResource> spaces)
    parameters:
    - id: spaces
      type: System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource}
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpacesAndSystem(spaces As IEnumerable(Of SpaceResource)) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpacesAndSystem*
  nameWithType.vb: SpaceContext.SpecificSpacesAndSystem(IEnumerable(Of SpaceResource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.SpaceResource))
  name.vb: SpecificSpacesAndSystem(IEnumerable(Of SpaceResource))
- uid: Octopus.Client.SpaceContext.SpecificSpaces(Octopus.Client.Model.SpaceResource[])
  commentId: M:Octopus.Client.SpaceContext.SpecificSpaces(Octopus.Client.Model.SpaceResource[])
  id: SpecificSpaces(Octopus.Client.Model.SpaceResource[])
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpaces(SpaceResource[])
  nameWithType: SpaceContext.SpecificSpaces(SpaceResource[])
  fullName: Octopus.Client.SpaceContext.SpecificSpaces(Octopus.Client.Model.SpaceResource[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpaces
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 21
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpaces(params SpaceResource[] spaces)
    parameters:
    - id: spaces
      type: Octopus.Client.Model.SpaceResource[]
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpaces(ParamArray spaces As SpaceResource()) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpaces*
  nameWithType.vb: SpaceContext.SpecificSpaces(SpaceResource())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.SpaceContext.SpecificSpaces(Octopus.Client.Model.SpaceResource())
  name.vb: SpecificSpaces(SpaceResource())
- uid: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
  commentId: M:Octopus.Client.SpaceContext.SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
  id: SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SpecificSpacesAndSystem(SpaceResource[])
  nameWithType: SpaceContext.SpecificSpacesAndSystem(SpaceResource[])
  fullName: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SpecificSpacesAndSystem
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SpecificSpacesAndSystem(params SpaceResource[] spaces)
    parameters:
    - id: spaces
      type: Octopus.Client.Model.SpaceResource[]
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SpecificSpacesAndSystem(ParamArray spaces As SpaceResource()) As SpaceContext
  overload: Octopus.Client.SpaceContext.SpecificSpacesAndSystem*
  nameWithType.vb: SpaceContext.SpecificSpacesAndSystem(SpaceResource())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Octopus.Client.SpaceContext.SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource())
  name.vb: SpecificSpacesAndSystem(SpaceResource())
- uid: Octopus.Client.SpaceContext.SystemOnly
  commentId: M:Octopus.Client.SpaceContext.SystemOnly
  id: SystemOnly
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: SystemOnly()
  nameWithType: SpaceContext.SystemOnly()
  fullName: Octopus.Client.SpaceContext.SystemOnly()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SystemOnly
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public static SpaceContext SystemOnly()
    return:
      type: Octopus.Client.SpaceContext
    content.vb: Public Shared Function SystemOnly As SpaceContext
  overload: Octopus.Client.SpaceContext.SystemOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.SpaceContext.IncludeSystem
  commentId: P:Octopus.Client.SpaceContext.IncludeSystem
  id: IncludeSystem
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: IncludeSystem
  nameWithType: SpaceContext.IncludeSystem
  fullName: Octopus.Client.SpaceContext.IncludeSystem
  type: Property
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IncludeSystem
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 35
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public bool IncludeSystem { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IncludeSystem As Boolean
  overload: Octopus.Client.SpaceContext.IncludeSystem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.SpaceContext.ApplySpaceSelection``1(System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},``0},System.Func{``0})
  commentId: M:Octopus.Client.SpaceContext.ApplySpaceSelection``1(System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},``0},System.Func{``0})
  id: ApplySpaceSelection``1(System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},``0},System.Func{``0})
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: ApplySpaceSelection<T>(Func<IReadOnlyCollection<SpaceResource>, T>, Func<T>)
  nameWithType: SpaceContext.ApplySpaceSelection<T>(Func<IReadOnlyCollection<SpaceResource>, T>, Func<T>)
  fullName: Octopus.Client.SpaceContext.ApplySpaceSelection<T>(System.Func<System.Collections.Generic.IReadOnlyCollection<Octopus.Client.Model.SpaceResource>, T>, System.Func<T>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ApplySpaceSelection
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 36
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public T ApplySpaceSelection<T>(Func<IReadOnlyCollection<SpaceResource>, T> handleSpecificSpaces, Func<T> handleAllSpaces)
    parameters:
    - id: handleSpecificSpaces
      type: System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},{T}}
    - id: handleAllSpaces
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function ApplySpaceSelection(Of T)(handleSpecificSpaces As Func(Of IReadOnlyCollection(Of SpaceResource), T), handleAllSpaces As Func(Of T)) As T
  overload: Octopus.Client.SpaceContext.ApplySpaceSelection*
  nameWithType.vb: SpaceContext.ApplySpaceSelection(Of T)(Func(Of IReadOnlyCollection(Of SpaceResource), T), Func(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.SpaceContext.ApplySpaceSelection(Of T)(System.Func(Of System.Collections.Generic.IReadOnlyCollection(Of Octopus.Client.Model.SpaceResource), T), System.Func(Of T))
  name.vb: ApplySpaceSelection(Of T)(Func(Of IReadOnlyCollection(Of SpaceResource), T), Func(Of T))
- uid: Octopus.Client.SpaceContext.ApplySpaceSelection(System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}},System.Action)
  commentId: M:Octopus.Client.SpaceContext.ApplySpaceSelection(System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}},System.Action)
  id: ApplySpaceSelection(System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}},System.Action)
  parent: Octopus.Client.SpaceContext
  langs:
  - csharp
  - vb
  name: ApplySpaceSelection(Action<IReadOnlyCollection<SpaceResource>>, Action)
  nameWithType: SpaceContext.ApplySpaceSelection(Action<IReadOnlyCollection<SpaceResource>>, Action)
  fullName: Octopus.Client.SpaceContext.ApplySpaceSelection(System.Action<System.Collections.Generic.IReadOnlyCollection<Octopus.Client.Model.SpaceResource>>, System.Action)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/SpaceContext.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ApplySpaceSelection
    path: ../source/Octopus.Client/SpaceContext.cs
    startLine: 49
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client
  syntax:
    content: public void ApplySpaceSelection(Action<IReadOnlyCollection<SpaceResource>> handleSpecificSpaces, Action handleAllSpaces)
    parameters:
    - id: handleSpecificSpaces
      type: System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}}
    - id: handleAllSpaces
      type: System.Action
    content.vb: Public Sub ApplySpaceSelection(handleSpecificSpaces As Action(Of IReadOnlyCollection(Of SpaceResource)), handleAllSpaces As Action)
  overload: Octopus.Client.SpaceContext.ApplySpaceSelection*
  nameWithType.vb: SpaceContext.ApplySpaceSelection(Action(Of IReadOnlyCollection(Of SpaceResource)), Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.SpaceContext.ApplySpaceSelection(System.Action(Of System.Collections.Generic.IReadOnlyCollection(Of Octopus.Client.Model.SpaceResource)), System.Action)
  name.vb: ApplySpaceSelection(Action(Of IReadOnlyCollection(Of SpaceResource)), Action)
references:
- uid: Octopus.Client
  commentId: N:Octopus.Client
  name: Octopus.Client
  nameWithType: Octopus.Client
  fullName: Octopus.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.SpaceContext.AllSpaces*
  commentId: Overload:Octopus.Client.SpaceContext.AllSpaces
  name: AllSpaces
  nameWithType: SpaceContext.AllSpaces
  fullName: Octopus.Client.SpaceContext.AllSpaces
- uid: Octopus.Client.SpaceContext
  commentId: T:Octopus.Client.SpaceContext
  parent: Octopus.Client
  name: SpaceContext
  nameWithType: SpaceContext
  fullName: Octopus.Client.SpaceContext
- uid: Octopus.Client.SpaceContext.AllSpacesAndSystem*
  commentId: Overload:Octopus.Client.SpaceContext.AllSpacesAndSystem
  name: AllSpacesAndSystem
  nameWithType: SpaceContext.AllSpacesAndSystem
  fullName: Octopus.Client.SpaceContext.AllSpacesAndSystem
- uid: Octopus.Client.SpaceContext.SpecificSpace*
  commentId: Overload:Octopus.Client.SpaceContext.SpecificSpace
  name: SpecificSpace
  nameWithType: SpaceContext.SpecificSpace
  fullName: Octopus.Client.SpaceContext.SpecificSpace
- uid: Octopus.Client.Model.SpaceResource
  commentId: T:Octopus.Client.Model.SpaceResource
  parent: Octopus.Client.Model
  name: SpaceResource
  nameWithType: SpaceResource
  fullName: Octopus.Client.Model.SpaceResource
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.SpaceContext.SpecificSpaceAndSystem*
  commentId: Overload:Octopus.Client.SpaceContext.SpecificSpaceAndSystem
  name: SpecificSpaceAndSystem
  nameWithType: SpaceContext.SpecificSpaceAndSystem
  fullName: Octopus.Client.SpaceContext.SpecificSpaceAndSystem
- uid: Octopus.Client.SpaceContext.SpecificSpaces*
  commentId: Overload:Octopus.Client.SpaceContext.SpecificSpaces
  name: SpecificSpaces
  nameWithType: SpaceContext.SpecificSpaces
  fullName: Octopus.Client.SpaceContext.SpecificSpaces
- uid: System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource}
  commentId: T:System.Collections.Generic.IEnumerable{Octopus.Client.Model.SpaceResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SpaceResource>
  nameWithType: IEnumerable<SpaceResource>
  fullName: System.Collections.Generic.IEnumerable<Octopus.Client.Model.SpaceResource>
  nameWithType.vb: IEnumerable(Of SpaceResource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Octopus.Client.Model.SpaceResource)
  name.vb: IEnumerable(Of SpaceResource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.SpaceContext.SpecificSpacesAndSystem*
  commentId: Overload:Octopus.Client.SpaceContext.SpecificSpacesAndSystem
  name: SpecificSpacesAndSystem
  nameWithType: SpaceContext.SpecificSpacesAndSystem
  fullName: Octopus.Client.SpaceContext.SpecificSpacesAndSystem
- uid: Octopus.Client.Model.SpaceResource[]
  isExternal: true
  name: SpaceResource[]
  nameWithType: SpaceResource[]
  fullName: Octopus.Client.Model.SpaceResource[]
  nameWithType.vb: SpaceResource()
  fullName.vb: Octopus.Client.Model.SpaceResource()
  name.vb: SpaceResource()
  spec.csharp:
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.SpaceContext.SystemOnly*
  commentId: Overload:Octopus.Client.SpaceContext.SystemOnly
  name: SystemOnly
  nameWithType: SpaceContext.SystemOnly
  fullName: Octopus.Client.SpaceContext.SystemOnly
- uid: Octopus.Client.SpaceContext.IncludeSystem*
  commentId: Overload:Octopus.Client.SpaceContext.IncludeSystem
  name: IncludeSystem
  nameWithType: SpaceContext.IncludeSystem
  fullName: Octopus.Client.SpaceContext.IncludeSystem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Octopus.Client.SpaceContext.ApplySpaceSelection*
  commentId: Overload:Octopus.Client.SpaceContext.ApplySpaceSelection
  name: ApplySpaceSelection
  nameWithType: SpaceContext.ApplySpaceSelection
  fullName: Octopus.Client.SpaceContext.ApplySpaceSelection
- uid: System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},{T}}
  commentId: T:System.Func{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource},``0}
  parent: System
  definition: System.Func`2
  name: Func<IReadOnlyCollection<SpaceResource>, T>
  nameWithType: Func<IReadOnlyCollection<SpaceResource>, T>
  fullName: System.Func<System.Collections.Generic.IReadOnlyCollection<Octopus.Client.Model.SpaceResource>, T>
  nameWithType.vb: Func(Of IReadOnlyCollection(Of SpaceResource), T)
  fullName.vb: System.Func(Of System.Collections.Generic.IReadOnlyCollection(Of Octopus.Client.Model.SpaceResource), T)
  name.vb: Func(Of IReadOnlyCollection(Of SpaceResource), T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}}
  commentId: T:System.Action{System.Collections.Generic.IReadOnlyCollection{Octopus.Client.Model.SpaceResource}}
  parent: System
  definition: System.Action`1
  name: Action<IReadOnlyCollection<SpaceResource>>
  nameWithType: Action<IReadOnlyCollection<SpaceResource>>
  fullName: System.Action<System.Collections.Generic.IReadOnlyCollection<Octopus.Client.Model.SpaceResource>>
  nameWithType.vb: Action(Of IReadOnlyCollection(Of SpaceResource))
  fullName.vb: System.Action(Of System.Collections.Generic.IReadOnlyCollection(Of Octopus.Client.Model.SpaceResource))
  name.vb: Action(Of IReadOnlyCollection(Of SpaceResource))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.SpaceResource
    name: SpaceResource
    nameWithType: SpaceResource
    fullName: Octopus.Client.Model.SpaceResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
