### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.IConfigurationRepository
  commentId: T:Octopus.Client.Repositories.IConfigurationRepository
  id: IConfigurationRepository
  parent: Octopus.Client.Repositories
  children:
  - Octopus.Client.Repositories.IConfigurationRepository.Get``1
  - Octopus.Client.Repositories.IConfigurationRepository.Modify``1(``0)
  langs:
  - csharp
  - vb
  name: IConfigurationRepository
  nameWithType: IConfigurationRepository
  fullName: Octopus.Client.Repositories.IConfigurationRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/ConfigurationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IConfigurationRepository
    path: ../source/Octopus.Client/Repositories/ConfigurationRepository.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: public interface IConfigurationRepository
    content.vb: Public Interface IConfigurationRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.IConfigurationRepository.Get``1
  commentId: M:Octopus.Client.Repositories.IConfigurationRepository.Get``1
  id: Get``1
  parent: Octopus.Client.Repositories.IConfigurationRepository
  langs:
  - csharp
  - vb
  name: Get<T>()
  nameWithType: IConfigurationRepository.Get<T>()
  fullName: Octopus.Client.Repositories.IConfigurationRepository.Get<T>()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/ConfigurationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Get
    path: ../source/Octopus.Client/Repositories/ConfigurationRepository.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: >-
      T Get<T>()
          where T : class, IResource, new()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function Get(Of T As {Class, IResource, New}) As T
  overload: Octopus.Client.Repositories.IConfigurationRepository.Get*
  nameWithType.vb: IConfigurationRepository.Get(Of T)()
  fullName.vb: Octopus.Client.Repositories.IConfigurationRepository.Get(Of T)()
  name.vb: Get(Of T)()
- uid: Octopus.Client.Repositories.IConfigurationRepository.Modify``1(``0)
  commentId: M:Octopus.Client.Repositories.IConfigurationRepository.Modify``1(``0)
  id: Modify``1(``0)
  parent: Octopus.Client.Repositories.IConfigurationRepository
  langs:
  - csharp
  - vb
  name: Modify<T>(T)
  nameWithType: IConfigurationRepository.Modify<T>(T)
  fullName: Octopus.Client.Repositories.IConfigurationRepository.Modify<T>(T)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/ConfigurationRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Modify
    path: ../source/Octopus.Client/Repositories/ConfigurationRepository.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories
  syntax:
    content: >-
      T Modify<T>(T configurationResource)
          where T : class, IResource, new()
    parameters:
    - id: configurationResource
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function Modify(Of T As {Class, IResource, New})(configurationResource As T) As T
  overload: Octopus.Client.Repositories.IConfigurationRepository.Modify*
  nameWithType.vb: IConfigurationRepository.Modify(Of T)(T)
  fullName.vb: Octopus.Client.Repositories.IConfigurationRepository.Modify(Of T)(T)
  name.vb: Modify(Of T)(T)
references:
- uid: Octopus.Client.Repositories
  commentId: N:Octopus.Client.Repositories
  name: Octopus.Client.Repositories
  nameWithType: Octopus.Client.Repositories
  fullName: Octopus.Client.Repositories
- uid: Octopus.Client.Repositories.IConfigurationRepository.Get*
  commentId: Overload:Octopus.Client.Repositories.IConfigurationRepository.Get
  name: Get
  nameWithType: IConfigurationRepository.Get
  fullName: Octopus.Client.Repositories.IConfigurationRepository.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Octopus.Client.Repositories.IConfigurationRepository.Modify*
  commentId: Overload:Octopus.Client.Repositories.IConfigurationRepository.Modify
  name: Modify
  nameWithType: IConfigurationRepository.Modify
  fullName: Octopus.Client.Repositories.IConfigurationRepository.Modify
