### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Editors.Async.MachineEditor
  commentId: T:Octopus.Client.Editors.Async.MachineEditor
  id: MachineEditor
  parent: Octopus.Client.Editors.Async
  children:
  - Octopus.Client.Editors.Async.MachineEditor.#ctor(Octopus.Client.Repositories.Async.IMachineRepository)
  - Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  - Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  - Octopus.Client.Editors.Async.MachineEditor.Customize(System.Action{Octopus.Client.Model.MachineResource})
  - Octopus.Client.Editors.Async.MachineEditor.Instance
  - Octopus.Client.Editors.Async.MachineEditor.Save
  langs:
  - csharp
  - vb
  name: MachineEditor
  nameWithType: MachineEditor
  fullName: Octopus.Client.Editors.Async.MachineEditor
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MachineEditor
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: 'public class MachineEditor : IResourceEditor<MachineResource, MachineEditor>, IResourceBuilder'
    content.vb: >-
      Public Class MachineEditor
          Implements IResourceEditor(Of MachineResource, MachineEditor), IResourceBuilder
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  - Octopus.Client.Editors.Async.IResourceBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Editors.Async.MachineEditor.#ctor(Octopus.Client.Repositories.Async.IMachineRepository)
  commentId: M:Octopus.Client.Editors.Async.MachineEditor.#ctor(Octopus.Client.Repositories.Async.IMachineRepository)
  id: '#ctor(Octopus.Client.Repositories.Async.IMachineRepository)'
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: MachineEditor(IMachineRepository)
  nameWithType: MachineEditor.MachineEditor(IMachineRepository)
  fullName: Octopus.Client.Editors.Async.MachineEditor.MachineEditor(Octopus.Client.Repositories.Async.IMachineRepository)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public MachineEditor(IMachineRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.Repositories.Async.IMachineRepository
    content.vb: Public Sub New(repository As IMachineRepository)
  overload: Octopus.Client.Editors.Async.MachineEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.MachineEditor.Instance
  commentId: P:Octopus.Client.Editors.Async.MachineEditor.Instance
  id: Instance
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MachineEditor.Instance
  fullName: Octopus.Client.Editors.Async.MachineEditor.Instance
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Instance
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public MachineResource Instance { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.MachineResource
    content.vb: Public ReadOnly Property Instance As MachineResource
  overload: Octopus.Client.Editors.Async.MachineEditor.Instance*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Instance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  commentId: M:Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  id: CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[])
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, EndpointResource, EnvironmentResource[], String[])
  nameWithType: MachineEditor.CreateOrModify(String, EndpointResource, EnvironmentResource[], String[])
  fullName: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], System.String[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, string[] roles)
    parameters:
    - id: name
      type: System.String
    - id: endpoint
      type: Octopus.Client.Model.Endpoints.EndpointResource
    - id: environments
      type: Octopus.Client.Model.EnvironmentResource[]
    - id: roles
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.MachineEditor}
    content.vb: Public Function CreateOrModify(name As String, endpoint As EndpointResource, environments As EnvironmentResource(), roles As String()) As Task(Of MachineEditor)
  overload: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify*
  nameWithType.vb: MachineEditor.CreateOrModify(String, EndpointResource, EnvironmentResource(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource(), System.String())
  name.vb: CreateOrModify(String, EndpointResource, EnvironmentResource(), String())
- uid: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  commentId: M:Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  id: CreateOrModify(System.String,Octopus.Client.Model.Endpoints.EndpointResource,Octopus.Client.Model.EnvironmentResource[],System.String[],Octopus.Client.Model.TenantResource[],Octopus.Client.Model.TagResource[],System.Nullable{Octopus.Client.Model.TenantedDeploymentMode})
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(String, EndpointResource, EnvironmentResource[], String[], TenantResource[], TagResource[], Nullable<TenantedDeploymentMode>)
  nameWithType: MachineEditor.CreateOrModify(String, EndpointResource, EnvironmentResource[], String[], TenantResource[], TagResource[], Nullable<TenantedDeploymentMode>)
  fullName: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], System.String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], System.Nullable<Octopus.Client.Model.TenantedDeploymentMode>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 50
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, string[] roles, TenantResource[] tenants, TagResource[] tenantTags, TenantedDeploymentMode? tenantedDeploymentParticipation = default(TenantedDeploymentMode? ))
    parameters:
    - id: name
      type: System.String
    - id: endpoint
      type: Octopus.Client.Model.Endpoints.EndpointResource
    - id: environments
      type: Octopus.Client.Model.EnvironmentResource[]
    - id: roles
      type: System.String[]
    - id: tenants
      type: Octopus.Client.Model.TenantResource[]
    - id: tenantTags
      type: Octopus.Client.Model.TagResource[]
    - id: tenantedDeploymentParticipation
      type: System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.MachineEditor}
    content.vb: Public Function CreateOrModify(name As String, endpoint As EndpointResource, environments As EnvironmentResource(), roles As String(), tenants As TenantResource(), tenantTags As TagResource(), tenantedDeploymentParticipation As TenantedDeploymentMode? = Nothing) As Task(Of MachineEditor)
  overload: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify*
  nameWithType.vb: MachineEditor.CreateOrModify(String, EndpointResource, EnvironmentResource(), String(), TenantResource(), TagResource(), Nullable(Of TenantedDeploymentMode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify(System.String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource(), System.String(), Octopus.Client.Model.TenantResource(), Octopus.Client.Model.TagResource(), System.Nullable(Of Octopus.Client.Model.TenantedDeploymentMode))
  name.vb: CreateOrModify(String, EndpointResource, EnvironmentResource(), String(), TenantResource(), TagResource(), Nullable(Of TenantedDeploymentMode))
- uid: Octopus.Client.Editors.Async.MachineEditor.Customize(System.Action{Octopus.Client.Model.MachineResource})
  commentId: M:Octopus.Client.Editors.Async.MachineEditor.Customize(System.Action{Octopus.Client.Model.MachineResource})
  id: Customize(System.Action{Octopus.Client.Model.MachineResource})
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: Customize(Action<MachineResource>)
  nameWithType: MachineEditor.Customize(Action<MachineResource>)
  fullName: Octopus.Client.Editors.Async.MachineEditor.Customize(System.Action<Octopus.Client.Model.MachineResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Customize
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 130
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public MachineEditor Customize(Action<MachineResource> customize)
    parameters:
    - id: customize
      type: System.Action{Octopus.Client.Model.MachineResource}
    return:
      type: Octopus.Client.Editors.Async.MachineEditor
    content.vb: Public Function Customize(customize As Action(Of MachineResource)) As MachineEditor
  overload: Octopus.Client.Editors.Async.MachineEditor.Customize*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Customize(System.Action{Octopus.Client.Model.MachineResource})
  nameWithType.vb: MachineEditor.Customize(Action(Of MachineResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.MachineEditor.Customize(System.Action(Of Octopus.Client.Model.MachineResource))
  name.vb: Customize(Action(Of MachineResource))
- uid: Octopus.Client.Editors.Async.MachineEditor.Save
  commentId: M:Octopus.Client.Editors.Async.MachineEditor.Save
  id: Save
  parent: Octopus.Client.Editors.Async.MachineEditor
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: MachineEditor.Save()
  fullName: Octopus.Client.Editors.Async.MachineEditor.Save()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/MachineEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Save
    path: ../source/Octopus.Client/Editors/Async/MachineEditor.cs
    startLine: 136
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<MachineEditor> Save()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.MachineEditor}
    content.vb: Public Function Save As Task(Of MachineEditor)
  overload: Octopus.Client.Editors.Async.MachineEditor.Save*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Editors.Async
  commentId: N:Octopus.Client.Editors.Async
  name: Octopus.Client.Editors.Async
  nameWithType: Octopus.Client.Editors.Async
  fullName: Octopus.Client.Editors.Async
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  parent: Octopus.Client.Editors.Async
  definition: Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<MachineResource, MachineEditor>
  nameWithType: IResourceEditor<MachineResource, MachineEditor>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>
  nameWithType.vb: IResourceEditor(Of MachineResource, MachineEditor)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor)
  name.vb: IResourceEditor(Of MachineResource, MachineEditor)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.MachineEditor
    name: MachineEditor
    nameWithType: MachineEditor
    fullName: Octopus.Client.Editors.Async.MachineEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.MachineEditor
    name: MachineEditor
    nameWithType: MachineEditor
    fullName: Octopus.Client.Editors.Async.MachineEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceBuilder
  commentId: T:Octopus.Client.Editors.Async.IResourceBuilder
  parent: Octopus.Client.Editors.Async
  name: IResourceBuilder
  nameWithType: IResourceBuilder
  fullName: Octopus.Client.Editors.Async.IResourceBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors.Async.IResourceEditor`2
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<TResource, TResourceBuilder>
  nameWithType: IResourceEditor<TResource, TResourceBuilder>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder)
  name.vb: IResourceEditor(Of TResource, TResourceBuilder)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.MachineEditor.#ctor*
  commentId: Overload:Octopus.Client.Editors.Async.MachineEditor.#ctor
  name: MachineEditor
  nameWithType: MachineEditor.MachineEditor
  fullName: Octopus.Client.Editors.Async.MachineEditor.MachineEditor
- uid: Octopus.Client.Repositories.Async.IMachineRepository
  commentId: T:Octopus.Client.Repositories.Async.IMachineRepository
  parent: Octopus.Client.Repositories.Async
  name: IMachineRepository
  nameWithType: IMachineRepository
  fullName: Octopus.Client.Repositories.Async.IMachineRepository
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Editors.Async.MachineEditor.Instance*
  commentId: Overload:Octopus.Client.Editors.Async.MachineEditor.Instance
  name: Instance
  nameWithType: MachineEditor.Instance
  fullName: Octopus.Client.Editors.Async.MachineEditor.Instance
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Instance
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<MachineResource, MachineEditor>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>.Instance
  nameWithType.vb: IResourceEditor(Of MachineResource, MachineEditor).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor).Instance
- uid: Octopus.Client.Model.MachineResource
  commentId: T:Octopus.Client.Model.MachineResource
  parent: Octopus.Client.Model
  name: MachineResource
  nameWithType: MachineResource
  fullName: Octopus.Client.Model.MachineResource
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Instance
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Instance
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify*
  commentId: Overload:Octopus.Client.Editors.Async.MachineEditor.CreateOrModify
  name: CreateOrModify
  nameWithType: MachineEditor.CreateOrModify
  fullName: Octopus.Client.Editors.Async.MachineEditor.CreateOrModify
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.Endpoints.EndpointResource
  commentId: T:Octopus.Client.Model.Endpoints.EndpointResource
  parent: Octopus.Client.Model.Endpoints
  name: EndpointResource
  nameWithType: EndpointResource
  fullName: Octopus.Client.Model.Endpoints.EndpointResource
- uid: Octopus.Client.Model.EnvironmentResource[]
  isExternal: true
  name: EnvironmentResource[]
  nameWithType: EnvironmentResource[]
  fullName: Octopus.Client.Model.EnvironmentResource[]
  nameWithType.vb: EnvironmentResource()
  fullName.vb: Octopus.Client.Model.EnvironmentResource()
  name.vb: EnvironmentResource()
  spec.csharp:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.EnvironmentResource
    name: EnvironmentResource
    nameWithType: EnvironmentResource
    fullName: Octopus.Client.Model.EnvironmentResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.MachineEditor}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Editors.Async.MachineEditor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MachineEditor>
  nameWithType: Task<MachineEditor>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Editors.Async.MachineEditor>
  nameWithType.vb: Task(Of MachineEditor)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Editors.Async.MachineEditor)
  name.vb: Task(Of MachineEditor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Editors.Async.MachineEditor
    name: MachineEditor
    nameWithType: MachineEditor
    fullName: Octopus.Client.Editors.Async.MachineEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Editors.Async.MachineEditor
    name: MachineEditor
    nameWithType: MachineEditor
    fullName: Octopus.Client.Editors.Async.MachineEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Endpoints
  commentId: N:Octopus.Client.Model.Endpoints
  name: Octopus.Client.Model.Endpoints
  nameWithType: Octopus.Client.Model.Endpoints
  fullName: Octopus.Client.Model.Endpoints
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Model.TenantResource[]
  isExternal: true
  name: TenantResource[]
  nameWithType: TenantResource[]
  fullName: Octopus.Client.Model.TenantResource[]
  nameWithType.vb: TenantResource()
  fullName.vb: Octopus.Client.Model.TenantResource()
  name.vb: TenantResource()
  spec.csharp:
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.TenantResource
    name: TenantResource
    nameWithType: TenantResource
    fullName: Octopus.Client.Model.TenantResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Model.TagResource[]
  isExternal: true
  name: TagResource[]
  nameWithType: TagResource[]
  fullName: Octopus.Client.Model.TagResource[]
  nameWithType.vb: TagResource()
  fullName.vb: Octopus.Client.Model.TagResource()
  name.vb: TagResource()
  spec.csharp:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
  commentId: T:System.Nullable{Octopus.Client.Model.TenantedDeploymentMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TenantedDeploymentMode>
  nameWithType: Nullable<TenantedDeploymentMode>
  fullName: System.Nullable<Octopus.Client.Model.TenantedDeploymentMode>
  nameWithType.vb: Nullable(Of TenantedDeploymentMode)
  fullName.vb: System.Nullable(Of Octopus.Client.Model.TenantedDeploymentMode)
  name.vb: Nullable(Of TenantedDeploymentMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.TenantedDeploymentMode
    name: TenantedDeploymentMode
    nameWithType: TenantedDeploymentMode
    fullName: Octopus.Client.Model.TenantedDeploymentMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.TenantedDeploymentMode
    name: TenantedDeploymentMode
    nameWithType: TenantedDeploymentMode
    fullName: Octopus.Client.Model.TenantedDeploymentMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.MachineEditor.Customize*
  commentId: Overload:Octopus.Client.Editors.Async.MachineEditor.Customize
  name: Customize
  nameWithType: MachineEditor.Customize
  fullName: Octopus.Client.Editors.Async.MachineEditor.Customize
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Customize(System.Action{Octopus.Client.Model.MachineResource})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Customize(System.Action{Octopus.Client.Model.MachineResource})
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  name: Customize(Action<MachineResource>)
  nameWithType: IResourceEditor<MachineResource, MachineEditor>.Customize(Action<MachineResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>.Customize(System.Action<Octopus.Client.Model.MachineResource>)
  nameWithType.vb: IResourceEditor(Of MachineResource, MachineEditor).Customize(Action(Of MachineResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor).Customize(System.Action(Of Octopus.Client.Model.MachineResource))
  name.vb: Customize(Action(Of MachineResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<MachineResource, MachineEditor>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of MachineResource, MachineEditor).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Octopus.Client.Model.MachineResource}
  commentId: T:System.Action{Octopus.Client.Model.MachineResource}
  parent: System
  definition: System.Action`1
  name: Action<MachineResource>
  nameWithType: Action<MachineResource>
  fullName: System.Action<Octopus.Client.Model.MachineResource>
  nameWithType.vb: Action(Of MachineResource)
  fullName.vb: System.Action(Of Octopus.Client.Model.MachineResource)
  name.vb: Action(Of MachineResource)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.MachineResource
    name: MachineResource
    nameWithType: MachineResource
    fullName: Octopus.Client.Model.MachineResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.MachineEditor
  commentId: T:Octopus.Client.Editors.Async.MachineEditor
  parent: Octopus.Client.Editors.Async
  name: MachineEditor
  nameWithType: MachineEditor
  fullName: Octopus.Client.Editors.Async.MachineEditor
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  isExternal: true
  name: Customize(Action<TResource>)
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize(Action<TResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize(System.Action<TResource>)
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Customize(Action(Of TResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize(System.Action(Of TResource))
  name.vb: Customize(Action(Of TResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.MachineEditor.Save*
  commentId: Overload:Octopus.Client.Editors.Async.MachineEditor.Save
  name: Save
  nameWithType: MachineEditor.Save
  fullName: Octopus.Client.Editors.Async.MachineEditor.Save
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}.Save
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.MachineResource,Octopus.Client.Editors.Async.MachineEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<MachineResource, MachineEditor>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>.Save()
  nameWithType.vb: IResourceEditor(Of MachineResource, MachineEditor).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<MachineResource, MachineEditor>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of MachineResource, MachineEditor).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.MachineResource, Octopus.Client.Editors.Async.MachineEditor).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save()
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
