### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup
  commentId: T:Octopus.Client.Model.Forms.SubmitButtonGroup
  id: SubmitButtonGroup
  parent: Octopus.Client.Model.Forms
  children:
  - Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor(System.Collections.Generic.List{Octopus.Client.Model.Forms.Button})
  - Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
  - Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue(System.String)
  - Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType
  langs:
  - csharp
  - vb
  name: SubmitButtonGroup
  nameWithType: SubmitButtonGroup
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SubmitButtonGroup
    path: ../source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Forms
  summary: "\nA group of options, represented as buttons. The value of the element is the\nvalue of the selected button.\n"
  example: []
  syntax:
    content: 'public class SubmitButtonGroup : Control'
    content.vb: >-
      Public Class SubmitButtonGroup
          Inherits Control
  inheritance:
  - System.Object
  - Octopus.Client.Model.Forms.Control
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor(System.Collections.Generic.List{Octopus.Client.Model.Forms.Button})
  commentId: M:Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor(System.Collections.Generic.List{Octopus.Client.Model.Forms.Button})
  id: '#ctor(System.Collections.Generic.List{Octopus.Client.Model.Forms.Button})'
  parent: Octopus.Client.Model.Forms.SubmitButtonGroup
  langs:
  - csharp
  - vb
  name: SubmitButtonGroup(List<Button>)
  nameWithType: SubmitButtonGroup.SubmitButtonGroup(List<Button>)
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.SubmitButtonGroup(System.Collections.Generic.List<Octopus.Client.Model.Forms.Button>)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Forms
  syntax:
    content: public SubmitButtonGroup(List<Button> buttons)
    parameters:
    - id: buttons
      type: System.Collections.Generic.List{Octopus.Client.Model.Forms.Button}
    content.vb: Public Sub New(buttons As List(Of Button))
  overload: Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor*
  nameWithType.vb: SubmitButtonGroup.SubmitButtonGroup(List(Of Button))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Model.Forms.SubmitButtonGroup.SubmitButtonGroup(System.Collections.Generic.List(Of Octopus.Client.Model.Forms.Button))
  name.vb: SubmitButtonGroup(List(Of Button))
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
  commentId: P:Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
  id: Buttons
  parent: Octopus.Client.Model.Forms.SubmitButtonGroup
  langs:
  - csharp
  - vb
  name: Buttons
  nameWithType: SubmitButtonGroup.Buttons
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Buttons
    path: ../source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
    startLine: 17
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Forms
  syntax:
    content: public List<Button> Buttons { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Octopus.Client.Model.Forms.Button}
    content.vb: Public ReadOnly Property Buttons As List(Of Button)
  overload: Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue(System.String)
  commentId: M:Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue(System.String)
  id: CoerceValue(System.String)
  parent: Octopus.Client.Model.Forms.SubmitButtonGroup
  langs:
  - csharp
  - vb
  name: CoerceValue(String)
  nameWithType: SubmitButtonGroup.CoerceValue(String)
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CoerceValue
    path: ../source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Forms
  syntax:
    content: public override object CoerceValue(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Object
    content.vb: Public Overrides Function CoerceValue(value As String) As Object
  overridden: Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
  overload: Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType
  commentId: M:Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType
  id: GetNativeValueType
  parent: Octopus.Client.Model.Forms.SubmitButtonGroup
  langs:
  - csharp
  - vb
  name: GetNativeValueType()
  nameWithType: SubmitButtonGroup.GetNativeValueType()
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetNativeValueType
    path: ../source/Octopus.Client/Model/Forms/SubmitButtonGroup.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Forms
  syntax:
    content: public override Type GetNativeValueType()
    return:
      type: System.Type
    content.vb: Public Overrides Function GetNativeValueType As Type
  overridden: Octopus.Client.Model.Forms.Control.GetNativeValueType
  overload: Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Octopus.Client.Model.Forms
  commentId: N:Octopus.Client.Model.Forms
  name: Octopus.Client.Model.Forms
  nameWithType: Octopus.Client.Model.Forms
  fullName: Octopus.Client.Model.Forms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Forms.Control
  commentId: T:Octopus.Client.Model.Forms.Control
  parent: Octopus.Client.Model.Forms
  name: Control
  nameWithType: Control
  fullName: Octopus.Client.Model.Forms.Control
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor*
  commentId: Overload:Octopus.Client.Model.Forms.SubmitButtonGroup.#ctor
  name: SubmitButtonGroup
  nameWithType: SubmitButtonGroup.SubmitButtonGroup
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.SubmitButtonGroup
- uid: System.Collections.Generic.List{Octopus.Client.Model.Forms.Button}
  commentId: T:System.Collections.Generic.List{Octopus.Client.Model.Forms.Button}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Button>
  nameWithType: List<Button>
  fullName: System.Collections.Generic.List<Octopus.Client.Model.Forms.Button>
  nameWithType.vb: List(Of Button)
  fullName.vb: System.Collections.Generic.List(Of Octopus.Client.Model.Forms.Button)
  name.vb: List(Of Button)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Forms.Button
    name: Button
    nameWithType: Button
    fullName: Octopus.Client.Model.Forms.Button
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Forms.Button
    name: Button
    nameWithType: Button
    fullName: Octopus.Client.Model.Forms.Button
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons*
  commentId: Overload:Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
  name: Buttons
  nameWithType: SubmitButtonGroup.Buttons
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.Buttons
- uid: Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
  commentId: M:Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
  parent: Octopus.Client.Model.Forms.Control
  isExternal: true
  name: CoerceValue(String)
  nameWithType: Control.CoerceValue(String)
  fullName: Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
    name: CoerceValue
    nameWithType: Control.CoerceValue
    fullName: Octopus.Client.Model.Forms.Control.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Forms.Control.CoerceValue(System.String)
    name: CoerceValue
    nameWithType: Control.CoerceValue
    fullName: Octopus.Client.Model.Forms.Control.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue*
  commentId: Overload:Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue
  name: CoerceValue
  nameWithType: SubmitButtonGroup.CoerceValue
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.CoerceValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.Forms.Control.GetNativeValueType
  commentId: M:Octopus.Client.Model.Forms.Control.GetNativeValueType
  parent: Octopus.Client.Model.Forms.Control
  name: GetNativeValueType()
  nameWithType: Control.GetNativeValueType()
  fullName: Octopus.Client.Model.Forms.Control.GetNativeValueType()
  spec.csharp:
  - uid: Octopus.Client.Model.Forms.Control.GetNativeValueType
    name: GetNativeValueType
    nameWithType: Control.GetNativeValueType
    fullName: Octopus.Client.Model.Forms.Control.GetNativeValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Forms.Control.GetNativeValueType
    name: GetNativeValueType
    nameWithType: Control.GetNativeValueType
    fullName: Octopus.Client.Model.Forms.Control.GetNativeValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType*
  commentId: Overload:Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType
  name: GetNativeValueType
  nameWithType: SubmitButtonGroup.GetNativeValueType
  fullName: Octopus.Client.Model.Forms.SubmitButtonGroup.GetNativeValueType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
