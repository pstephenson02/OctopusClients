### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  commentId: T:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  id: IRunbookSnapshotRepository
  parent: Octopus.Client.Repositories.Async
  children:
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create(Octopus.Client.Model.RunbookSnapshotResource)
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
  - Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  langs:
  - csharp
  - vb
  name: IRunbookSnapshotRepository
  nameWithType: IRunbookSnapshotRepository
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  type: Interface
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: IRunbookSnapshotRepository
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: 'public interface IRunbookSnapshotRepository : IGet<RunbookSnapshotResource>, ICreate<RunbookSnapshotResource>, IPaginate<RunbookSnapshotResource>, IModify<RunbookSnapshotResource>, IDelete<RunbookSnapshotResource>'
    content.vb: >-
      Public Interface IRunbookSnapshotRepository
          Inherits IGet(Of RunbookSnapshotResource), ICreate(Of RunbookSnapshotResource), IPaginate(Of RunbookSnapshotResource), IModify(Of RunbookSnapshotResource), IDelete(Of RunbookSnapshotResource)
  inheritedMembers:
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String)
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String[])
  - Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Refresh(Octopus.Client.Model.RunbookSnapshotResource)
  - Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}.Create(Octopus.Client.Model.RunbookSnapshotResource,System.Object)
  - Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookSnapshotResource},System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindOne(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindMany(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  - Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindAll(System.String,System.Object)
  - Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}.Modify(Octopus.Client.Model.RunbookSnapshotResource)
  - Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}.Delete(Octopus.Client.Model.RunbookSnapshotResource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  id: GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: GetRunbookRuns(RunbookSnapshotResource, Int32, Nullable<Int32>)
  nameWithType: IRunbookSnapshotRepository.GetRunbookRuns(RunbookSnapshotResource, Int32, Nullable<Int32>)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource, System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetRunbookRuns
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  summary: "\n\n"
  example: []
  syntax:
    content: Task<ResourceCollection<RunbookRunResource>> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip = 0, int? take = default(int? ))
    parameters:
    - id: runbookSnapshot
      type: Octopus.Client.Model.RunbookSnapshotResource
      description: ''
    - id: skip
      type: System.Int32
      description: Number of records to skip
    - id: take
      type: System.Nullable{System.Int32}
      description: Number of records to take (First supported in Server 3.14.15)
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}}
      description: ''
    content.vb: Function GetRunbookRuns(runbookSnapshot As RunbookSnapshotResource, skip As Integer = 0, take As Integer? = Nothing) As Task(Of ResourceCollection(Of RunbookRunResource))
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns*
  nameWithType.vb: IRunbookSnapshotRepository.GetRunbookRuns(RunbookSnapshotResource, Int32, Nullable(Of Int32))
  fullName.vb: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource, System.Int32, System.Nullable(Of System.Int32))
  name.vb: GetRunbookRuns(RunbookSnapshotResource, Int32, Nullable(Of Int32))
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  id: GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource,System.Int32,System.Nullable{System.Int32})
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: GetArtifacts(RunbookSnapshotResource, Int32, Nullable<Int32>)
  nameWithType: IRunbookSnapshotRepository.GetArtifacts(RunbookSnapshotResource, Int32, Nullable<Int32>)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource, System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetArtifacts
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  summary: "\n\n"
  example: []
  syntax:
    content: Task<ResourceCollection<ArtifactResource>> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip = 0, int? take = default(int? ))
    parameters:
    - id: runbookSnapshot
      type: Octopus.Client.Model.RunbookSnapshotResource
      description: ''
    - id: skip
      type: System.Int32
      description: Number of records to skip
    - id: take
      type: System.Nullable{System.Int32}
      description: Number of records to take (First supported in Server 3.14.15)
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ArtifactResource}}
      description: ''
    content.vb: Function GetArtifacts(runbookSnapshot As RunbookSnapshotResource, skip As Integer = 0, take As Integer? = Nothing) As Task(Of ResourceCollection(Of ArtifactResource))
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts*
  nameWithType.vb: IRunbookSnapshotRepository.GetArtifacts(RunbookSnapshotResource, Int32, Nullable(Of Int32))
  fullName.vb: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource, System.Int32, System.Nullable(Of System.Int32))
  name.vb: GetArtifacts(RunbookSnapshotResource, Int32, Nullable(Of Int32))
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
  id: GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: GetTemplate(RunbookSnapshotResource)
  nameWithType: IRunbookSnapshotRepository.GetTemplate(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetTemplate
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<RunbookRunTemplateResource> GetTemplate(RunbookSnapshotResource runbookSnapshot)
    parameters:
    - id: runbookSnapshot
      type: Octopus.Client.Model.RunbookSnapshotResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunTemplateResource}
    content.vb: Function GetTemplate(runbookSnapshot As RunbookSnapshotResource) As Task(Of RunbookRunTemplateResource)
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate*
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  id: GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: GetPreview(DeploymentPromotionTarget)
  nameWithType: IRunbookSnapshotRepository.GetPreview(DeploymentPromotionTarget)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: GetPreview
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 25
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget)
    parameters:
    - id: promotionTarget
      type: Octopus.Client.Model.DeploymentPromotionTarget
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunPreviewResource}
    content.vb: Function GetPreview(promotionTarget As DeploymentPromotionTarget) As Task(Of RunbookRunPreviewResource)
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview*
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  id: SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: SnapshotVariables(RunbookSnapshotResource)
  nameWithType: IRunbookSnapshotRepository.SnapshotVariables(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SnapshotVariables
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 26
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<RunbookSnapshotResource> SnapshotVariables(RunbookSnapshotResource runbookSnapshot)
    parameters:
    - id: runbookSnapshot
      type: Octopus.Client.Model.RunbookSnapshotResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotResource}
    content.vb: Function SnapshotVariables(runbookSnapshot As RunbookSnapshotResource) As Task(Of RunbookSnapshotResource)
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables*
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create(Octopus.Client.Model.RunbookSnapshotResource)
  id: Create(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository
  langs:
  - csharp
  - vb
  name: Create(RunbookSnapshotResource)
  nameWithType: IRunbookSnapshotRepository.Create(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create(Octopus.Client.Model.RunbookSnapshotResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Create
    path: ../source/Octopus.Client/Repositories/Async/RunbookSnapshotRepository.cs
    startLine: 27
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Repositories.Async
  syntax:
    content: Task<RunbookSnapshotResource> Create(RunbookSnapshotResource runbookSnapshot)
    parameters:
    - id: runbookSnapshot
      type: Octopus.Client.Model.RunbookSnapshotResource
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotResource}
    content.vb: Function Create(runbookSnapshot As RunbookSnapshotResource) As Task(Of RunbookSnapshotResource)
  overload: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create*
references:
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  name: Get(String)
  nameWithType: IGet<RunbookSnapshotResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Get(System.String)
  nameWithType.vb: IGet(Of RunbookSnapshotResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<RunbookSnapshotResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of RunbookSnapshotResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Get(System.String[])
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  name: Get(String[])
  nameWithType: IGet<RunbookSnapshotResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Get(System.String[])
  nameWithType.vb: IGet(Of RunbookSnapshotResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<RunbookSnapshotResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of RunbookSnapshotResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Refresh(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}.Refresh(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(RunbookSnapshotResource)
  nameWithType: IGet<RunbookSnapshotResource>.Refresh(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Refresh(Octopus.Client.Model.RunbookSnapshotResource)
  nameWithType.vb: IGet(Of RunbookSnapshotResource).Refresh(RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Refresh(Octopus.Client.Model.RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<RunbookSnapshotResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of RunbookSnapshotResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}.Create(Octopus.Client.Model.RunbookSnapshotResource,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}.Create(Octopus.Client.Model.RunbookSnapshotResource,System.Object)
  parent: Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
  name: Create(RunbookSnapshotResource, Object)
  nameWithType: ICreate<RunbookSnapshotResource>.Create(RunbookSnapshotResource, Object)
  fullName: Octopus.Client.Repositories.Async.ICreate<Octopus.Client.Model.RunbookSnapshotResource>.Create(Octopus.Client.Model.RunbookSnapshotResource, System.Object)
  nameWithType.vb: ICreate(Of RunbookSnapshotResource).Create(RunbookSnapshotResource, Object)
  fullName.vb: Octopus.Client.Repositories.Async.ICreate(Of Octopus.Client.Model.RunbookSnapshotResource).Create(Octopus.Client.Model.RunbookSnapshotResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<RunbookSnapshotResource>.Create
    fullName: Octopus.Client.Repositories.Async.ICreate<Octopus.Client.Model.RunbookSnapshotResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of RunbookSnapshotResource).Create
    fullName: Octopus.Client.Repositories.Async.ICreate(Of Octopus.Client.Model.RunbookSnapshotResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookSnapshotResource},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookSnapshotResource},System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  name: Paginate(Func<ResourceCollection<RunbookSnapshotResource>, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookSnapshotResource>.Paginate(Func<ResourceCollection<RunbookSnapshotResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookSnapshotResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookSnapshotResource).Paginate(Func(Of ResourceCollection(Of RunbookSnapshotResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookSnapshotResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of RunbookSnapshotResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<RunbookSnapshotResource>.Paginate
    fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of RunbookSnapshotResource).Paginate
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindOne(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindOne(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindOne(Func<RunbookSnapshotResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookSnapshotResource>.FindOne(Func<RunbookSnapshotResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindOne(System.Func<Octopus.Client.Model.RunbookSnapshotResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookSnapshotResource).FindOne(Func(Of RunbookSnapshotResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindOne(System.Func(Of Octopus.Client.Model.RunbookSnapshotResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of RunbookSnapshotResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<RunbookSnapshotResource>.FindOne
    fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of RunbookSnapshotResource).FindOne
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindMany(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindMany(System.Func{Octopus.Client.Model.RunbookSnapshotResource,System.Boolean},System.String,System.Object)
  parent: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  name: FindMany(Func<RunbookSnapshotResource, Boolean>, String, Object)
  nameWithType: IPaginate<RunbookSnapshotResource>.FindMany(Func<RunbookSnapshotResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindMany(System.Func<Octopus.Client.Model.RunbookSnapshotResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookSnapshotResource).FindMany(Func(Of RunbookSnapshotResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindMany(System.Func(Of Octopus.Client.Model.RunbookSnapshotResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of RunbookSnapshotResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<RunbookSnapshotResource>.FindMany
    fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of RunbookSnapshotResource).FindMany
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}.FindAll(System.String,System.Object)
  parent: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
  name: FindAll(String, Object)
  nameWithType: IPaginate<RunbookSnapshotResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of RunbookSnapshotResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<RunbookSnapshotResource>.FindAll
    fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of RunbookSnapshotResource).FindAll
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}.Modify(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}.Modify(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(RunbookSnapshotResource)
  nameWithType: IModify<RunbookSnapshotResource>.Modify(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookSnapshotResource>.Modify(Octopus.Client.Model.RunbookSnapshotResource)
  nameWithType.vb: IModify(Of RunbookSnapshotResource).Modify(RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookSnapshotResource).Modify(Octopus.Client.Model.RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<RunbookSnapshotResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookSnapshotResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of RunbookSnapshotResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookSnapshotResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}.Delete(Octopus.Client.Model.RunbookSnapshotResource)
  commentId: M:Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}.Delete(Octopus.Client.Model.RunbookSnapshotResource)
  parent: Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}
  definition: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
  name: Delete(RunbookSnapshotResource)
  nameWithType: IDelete<RunbookSnapshotResource>.Delete(RunbookSnapshotResource)
  fullName: Octopus.Client.Repositories.Async.IDelete<Octopus.Client.Model.RunbookSnapshotResource>.Delete(Octopus.Client.Model.RunbookSnapshotResource)
  nameWithType.vb: IDelete(Of RunbookSnapshotResource).Delete(RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IDelete(Of Octopus.Client.Model.RunbookSnapshotResource).Delete(Octopus.Client.Model.RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<RunbookSnapshotResource>.Delete
    fullName: Octopus.Client.Repositories.Async.IDelete<Octopus.Client.Model.RunbookSnapshotResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of RunbookSnapshotResource).Delete
    fullName: Octopus.Client.Repositories.Async.IDelete(Of Octopus.Client.Model.RunbookSnapshotResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
  isExternal: true
  name: Get(String)
  nameWithType: IGet<TResource>.Get(String)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String)
  nameWithType.vb: IGet(Of TResource).Get(String)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String)
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:Octopus.Client.Repositories.Async.IGet{Octopus.Client.Model.RunbookSnapshotResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IGet`1
  name: IGet<RunbookSnapshotResource>
  nameWithType: IGet<RunbookSnapshotResource>
  fullName: Octopus.Client.Repositories.Async.IGet<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: IGet(Of RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: IGet(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
  isExternal: true
  name: Get(String[])
  nameWithType: IGet<TResource>.Get(String[])
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get(System.String[])
  nameWithType.vb: IGet(Of TResource).Get(String())
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Get(System.String())
  name.vb: Get(String())
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet<TResource>.Get
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Get(System.String[])
    name: Get
    nameWithType: IGet(Of TResource).Get
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  commentId: M:Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
  name: Refresh(TResource)
  nameWithType: IGet<TResource>.Refresh(TResource)
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh(TResource)
  nameWithType.vb: IGet(Of TResource).Refresh(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet<TResource>.Refresh
    fullName: Octopus.Client.Repositories.Async.IGet<TResource>.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1.Refresh(`0)
    name: Refresh
    nameWithType: IGet(Of TResource).Refresh
    fullName: Octopus.Client.Repositories.Async.IGet(Of TResource).Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
  isExternal: true
  name: Create(TResource, Object)
  nameWithType: ICreate<TResource>.Create(TResource, Object)
  fullName: Octopus.Client.Repositories.Async.ICreate<TResource>.Create(TResource, System.Object)
  nameWithType.vb: ICreate(Of TResource).Create(TResource, Object)
  fullName.vb: Octopus.Client.Repositories.Async.ICreate(Of TResource).Create(TResource, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate<TResource>.Create
    fullName: Octopus.Client.Repositories.Async.ICreate<TResource>.Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.ICreate`1.Create(`0,System.Object)
    name: Create
    nameWithType: ICreate(Of TResource).Create
    fullName: Octopus.Client.Repositories.Async.ICreate(Of TResource).Create
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:Octopus.Client.Repositories.Async.ICreate{Octopus.Client.Model.RunbookSnapshotResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.ICreate`1
  name: ICreate<RunbookSnapshotResource>
  nameWithType: ICreate<RunbookSnapshotResource>
  fullName: Octopus.Client.Repositories.Async.ICreate<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: ICreate(Of RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.ICreate(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: ICreate(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.Async.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.Async.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
  isExternal: true
  name: Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.Paginate(System.Func<Octopus.Client.Model.ResourceCollection<TResource>, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of TResource).Paginate(System.Func(Of Octopus.Client.Model.ResourceCollection(Of TResource), System.Boolean), System.String, System.Object)
  name.vb: Paginate(Func(Of ResourceCollection(Of TResource), Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate<TResource>.Paginate
    fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.Paginate(System.Func{Octopus.Client.Model.ResourceCollection{`0},System.Boolean},System.String,System.Object)
    name: Paginate
    nameWithType: IPaginate(Of TResource).Paginate
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of TResource).Paginate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:Octopus.Client.Repositories.Async.IPaginate{Octopus.Client.Model.RunbookSnapshotResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IPaginate`1
  name: IPaginate<RunbookSnapshotResource>
  nameWithType: IPaginate<RunbookSnapshotResource>
  fullName: Octopus.Client.Repositories.Async.IPaginate<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: IPaginate(Of RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: IPaginate(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.Async.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.Async.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindOne(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindOne(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindOne(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindOne(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindOne(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindOne(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate<TResource>.FindOne
    fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindOne(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindOne
    nameWithType: IPaginate(Of TResource).FindOne
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
  isExternal: true
  name: FindMany(Func<TResource, Boolean>, String, Object)
  nameWithType: IPaginate<TResource>.FindMany(Func<TResource, Boolean>, String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindMany(System.Func<TResource, System.Boolean>, System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindMany(Func(Of TResource, Boolean), String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindMany(System.Func(Of TResource, System.Boolean), System.String, System.Object)
  name.vb: FindMany(Func(Of TResource, Boolean), String, Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate<TResource>.FindMany
    fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindMany(System.Func{`0,System.Boolean},System.String,System.Object)
    name: FindMany
    nameWithType: IPaginate(Of TResource).FindMany
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindMany
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
  commentId: M:Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
  isExternal: true
  name: FindAll(String, Object)
  nameWithType: IPaginate<TResource>.FindAll(String, Object)
  fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindAll(System.String, System.Object)
  nameWithType.vb: IPaginate(Of TResource).FindAll(String, Object)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindAll(System.String, System.Object)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate<TResource>.FindAll
    fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>.FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1.FindAll(System.String,System.Object)
    name: FindAll
    nameWithType: IPaginate(Of TResource).FindAll
    fullName: Octopus.Client.Repositories.Async.IPaginate(Of TResource).FindAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  commentId: M:Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
  name: Modify(TResource)
  nameWithType: IModify<TResource>.Modify(TResource)
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify(TResource)
  nameWithType.vb: IModify(Of TResource).Modify(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify<TResource>.Modify
    fullName: Octopus.Client.Repositories.Async.IModify<TResource>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1.Modify(`0)
    name: Modify
    nameWithType: IModify(Of TResource).Modify
    fullName: Octopus.Client.Repositories.Async.IModify(Of TResource).Modify
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:Octopus.Client.Repositories.Async.IModify{Octopus.Client.Model.RunbookSnapshotResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IModify`1
  name: IModify<RunbookSnapshotResource>
  nameWithType: IModify<RunbookSnapshotResource>
  fullName: Octopus.Client.Repositories.Async.IModify<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: IModify(Of RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: IModify(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
  commentId: M:Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
  name: Delete(TResource)
  nameWithType: IDelete<TResource>.Delete(TResource)
  fullName: Octopus.Client.Repositories.Async.IDelete<TResource>.Delete(TResource)
  nameWithType.vb: IDelete(Of TResource).Delete(TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IDelete(Of TResource).Delete(TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete<TResource>.Delete
    fullName: Octopus.Client.Repositories.Async.IDelete<TResource>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IDelete`1.Delete(`0)
    name: Delete
    nameWithType: IDelete(Of TResource).Delete
    fullName: Octopus.Client.Repositories.Async.IDelete(Of TResource).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:Octopus.Client.Repositories.Async.IDelete{Octopus.Client.Model.RunbookSnapshotResource}
  parent: Octopus.Client.Repositories.Async
  definition: Octopus.Client.Repositories.Async.IDelete`1
  name: IDelete<RunbookSnapshotResource>
  nameWithType: IDelete<RunbookSnapshotResource>
  fullName: Octopus.Client.Repositories.Async.IDelete<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: IDelete(Of RunbookSnapshotResource)
  fullName.vb: Octopus.Client.Repositories.Async.IDelete(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: IDelete(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.Async.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.Async.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IGet`1
  commentId: T:Octopus.Client.Repositories.Async.IGet`1
  name: IGet<TResource>
  nameWithType: IGet<TResource>
  fullName: Octopus.Client.Repositories.Async.IGet<TResource>
  nameWithType.vb: IGet(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IGet(Of TResource)
  name.vb: IGet(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IGet`1
    name: IGet
    nameWithType: IGet
    fullName: Octopus.Client.Repositories.Async.IGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.ICreate`1
  commentId: T:Octopus.Client.Repositories.Async.ICreate`1
  name: ICreate<TResource>
  nameWithType: ICreate<TResource>
  fullName: Octopus.Client.Repositories.Async.ICreate<TResource>
  nameWithType.vb: ICreate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.ICreate(Of TResource)
  name.vb: ICreate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.Async.ICreate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.ICreate`1
    name: ICreate
    nameWithType: ICreate
    fullName: Octopus.Client.Repositories.Async.ICreate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IPaginate`1
  commentId: T:Octopus.Client.Repositories.Async.IPaginate`1
  name: IPaginate<TResource>
  nameWithType: IPaginate<TResource>
  fullName: Octopus.Client.Repositories.Async.IPaginate<TResource>
  nameWithType.vb: IPaginate(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IPaginate(Of TResource)
  name.vb: IPaginate(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.Async.IPaginate
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IPaginate`1
    name: IPaginate
    nameWithType: IPaginate
    fullName: Octopus.Client.Repositories.Async.IPaginate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IModify`1
  commentId: T:Octopus.Client.Repositories.Async.IModify`1
  name: IModify<TResource>
  nameWithType: IModify<TResource>
  fullName: Octopus.Client.Repositories.Async.IModify<TResource>
  nameWithType.vb: IModify(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IModify(Of TResource)
  name.vb: IModify(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IModify`1
    name: IModify
    nameWithType: IModify
    fullName: Octopus.Client.Repositories.Async.IModify
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IDelete`1
  commentId: T:Octopus.Client.Repositories.Async.IDelete`1
  name: IDelete<TResource>
  nameWithType: IDelete<TResource>
  fullName: Octopus.Client.Repositories.Async.IDelete<TResource>
  nameWithType.vb: IDelete(Of TResource)
  fullName.vb: Octopus.Client.Repositories.Async.IDelete(Of TResource)
  name.vb: IDelete(Of TResource)
  spec.csharp:
  - uid: Octopus.Client.Repositories.Async.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.Async.IDelete
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Repositories.Async.IDelete`1
    name: IDelete
    nameWithType: IDelete
    fullName: Octopus.Client.Repositories.Async.IDelete
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns
  name: GetRunbookRuns
  nameWithType: IRunbookSnapshotRepository.GetRunbookRuns
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetRunbookRuns
- uid: Octopus.Client.Model.RunbookSnapshotResource
  commentId: T:Octopus.Client.Model.RunbookSnapshotResource
  parent: Octopus.Client.Model
  name: RunbookSnapshotResource
  nameWithType: RunbookSnapshotResource
  fullName: Octopus.Client.Model.RunbookSnapshotResource
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.RunbookRunResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceCollection<RunbookRunResource>>
  nameWithType: Task<ResourceCollection<RunbookRunResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.RunbookRunResource>>
  nameWithType.vb: Task(Of ResourceCollection(Of RunbookRunResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.RunbookRunResource))
  name.vb: Task(Of ResourceCollection(Of RunbookRunResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunResource
    name: RunbookRunResource
    nameWithType: RunbookRunResource
    fullName: Octopus.Client.Model.RunbookRunResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts
  name: GetArtifacts
  nameWithType: IRunbookSnapshotRepository.GetArtifacts
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetArtifacts
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ArtifactResource}}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.ResourceCollection{Octopus.Client.Model.ArtifactResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceCollection<ArtifactResource>>
  nameWithType: Task<ResourceCollection<ArtifactResource>>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.ResourceCollection<Octopus.Client.Model.ArtifactResource>>
  nameWithType.vb: Task(Of ResourceCollection(Of ArtifactResource))
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.ResourceCollection(Of Octopus.Client.Model.ArtifactResource))
  name.vb: Task(Of ResourceCollection(Of ArtifactResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ArtifactResource
    name: ArtifactResource
    nameWithType: ArtifactResource
    fullName: Octopus.Client.Model.ArtifactResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ResourceCollection`1
    name: ResourceCollection
    nameWithType: ResourceCollection
    fullName: Octopus.Client.Model.ResourceCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ArtifactResource
    name: ArtifactResource
    nameWithType: ArtifactResource
    fullName: Octopus.Client.Model.ArtifactResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate
  name: GetTemplate
  nameWithType: IRunbookSnapshotRepository.GetTemplate
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetTemplate
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunTemplateResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunTemplateResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RunbookRunTemplateResource>
  nameWithType: Task<RunbookRunTemplateResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.RunbookRunTemplateResource>
  nameWithType.vb: Task(Of RunbookRunTemplateResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.RunbookRunTemplateResource)
  name.vb: Task(Of RunbookRunTemplateResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunTemplateResource
    name: RunbookRunTemplateResource
    nameWithType: RunbookRunTemplateResource
    fullName: Octopus.Client.Model.RunbookRunTemplateResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunTemplateResource
    name: RunbookRunTemplateResource
    nameWithType: RunbookRunTemplateResource
    fullName: Octopus.Client.Model.RunbookRunTemplateResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview
  name: GetPreview
  nameWithType: IRunbookSnapshotRepository.GetPreview
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.GetPreview
- uid: Octopus.Client.Model.DeploymentPromotionTarget
  commentId: T:Octopus.Client.Model.DeploymentPromotionTarget
  parent: Octopus.Client.Model
  name: DeploymentPromotionTarget
  nameWithType: DeploymentPromotionTarget
  fullName: Octopus.Client.Model.DeploymentPromotionTarget
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunPreviewResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.RunbookRunPreviewResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RunbookRunPreviewResource>
  nameWithType: Task<RunbookRunPreviewResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.RunbookRunPreviewResource>
  nameWithType.vb: Task(Of RunbookRunPreviewResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.RunbookRunPreviewResource)
  name.vb: Task(Of RunbookRunPreviewResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookRunPreviewResource
    name: RunbookRunPreviewResource
    nameWithType: RunbookRunPreviewResource
    fullName: Octopus.Client.Model.RunbookRunPreviewResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookRunPreviewResource
    name: RunbookRunPreviewResource
    nameWithType: RunbookRunPreviewResource
    fullName: Octopus.Client.Model.RunbookRunPreviewResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables
  name: SnapshotVariables
  nameWithType: IRunbookSnapshotRepository.SnapshotVariables
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.SnapshotVariables
- uid: System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotResource}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Model.RunbookSnapshotResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RunbookSnapshotResource>
  nameWithType: Task<RunbookSnapshotResource>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Model.RunbookSnapshotResource>
  nameWithType.vb: Task(Of RunbookSnapshotResource)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Model.RunbookSnapshotResource)
  name.vb: Task(Of RunbookSnapshotResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.RunbookSnapshotResource
    name: RunbookSnapshotResource
    nameWithType: RunbookSnapshotResource
    fullName: Octopus.Client.Model.RunbookSnapshotResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create*
  commentId: Overload:Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create
  name: Create
  nameWithType: IRunbookSnapshotRepository.Create
  fullName: Octopus.Client.Repositories.Async.IRunbookSnapshotRepository.Create
