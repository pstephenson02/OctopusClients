### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  commentId: T:Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  id: AccountUsageResource
  parent: Octopus.Client.Model.Accounts.Usages
  children:
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
  - Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
  langs:
  - csharp
  - vb
  name: AccountUsageResource
  nameWithType: AccountUsageResource
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AccountUsageResource
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: 'public class AccountUsageResource : Resource, IResource, IAuditedResource'
    content.vb: >-
      Public Class AccountUsageResource
          Inherits Resource
          Implements IResource, IAuditedResource
  inheritance:
  - System.Object
  - Octopus.Client.Model.Resource
  implements:
  - Octopus.Client.Extensibility.IResource
  - Octopus.Client.Model.IAuditedResource
  inheritedMembers:
  - Octopus.Client.Model.Resource.Id
  - Octopus.Client.Model.Resource.LastModifiedOn
  - Octopus.Client.Model.Resource.LastModifiedBy
  - Octopus.Client.Model.Resource.Links
  - Octopus.Client.Model.Resource.HasLink(System.String)
  - Octopus.Client.Model.Resource.Link(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor
  commentId: M:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor
  id: '#ctor'
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: AccountUsageResource()
  nameWithType: AccountUsageResource.AccountUsageResource()
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.AccountUsageResource()
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public AccountUsageResource()
    content.vb: Public Sub New
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
  id: Targets
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: Targets
  nameWithType: AccountUsageResource.Targets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Targets
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<TargetUsageEntry> Targets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.TargetUsageEntry}
    content.vb: Public Property Targets As ICollection(Of TargetUsageEntry)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
  id: DeploymentProcesses
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: DeploymentProcesses
  nameWithType: AccountUsageResource.DeploymentProcesses
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: DeploymentProcesses
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 19
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<StepUsage> DeploymentProcesses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsage}
    content.vb: Public Property DeploymentProcesses As ICollection(Of StepUsage)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
  id: Releases
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: Releases
  nameWithType: AccountUsageResource.Releases
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Releases
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 20
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<ReleaseUsage> Releases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ReleaseUsage}
    content.vb: Public Property Releases As ICollection(Of ReleaseUsage)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
  id: ProjectVariableSets
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: ProjectVariableSets
  nameWithType: AccountUsageResource.ProjectVariableSets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ProjectVariableSets
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 21
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<ProjectVariableSetUsage> ProjectVariableSets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage}
    content.vb: Public Property ProjectVariableSets As ICollection(Of ProjectVariableSetUsage)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
  id: LibraryVariableSets
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: LibraryVariableSets
  nameWithType: AccountUsageResource.LibraryVariableSets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: LibraryVariableSets
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 22
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<LibraryVariableSetUsageEntry> LibraryVariableSets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry}
    content.vb: Public Property LibraryVariableSets As ICollection(Of LibraryVariableSetUsageEntry)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
  id: RunbookProcesses
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: RunbookProcesses
  nameWithType: AccountUsageResource.RunbookProcesses
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RunbookProcesses
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<RunbookStepUsage> RunbookProcesses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookStepUsage}
    content.vb: Public Property RunbookProcesses As ICollection(Of RunbookStepUsage)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
  commentId: P:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
  id: RunbookSnapshots
  parent: Octopus.Client.Model.Accounts.Usages.AccountUsageResource
  langs:
  - csharp
  - vb
  name: RunbookSnapshots
  nameWithType: AccountUsageResource.RunbookSnapshots
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: RunbookSnapshots
    path: ../source/Octopus.Client/Model/Accounts/Usages/AccountUsageResource.cs
    startLine: 24
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model.Accounts.Usages
  syntax:
    content: public ICollection<RunbookSnapshotUsage> RunbookSnapshots { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage}
    content.vb: Public Property RunbookSnapshots As ICollection(Of RunbookSnapshotUsage)
  overload: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Model.Accounts.Usages
  commentId: N:Octopus.Client.Model.Accounts.Usages
  name: Octopus.Client.Model.Accounts.Usages
  nameWithType: Octopus.Client.Model.Accounts.Usages
  fullName: Octopus.Client.Model.Accounts.Usages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Model.Resource
  commentId: T:Octopus.Client.Model.Resource
  parent: Octopus.Client.Model
  name: Resource
  nameWithType: Resource
  fullName: Octopus.Client.Model.Resource
- uid: Octopus.Client.Extensibility.IResource
  commentId: T:Octopus.Client.Extensibility.IResource
  parent: Octopus.Client.Extensibility
  name: IResource
  nameWithType: IResource
  fullName: Octopus.Client.Extensibility.IResource
- uid: Octopus.Client.Model.IAuditedResource
  commentId: T:Octopus.Client.Model.IAuditedResource
  parent: Octopus.Client.Model
  name: IAuditedResource
  nameWithType: IAuditedResource
  fullName: Octopus.Client.Model.IAuditedResource
- uid: Octopus.Client.Model.Resource.Id
  commentId: P:Octopus.Client.Model.Resource.Id
  parent: Octopus.Client.Model.Resource
  name: Id
  nameWithType: Resource.Id
  fullName: Octopus.Client.Model.Resource.Id
- uid: Octopus.Client.Model.Resource.LastModifiedOn
  commentId: P:Octopus.Client.Model.Resource.LastModifiedOn
  parent: Octopus.Client.Model.Resource
  name: LastModifiedOn
  nameWithType: Resource.LastModifiedOn
  fullName: Octopus.Client.Model.Resource.LastModifiedOn
- uid: Octopus.Client.Model.Resource.LastModifiedBy
  commentId: P:Octopus.Client.Model.Resource.LastModifiedBy
  parent: Octopus.Client.Model.Resource
  name: LastModifiedBy
  nameWithType: Resource.LastModifiedBy
  fullName: Octopus.Client.Model.Resource.LastModifiedBy
- uid: Octopus.Client.Model.Resource.Links
  commentId: P:Octopus.Client.Model.Resource.Links
  parent: Octopus.Client.Model.Resource
  name: Links
  nameWithType: Resource.Links
  fullName: Octopus.Client.Model.Resource.Links
- uid: Octopus.Client.Model.Resource.HasLink(System.String)
  commentId: M:Octopus.Client.Model.Resource.HasLink(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: HasLink(String)
  nameWithType: Resource.HasLink(String)
  fullName: Octopus.Client.Model.Resource.HasLink(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.HasLink(System.String)
    name: HasLink
    nameWithType: Resource.HasLink
    fullName: Octopus.Client.Model.Resource.HasLink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Resource.Link(System.String)
  commentId: M:Octopus.Client.Model.Resource.Link(System.String)
  parent: Octopus.Client.Model.Resource
  isExternal: true
  name: Link(String)
  nameWithType: Resource.Link(String)
  fullName: Octopus.Client.Model.Resource.Link(System.String)
  spec.csharp:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Model.Resource.Link(System.String)
    name: Link
    nameWithType: Resource.Link
    fullName: Octopus.Client.Model.Resource.Link
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Extensibility
  commentId: N:Octopus.Client.Extensibility
  name: Octopus.Client.Extensibility
  nameWithType: Octopus.Client.Extensibility
  fullName: Octopus.Client.Extensibility
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.#ctor
  name: AccountUsageResource
  nameWithType: AccountUsageResource.AccountUsageResource
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.AccountUsageResource
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
  name: Targets
  nameWithType: AccountUsageResource.Targets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Targets
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.TargetUsageEntry}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.TargetUsageEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TargetUsageEntry>
  nameWithType: ICollection<TargetUsageEntry>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.TargetUsageEntry>
  nameWithType.vb: ICollection(Of TargetUsageEntry)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.TargetUsageEntry)
  name.vb: ICollection(Of TargetUsageEntry)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.TargetUsageEntry
    name: TargetUsageEntry
    nameWithType: TargetUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.TargetUsageEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.TargetUsageEntry
    name: TargetUsageEntry
    nameWithType: TargetUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.TargetUsageEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
  name: DeploymentProcesses
  nameWithType: AccountUsageResource.DeploymentProcesses
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.DeploymentProcesses
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsage}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.StepUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<StepUsage>
  nameWithType: ICollection<StepUsage>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.StepUsage>
  nameWithType.vb: ICollection(Of StepUsage)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.StepUsage)
  name.vb: ICollection(Of StepUsage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.StepUsage
    name: StepUsage
    nameWithType: StepUsage
    fullName: Octopus.Client.Model.Accounts.Usages.StepUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.StepUsage
    name: StepUsage
    nameWithType: StepUsage
    fullName: Octopus.Client.Model.Accounts.Usages.StepUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
  name: Releases
  nameWithType: AccountUsageResource.Releases
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.Releases
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ReleaseUsage}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ReleaseUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ReleaseUsage>
  nameWithType: ICollection<ReleaseUsage>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.ReleaseUsage>
  nameWithType.vb: ICollection(Of ReleaseUsage)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.ReleaseUsage)
  name.vb: ICollection(Of ReleaseUsage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.ReleaseUsage
    name: ReleaseUsage
    nameWithType: ReleaseUsage
    fullName: Octopus.Client.Model.Accounts.Usages.ReleaseUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.ReleaseUsage
    name: ReleaseUsage
    nameWithType: ReleaseUsage
    fullName: Octopus.Client.Model.Accounts.Usages.ReleaseUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
  name: ProjectVariableSets
  nameWithType: AccountUsageResource.ProjectVariableSets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.ProjectVariableSets
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ProjectVariableSetUsage>
  nameWithType: ICollection<ProjectVariableSetUsage>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage>
  nameWithType.vb: ICollection(Of ProjectVariableSetUsage)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage)
  name.vb: ICollection(Of ProjectVariableSetUsage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage
    name: ProjectVariableSetUsage
    nameWithType: ProjectVariableSetUsage
    fullName: Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage
    name: ProjectVariableSetUsage
    nameWithType: ProjectVariableSetUsage
    fullName: Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
  name: LibraryVariableSets
  nameWithType: AccountUsageResource.LibraryVariableSets
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.LibraryVariableSets
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<LibraryVariableSetUsageEntry>
  nameWithType: ICollection<LibraryVariableSetUsageEntry>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry>
  nameWithType.vb: ICollection(Of LibraryVariableSetUsageEntry)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry)
  name.vb: ICollection(Of LibraryVariableSetUsageEntry)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry
    name: LibraryVariableSetUsageEntry
    nameWithType: LibraryVariableSetUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry
    name: LibraryVariableSetUsageEntry
    nameWithType: LibraryVariableSetUsageEntry
    fullName: Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
  name: RunbookProcesses
  nameWithType: AccountUsageResource.RunbookProcesses
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookProcesses
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookStepUsage}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookStepUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<RunbookStepUsage>
  nameWithType: ICollection<RunbookStepUsage>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.RunbookStepUsage>
  nameWithType.vb: ICollection(Of RunbookStepUsage)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.RunbookStepUsage)
  name.vb: ICollection(Of RunbookStepUsage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.RunbookStepUsage
    name: RunbookStepUsage
    nameWithType: RunbookStepUsage
    fullName: Octopus.Client.Model.Accounts.Usages.RunbookStepUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.RunbookStepUsage
    name: RunbookStepUsage
    nameWithType: RunbookStepUsage
    fullName: Octopus.Client.Model.Accounts.Usages.RunbookStepUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots*
  commentId: Overload:Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
  name: RunbookSnapshots
  nameWithType: AccountUsageResource.RunbookSnapshots
  fullName: Octopus.Client.Model.Accounts.Usages.AccountUsageResource.RunbookSnapshots
- uid: System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage}
  commentId: T:System.Collections.Generic.ICollection{Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<RunbookSnapshotUsage>
  nameWithType: ICollection<RunbookSnapshotUsage>
  fullName: System.Collections.Generic.ICollection<Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage>
  nameWithType.vb: ICollection(Of RunbookSnapshotUsage)
  fullName.vb: System.Collections.Generic.ICollection(Of Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage)
  name.vb: ICollection(Of RunbookSnapshotUsage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage
    name: RunbookSnapshotUsage
    nameWithType: RunbookSnapshotUsage
    fullName: Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage
    name: RunbookSnapshotUsage
    nameWithType: RunbookSnapshotUsage
    fullName: Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage
  - name: )
    nameWithType: )
    fullName: )
