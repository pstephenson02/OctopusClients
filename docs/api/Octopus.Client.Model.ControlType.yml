### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.ControlType
  commentId: T:Octopus.Client.Model.ControlType
  id: ControlType
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.ControlType.AmazonWebServicesAccount
  - Octopus.Client.Model.ControlType.AsDisplaySettings(System.String)
  - Octopus.Client.Model.ControlType.AzureAccount
  - Octopus.Client.Model.ControlType.Certificate
  - Octopus.Client.Model.ControlType.Checkbox
  - Octopus.Client.Model.ControlType.ControlTypeKey
  - Octopus.Client.Model.ControlType.MultiLineText
  - Octopus.Client.Model.ControlType.Select
  - Octopus.Client.Model.ControlType.Sensitive
  - Octopus.Client.Model.ControlType.SingleLineText
  - Octopus.Client.Model.ControlType.StepName
  langs:
  - csharp
  - vb
  name: ControlType
  nameWithType: ControlType
  fullName: Octopus.Client.Model.ControlType
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ControlType
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 4
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static class ControlType
    content.vb: Public Module ControlType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Octopus.Client.Model.ControlType.ControlTypeKey
  commentId: F:Octopus.Client.Model.ControlType.ControlTypeKey
  id: ControlTypeKey
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: ControlTypeKey
  nameWithType: ControlType.ControlTypeKey
  fullName: Octopus.Client.Model.ControlType.ControlTypeKey
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ControlTypeKey
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 6
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly string ControlTypeKey
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ControlTypeKey As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ControlType.SingleLineText
  commentId: F:Octopus.Client.Model.ControlType.SingleLineText
  id: SingleLineText
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: SingleLineText
  nameWithType: ControlType.SingleLineText
  fullName: Octopus.Client.Model.ControlType.SingleLineText
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SingleLineText
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string SingleLineText = "SingleLineText"
    return:
      type: System.String
    content.vb: Public Const SingleLineText As String = "SingleLineText"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.MultiLineText
  commentId: F:Octopus.Client.Model.ControlType.MultiLineText
  id: MultiLineText
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: MultiLineText
  nameWithType: ControlType.MultiLineText
  fullName: Octopus.Client.Model.ControlType.MultiLineText
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: MultiLineText
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string MultiLineText = "MultiLineText"
    return:
      type: System.String
    content.vb: Public Const MultiLineText As String = "MultiLineText"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.Select
  commentId: F:Octopus.Client.Model.ControlType.Select
  id: Select
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: ControlType.Select
  fullName: Octopus.Client.Model.ControlType.Select
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Select
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 10
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Select = "Select"
    return:
      type: System.String
    content.vb: Public Const Select As String = "Select"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.Checkbox
  commentId: F:Octopus.Client.Model.ControlType.Checkbox
  id: Checkbox
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: Checkbox
  nameWithType: ControlType.Checkbox
  fullName: Octopus.Client.Model.ControlType.Checkbox
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Checkbox
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Checkbox = "Checkbox"
    return:
      type: System.String
    content.vb: Public Const Checkbox As String = "Checkbox"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.Sensitive
  commentId: F:Octopus.Client.Model.ControlType.Sensitive
  id: Sensitive
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: Sensitive
  nameWithType: ControlType.Sensitive
  fullName: Octopus.Client.Model.ControlType.Sensitive
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Sensitive
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 12
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Sensitive = "Sensitive"
    return:
      type: System.String
    content.vb: Public Const Sensitive As String = "Sensitive"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.StepName
  commentId: F:Octopus.Client.Model.ControlType.StepName
  id: StepName
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: StepName
  nameWithType: ControlType.StepName
  fullName: Octopus.Client.Model.ControlType.StepName
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: StepName
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 13
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string StepName = "StepName"
    return:
      type: System.String
    content.vb: Public Const StepName As String = "StepName"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.AzureAccount
  commentId: F:Octopus.Client.Model.ControlType.AzureAccount
  id: AzureAccount
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: AzureAccount
  nameWithType: ControlType.AzureAccount
  fullName: Octopus.Client.Model.ControlType.AzureAccount
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AzureAccount
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 14
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string AzureAccount = "AzureAccount"
    return:
      type: System.String
    content.vb: Public Const AzureAccount As String = "AzureAccount"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.AmazonWebServicesAccount
  commentId: F:Octopus.Client.Model.ControlType.AmazonWebServicesAccount
  id: AmazonWebServicesAccount
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: AmazonWebServicesAccount
  nameWithType: ControlType.AmazonWebServicesAccount
  fullName: Octopus.Client.Model.ControlType.AmazonWebServicesAccount
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AmazonWebServicesAccount
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 15
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string AmazonWebServicesAccount = "AmazonWebServicesAccount"
    return:
      type: System.String
    content.vb: Public Const AmazonWebServicesAccount As String = "AmazonWebServicesAccount"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.Certificate
  commentId: F:Octopus.Client.Model.ControlType.Certificate
  id: Certificate
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: ControlType.Certificate
  fullName: Octopus.Client.Model.ControlType.Certificate
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Certificate
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public const string Certificate = "Certificate"
    return:
      type: System.String
    content.vb: Public Const Certificate As String = "Certificate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Octopus.Client.Model.ControlType.AsDisplaySettings(System.String)
  commentId: M:Octopus.Client.Model.ControlType.AsDisplaySettings(System.String)
  id: AsDisplaySettings(System.String)
  parent: Octopus.Client.Model.ControlType
  langs:
  - csharp
  - vb
  name: AsDisplaySettings(String)
  nameWithType: ControlType.AsDisplaySettings(String)
  fullName: Octopus.Client.Model.ControlType.AsDisplaySettings(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/ControlType.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AsDisplaySettings
    path: ../source/Octopus.Client/Model/ControlType.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static Dictionary<string, string> AsDisplaySettings(string controlType)
    parameters:
    - id: controlType
      type: System.String
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared Function AsDisplaySettings(controlType As String) As Dictionary(Of String, String)
  overload: Octopus.Client.Model.ControlType.AsDisplaySettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.ControlType.AsDisplaySettings*
  commentId: Overload:Octopus.Client.Model.ControlType.AsDisplaySettings
  name: AsDisplaySettings
  nameWithType: ControlType.AsDisplaySettings
  fullName: Octopus.Client.Model.ControlType.AsDisplaySettings
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
