### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Model.ScriptSyntaxMeta
  commentId: T:Octopus.Client.Model.ScriptSyntaxMeta
  id: ScriptSyntaxMeta
  parent: Octopus.Client.Model
  children:
  - Octopus.Client.Model.ScriptSyntaxMeta.All
  - Octopus.Client.Model.ScriptSyntaxMeta.Bash
  - Octopus.Client.Model.ScriptSyntaxMeta.CSharp
  - Octopus.Client.Model.ScriptSyntaxMeta.Extension
  - Octopus.Client.Model.ScriptSyntaxMeta.FromExtension(System.String)
  - Octopus.Client.Model.ScriptSyntaxMeta.FromName(System.String)
  - Octopus.Client.Model.ScriptSyntaxMeta.FSharp
  - Octopus.Client.Model.ScriptSyntaxMeta.Name
  - Octopus.Client.Model.ScriptSyntaxMeta.PowerShell
  - Octopus.Client.Model.ScriptSyntaxMeta.Python
  - Octopus.Client.Model.ScriptSyntaxMeta.ScriptSyntax
  langs:
  - csharp
  - vb
  name: ScriptSyntaxMeta
  nameWithType: ScriptSyntaxMeta
  fullName: Octopus.Client.Model.ScriptSyntaxMeta
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ScriptSyntaxMeta
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 5
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public class ScriptSyntaxMeta
    content.vb: Public Class ScriptSyntaxMeta
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Model.ScriptSyntaxMeta.ScriptSyntax
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.ScriptSyntax
  id: ScriptSyntax
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: ScriptSyntax
  nameWithType: ScriptSyntaxMeta.ScriptSyntax
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.ScriptSyntax
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ScriptSyntax
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public readonly ScriptSyntax ScriptSyntax
    return:
      type: Octopus.Client.Model.ScriptSyntax
    content.vb: Public ReadOnly ScriptSyntax As ScriptSyntax
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.Extension
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.Extension
  id: Extension
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: ScriptSyntaxMeta.Extension
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.Extension
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Extension
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 8
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public readonly string Extension
    return:
      type: System.String
    content.vb: Public ReadOnly Extension As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.Name
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.Name
  id: Name
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ScriptSyntaxMeta.Name
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.Name
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Name
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 9
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.FromName(System.String)
  commentId: M:Octopus.Client.Model.ScriptSyntaxMeta.FromName(System.String)
  id: FromName(System.String)
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: FromName(String)
  nameWithType: ScriptSyntaxMeta.FromName(String)
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.FromName(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FromName
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static ScriptSyntaxMeta FromName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared Function FromName(name As String) As ScriptSyntaxMeta
  overload: Octopus.Client.Model.ScriptSyntaxMeta.FromName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.Model.ScriptSyntaxMeta.FromExtension(System.String)
  commentId: M:Octopus.Client.Model.ScriptSyntaxMeta.FromExtension(System.String)
  id: FromExtension(System.String)
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: FromExtension(String)
  nameWithType: ScriptSyntaxMeta.FromExtension(String)
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.FromExtension(System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FromExtension
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 23
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static ScriptSyntaxMeta FromExtension(string extension)
    parameters:
    - id: extension
      type: System.String
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared Function FromExtension(extension As String) As ScriptSyntaxMeta
  overload: Octopus.Client.Model.ScriptSyntaxMeta.FromExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Octopus.Client.Model.ScriptSyntaxMeta.PowerShell
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.PowerShell
  id: PowerShell
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: PowerShell
  nameWithType: ScriptSyntaxMeta.PowerShell
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.PowerShell
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: PowerShell
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 29
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly ScriptSyntaxMeta PowerShell
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared ReadOnly PowerShell As ScriptSyntaxMeta
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.Bash
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.Bash
  id: Bash
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: Bash
  nameWithType: ScriptSyntaxMeta.Bash
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.Bash
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Bash
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 30
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly ScriptSyntaxMeta Bash
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared ReadOnly Bash As ScriptSyntaxMeta
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.CSharp
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.CSharp
  id: CSharp
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: CSharp
  nameWithType: ScriptSyntaxMeta.CSharp
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.CSharp
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CSharp
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 31
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly ScriptSyntaxMeta CSharp
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared ReadOnly CSharp As ScriptSyntaxMeta
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.FSharp
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.FSharp
  id: FSharp
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: FSharp
  nameWithType: ScriptSyntaxMeta.FSharp
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.FSharp
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: FSharp
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 32
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly ScriptSyntaxMeta FSharp
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared ReadOnly FSharp As ScriptSyntaxMeta
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.Python
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.Python
  id: Python
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: Python
  nameWithType: ScriptSyntaxMeta.Python
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.Python
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Python
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 33
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static readonly ScriptSyntaxMeta Python
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta
    content.vb: Public Shared ReadOnly Python As ScriptSyntaxMeta
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Octopus.Client.Model.ScriptSyntaxMeta.All
  commentId: F:Octopus.Client.Model.ScriptSyntaxMeta.All
  id: All
  parent: Octopus.Client.Model.ScriptSyntaxMeta
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ScriptSyntaxMeta.All
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.All
  type: Field
  source:
    remote:
      path: source/Octopus.Client/Model/ScriptSyntaxMeta.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: All
    path: ../source/Octopus.Client/Model/ScriptSyntaxMeta.cs
    startLine: 34
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Model
  syntax:
    content: public static ScriptSyntaxMeta[] All
    return:
      type: Octopus.Client.Model.ScriptSyntaxMeta[]
    content.vb: Public Shared All As ScriptSyntaxMeta()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Model.ScriptSyntax
  commentId: T:Octopus.Client.Model.ScriptSyntax
  parent: Octopus.Client.Model
  name: ScriptSyntax
  nameWithType: ScriptSyntax
  fullName: Octopus.Client.Model.ScriptSyntax
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Octopus.Client.Model.ScriptSyntaxMeta.FromName*
  commentId: Overload:Octopus.Client.Model.ScriptSyntaxMeta.FromName
  name: FromName
  nameWithType: ScriptSyntaxMeta.FromName
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.FromName
- uid: Octopus.Client.Model.ScriptSyntaxMeta
  commentId: T:Octopus.Client.Model.ScriptSyntaxMeta
  parent: Octopus.Client.Model
  name: ScriptSyntaxMeta
  nameWithType: ScriptSyntaxMeta
  fullName: Octopus.Client.Model.ScriptSyntaxMeta
- uid: Octopus.Client.Model.ScriptSyntaxMeta.FromExtension*
  commentId: Overload:Octopus.Client.Model.ScriptSyntaxMeta.FromExtension
  name: FromExtension
  nameWithType: ScriptSyntaxMeta.FromExtension
  fullName: Octopus.Client.Model.ScriptSyntaxMeta.FromExtension
- uid: Octopus.Client.Model.ScriptSyntaxMeta[]
  isExternal: true
  name: ScriptSyntaxMeta[]
  nameWithType: ScriptSyntaxMeta[]
  fullName: Octopus.Client.Model.ScriptSyntaxMeta[]
  nameWithType.vb: ScriptSyntaxMeta()
  fullName.vb: Octopus.Client.Model.ScriptSyntaxMeta()
  name.vb: ScriptSyntaxMeta()
  spec.csharp:
  - uid: Octopus.Client.Model.ScriptSyntaxMeta
    name: ScriptSyntaxMeta
    nameWithType: ScriptSyntaxMeta
    fullName: Octopus.Client.Model.ScriptSyntaxMeta
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.ScriptSyntaxMeta
    name: ScriptSyntaxMeta
    nameWithType: ScriptSyntaxMeta
    fullName: Octopus.Client.Model.ScriptSyntaxMeta
  - name: ()
    nameWithType: ()
    fullName: ()
