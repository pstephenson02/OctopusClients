### YamlMime:ManagedReference
items:
- uid: Octopus.Client.Editors.Async.ChannelEditor
  commentId: T:Octopus.Client.Editors.Async.ChannelEditor
  id: ChannelEditor
  parent: Octopus.Client.Editors.Async
  children:
  - Octopus.Client.Editors.Async.ChannelEditor.#ctor(Octopus.Client.Repositories.Async.IChannelRepository)
  - Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions(System.String,System.String,Octopus.Client.Model.DeploymentProcessResource)
  - Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
  - Octopus.Client.Editors.Async.ChannelEditor.AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
  - Octopus.Client.Editors.Async.ChannelEditor.AddRule(System.String,System.String,Octopus.Client.Model.DeploymentActionResource[])
  - Octopus.Client.Editors.Async.ChannelEditor.ClearRules
  - Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags
  - Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String)
  - Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  - Octopus.Client.Editors.Async.ChannelEditor.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  - Octopus.Client.Editors.Async.ChannelEditor.Instance
  - Octopus.Client.Editors.Async.ChannelEditor.Save
  - Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel
  - Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  langs:
  - csharp
  - vb
  name: ChannelEditor
  nameWithType: ChannelEditor
  fullName: Octopus.Client.Editors.Async.ChannelEditor
  type: Class
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ChannelEditor
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 7
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: 'public class ChannelEditor : IResourceEditor<ChannelResource, ChannelEditor>, IResourceBuilder'
    content.vb: >-
      Public Class ChannelEditor
          Implements IResourceEditor(Of ChannelResource, ChannelEditor), IResourceBuilder
  inheritance:
  - System.Object
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  - Octopus.Client.Editors.Async.IResourceBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Octopus.Client.Editors.Async.ChannelEditor.#ctor(Octopus.Client.Repositories.Async.IChannelRepository)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.#ctor(Octopus.Client.Repositories.Async.IChannelRepository)
  id: '#ctor(Octopus.Client.Repositories.Async.IChannelRepository)'
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: ChannelEditor(IChannelRepository)
  nameWithType: ChannelEditor.ChannelEditor(IChannelRepository)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ChannelEditor(Octopus.Client.Repositories.Async.IChannelRepository)
  type: Constructor
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: .ctor
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 11
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor(IChannelRepository repository)
    parameters:
    - id: repository
      type: Octopus.Client.Repositories.Async.IChannelRepository
    content.vb: Public Sub New(repository As IChannelRepository)
  overload: Octopus.Client.Editors.Async.ChannelEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.Instance
  commentId: P:Octopus.Client.Editors.Async.ChannelEditor.Instance
  id: Instance
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ChannelEditor.Instance
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Instance
  type: Property
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Instance
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 16
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelResource Instance { get; }
    parameters: []
    return:
      type: Octopus.Client.Model.ChannelResource
    content.vb: Public ReadOnly Property Instance As ChannelResource
  overload: Octopus.Client.Editors.Async.ChannelEditor.Instance*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Instance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String)
  id: CreateOrModify(Octopus.Client.Model.ProjectResource,System.String)
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(ProjectResource, String)
  nameWithType: ChannelEditor.CreateOrModify(ProjectResource, String)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 18
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<ChannelEditor> CreateOrModify(ProjectResource project, string name)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ChannelEditor}
    content.vb: Public Function CreateOrModify(project As ProjectResource, name As String) As Task(Of ChannelEditor)
  overload: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  id: CreateOrModify(Octopus.Client.Model.ProjectResource,System.String,System.String)
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: CreateOrModify(ProjectResource, String, String)
  nameWithType: ChannelEditor.CreateOrModify(ProjectResource, String, String)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify(Octopus.Client.Model.ProjectResource, System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: CreateOrModify
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 40
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description)
    parameters:
    - id: project
      type: Octopus.Client.Model.ProjectResource
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ChannelEditor}
    content.vb: Public Function CreateOrModify(project As ProjectResource, name As String, description As String) As Task(Of ChannelEditor)
  overload: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel
  id: SetAsDefaultChannel
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: SetAsDefaultChannel()
  nameWithType: ChannelEditor.SetAsDefaultChannel()
  fullName: Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: SetAsDefaultChannel
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 64
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor SetAsDefaultChannel()
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function SetAsDefaultChannel As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  id: UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: UsingLifecycle(LifecycleResource)
  nameWithType: ChannelEditor.UsingLifecycle(LifecycleResource)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: UsingLifecycle
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 70
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor UsingLifecycle(LifecycleResource lifecycle)
    parameters:
    - id: lifecycle
      type: Octopus.Client.Model.LifecycleResource
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function UsingLifecycle(lifecycle As LifecycleResource) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.ClearRules
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.ClearRules
  id: ClearRules
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: ClearRules()
  nameWithType: ChannelEditor.ClearRules()
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ClearRules()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ClearRules
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 76
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor ClearRules()
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function ClearRules As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.ClearRules*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
  id: AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: AddRule(ChannelVersionRuleResource)
  nameWithType: ChannelEditor.AddRule(ChannelVersionRuleResource)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AddRule
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 82
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor AddRule(ChannelVersionRuleResource rule)
    parameters:
    - id: rule
      type: Octopus.Client.Model.ChannelVersionRuleResource
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function AddRule(rule As ChannelVersionRuleResource) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.AddRule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions(System.String,System.String,Octopus.Client.Model.DeploymentProcessResource)
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions(System.String,System.String,Octopus.Client.Model.DeploymentProcessResource)
  id: AddCommonRuleForAllActions(System.String,System.String,Octopus.Client.Model.DeploymentProcessResource)
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: AddCommonRuleForAllActions(String, String, DeploymentProcessResource)
  nameWithType: ChannelEditor.AddCommonRuleForAllActions(String, String, DeploymentProcessResource)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions(System.String, System.String, Octopus.Client.Model.DeploymentProcessResource)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AddCommonRuleForAllActions
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 88
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process)
    parameters:
    - id: versionRange
      type: System.String
    - id: tagRegex
      type: System.String
    - id: process
      type: Octopus.Client.Model.DeploymentProcessResource
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function AddCommonRuleForAllActions(versionRange As String, tagRegex As String, process As DeploymentProcessResource) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddRule(System.String,System.String,Octopus.Client.Model.DeploymentActionResource[])
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.AddRule(System.String,System.String,Octopus.Client.Model.DeploymentActionResource[])
  id: AddRule(System.String,System.String,Octopus.Client.Model.DeploymentActionResource[])
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: AddRule(String, String, DeploymentActionResource[])
  nameWithType: ChannelEditor.AddRule(String, String, DeploymentActionResource[])
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddRule(System.String, System.String, Octopus.Client.Model.DeploymentActionResource[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AddRule
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 94
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor AddRule(string versionRange, string tagRegex, params DeploymentActionResource[] actions)
    parameters:
    - id: versionRange
      type: System.String
    - id: tagRegex
      type: System.String
    - id: actions
      type: Octopus.Client.Model.DeploymentActionResource[]
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function AddRule(versionRange As String, tagRegex As String, ParamArray actions As DeploymentActionResource()) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.AddRule*
  nameWithType.vb: ChannelEditor.AddRule(String, String, DeploymentActionResource())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.ChannelEditor.AddRule(System.String, System.String, Octopus.Client.Model.DeploymentActionResource())
  name.vb: AddRule(String, String, DeploymentActionResource())
- uid: Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags
  id: ClearTenantTags
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: ClearTenantTags()
  nameWithType: ChannelEditor.ClearTenantTags()
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: ClearTenantTags
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 100
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor ClearTenantTags()
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function ClearTenantTags As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
  id: AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: AddOrUpdateTenantTags(TagResource[])
  nameWithType: ChannelEditor.AddOrUpdateTenantTags(TagResource[])
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: AddOrUpdateTenantTags
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 106
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor AddOrUpdateTenantTags(params TagResource[] tags)
    parameters:
    - id: tags
      type: Octopus.Client.Model.TagResource[]
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function AddOrUpdateTenantTags(ParamArray tags As TagResource()) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags*
  nameWithType.vb: ChannelEditor.AddOrUpdateTenantTags(TagResource())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags(Octopus.Client.Model.TagResource())
  name.vb: AddOrUpdateTenantTags(TagResource())
- uid: Octopus.Client.Editors.Async.ChannelEditor.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  id: Customize(System.Action{Octopus.Client.Model.ChannelResource})
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: Customize(Action<ChannelResource>)
  nameWithType: ChannelEditor.Customize(Action<ChannelResource>)
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Customize(System.Action<Octopus.Client.Model.ChannelResource>)
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Customize
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 112
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public ChannelEditor Customize(Action<ChannelResource> customize)
    parameters:
    - id: customize
      type: System.Action{Octopus.Client.Model.ChannelResource}
    return:
      type: Octopus.Client.Editors.Async.ChannelEditor
    content.vb: Public Function Customize(customize As Action(Of ChannelResource)) As ChannelEditor
  overload: Octopus.Client.Editors.Async.ChannelEditor.Customize*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  nameWithType.vb: ChannelEditor.Customize(Action(Of ChannelResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Octopus.Client.Editors.Async.ChannelEditor.Customize(System.Action(Of Octopus.Client.Model.ChannelResource))
  name.vb: Customize(Action(Of ChannelResource))
- uid: Octopus.Client.Editors.Async.ChannelEditor.Save
  commentId: M:Octopus.Client.Editors.Async.ChannelEditor.Save
  id: Save
  parent: Octopus.Client.Editors.Async.ChannelEditor
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: ChannelEditor.Save()
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Save()
  type: Method
  source:
    remote:
      path: source/Octopus.Client/Editors/Async/ChannelEditor.cs
      branch: docfx
      repo: https://github.com/pstephenson02/OctopusClients.git
    id: Save
    path: ../source/Octopus.Client/Editors/Async/ChannelEditor.cs
    startLine: 118
  assemblies:
  - Octopus.Client
  namespace: Octopus.Client.Editors.Async
  syntax:
    content: public Task<ChannelEditor> Save()
    return:
      type: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ChannelEditor}
    content.vb: Public Function Save As Task(Of ChannelEditor)
  overload: Octopus.Client.Editors.Async.ChannelEditor.Save*
  implements:
  - Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Octopus.Client.Editors.Async
  commentId: N:Octopus.Client.Editors.Async
  name: Octopus.Client.Editors.Async
  nameWithType: Octopus.Client.Editors.Async
  fullName: Octopus.Client.Editors.Async
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  parent: Octopus.Client.Editors.Async
  definition: Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<ChannelResource, ChannelEditor>
  nameWithType: IResourceEditor<ChannelResource, ChannelEditor>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>
  nameWithType.vb: IResourceEditor(Of ChannelResource, ChannelEditor)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor)
  name.vb: IResourceEditor(Of ChannelResource, ChannelEditor)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.ChannelEditor
    name: ChannelEditor
    nameWithType: ChannelEditor
    fullName: Octopus.Client.Editors.Async.ChannelEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Octopus.Client.Editors.Async.ChannelEditor
    name: ChannelEditor
    nameWithType: ChannelEditor
    fullName: Octopus.Client.Editors.Async.ChannelEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceBuilder
  commentId: T:Octopus.Client.Editors.Async.IResourceBuilder
  parent: Octopus.Client.Editors.Async
  name: IResourceBuilder
  nameWithType: IResourceBuilder
  fullName: Octopus.Client.Editors.Async.IResourceBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Octopus.Client.Editors.Async.IResourceEditor`2
  commentId: T:Octopus.Client.Editors.Async.IResourceEditor`2
  name: IResourceEditor<TResource, TResourceBuilder>
  nameWithType: IResourceEditor<TResource, TResourceBuilder>
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder)
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder)
  name.vb: IResourceEditor(Of TResource, TResourceBuilder)
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2
    name: IResourceEditor
    nameWithType: IResourceEditor
    fullName: Octopus.Client.Editors.Async.IResourceEditor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResourceBuilder
    nameWithType: TResourceBuilder
    fullName: TResourceBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.ChannelEditor.#ctor*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.#ctor
  name: ChannelEditor
  nameWithType: ChannelEditor.ChannelEditor
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ChannelEditor
- uid: Octopus.Client.Repositories.Async.IChannelRepository
  commentId: T:Octopus.Client.Repositories.Async.IChannelRepository
  parent: Octopus.Client.Repositories.Async
  name: IChannelRepository
  nameWithType: IChannelRepository
  fullName: Octopus.Client.Repositories.Async.IChannelRepository
- uid: Octopus.Client.Repositories.Async
  commentId: N:Octopus.Client.Repositories.Async
  name: Octopus.Client.Repositories.Async
  nameWithType: Octopus.Client.Repositories.Async
  fullName: Octopus.Client.Repositories.Async
- uid: Octopus.Client.Editors.Async.ChannelEditor.Instance*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.Instance
  name: Instance
  nameWithType: ChannelEditor.Instance
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Instance
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Instance
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<ChannelResource, ChannelEditor>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>.Instance
  nameWithType.vb: IResourceEditor(Of ChannelResource, ChannelEditor).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor).Instance
- uid: Octopus.Client.Model.ChannelResource
  commentId: T:Octopus.Client.Model.ChannelResource
  parent: Octopus.Client.Model
  name: ChannelResource
  nameWithType: ChannelResource
  fullName: Octopus.Client.Model.ChannelResource
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  commentId: P:Octopus.Client.Editors.Async.IResourceEditor`2.Instance
  name: Instance
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Instance
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Instance
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Instance
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Instance
- uid: Octopus.Client.Model
  commentId: N:Octopus.Client.Model
  name: Octopus.Client.Model
  nameWithType: Octopus.Client.Model
  fullName: Octopus.Client.Model
- uid: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify
  name: CreateOrModify
  nameWithType: ChannelEditor.CreateOrModify
  fullName: Octopus.Client.Editors.Async.ChannelEditor.CreateOrModify
- uid: Octopus.Client.Model.ProjectResource
  commentId: T:Octopus.Client.Model.ProjectResource
  parent: Octopus.Client.Model
  name: ProjectResource
  nameWithType: ProjectResource
  fullName: Octopus.Client.Model.ProjectResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ChannelEditor}
  commentId: T:System.Threading.Tasks.Task{Octopus.Client.Editors.Async.ChannelEditor}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ChannelEditor>
  nameWithType: Task<ChannelEditor>
  fullName: System.Threading.Tasks.Task<Octopus.Client.Editors.Async.ChannelEditor>
  nameWithType.vb: Task(Of ChannelEditor)
  fullName.vb: System.Threading.Tasks.Task(Of Octopus.Client.Editors.Async.ChannelEditor)
  name.vb: Task(Of ChannelEditor)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Editors.Async.ChannelEditor
    name: ChannelEditor
    nameWithType: ChannelEditor
    fullName: Octopus.Client.Editors.Async.ChannelEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Editors.Async.ChannelEditor
    name: ChannelEditor
    nameWithType: ChannelEditor
    fullName: Octopus.Client.Editors.Async.ChannelEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel
  name: SetAsDefaultChannel
  nameWithType: ChannelEditor.SetAsDefaultChannel
  fullName: Octopus.Client.Editors.Async.ChannelEditor.SetAsDefaultChannel
- uid: Octopus.Client.Editors.Async.ChannelEditor
  commentId: T:Octopus.Client.Editors.Async.ChannelEditor
  parent: Octopus.Client.Editors.Async
  name: ChannelEditor
  nameWithType: ChannelEditor
  fullName: Octopus.Client.Editors.Async.ChannelEditor
- uid: Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle
  name: UsingLifecycle
  nameWithType: ChannelEditor.UsingLifecycle
  fullName: Octopus.Client.Editors.Async.ChannelEditor.UsingLifecycle
- uid: Octopus.Client.Model.LifecycleResource
  commentId: T:Octopus.Client.Model.LifecycleResource
  parent: Octopus.Client.Model
  name: LifecycleResource
  nameWithType: LifecycleResource
  fullName: Octopus.Client.Model.LifecycleResource
- uid: Octopus.Client.Editors.Async.ChannelEditor.ClearRules*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.ClearRules
  name: ClearRules
  nameWithType: ChannelEditor.ClearRules
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ClearRules
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddRule*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.AddRule
  name: AddRule
  nameWithType: ChannelEditor.AddRule
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddRule
- uid: Octopus.Client.Model.ChannelVersionRuleResource
  commentId: T:Octopus.Client.Model.ChannelVersionRuleResource
  parent: Octopus.Client.Model
  name: ChannelVersionRuleResource
  nameWithType: ChannelVersionRuleResource
  fullName: Octopus.Client.Model.ChannelVersionRuleResource
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions
  name: AddCommonRuleForAllActions
  nameWithType: ChannelEditor.AddCommonRuleForAllActions
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddCommonRuleForAllActions
- uid: Octopus.Client.Model.DeploymentProcessResource
  commentId: T:Octopus.Client.Model.DeploymentProcessResource
  parent: Octopus.Client.Model
  name: DeploymentProcessResource
  nameWithType: DeploymentProcessResource
  fullName: Octopus.Client.Model.DeploymentProcessResource
- uid: Octopus.Client.Model.DeploymentActionResource[]
  isExternal: true
  name: DeploymentActionResource[]
  nameWithType: DeploymentActionResource[]
  fullName: Octopus.Client.Model.DeploymentActionResource[]
  nameWithType.vb: DeploymentActionResource()
  fullName.vb: Octopus.Client.Model.DeploymentActionResource()
  name.vb: DeploymentActionResource()
  spec.csharp:
  - uid: Octopus.Client.Model.DeploymentActionResource
    name: DeploymentActionResource
    nameWithType: DeploymentActionResource
    fullName: Octopus.Client.Model.DeploymentActionResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.DeploymentActionResource
    name: DeploymentActionResource
    nameWithType: DeploymentActionResource
    fullName: Octopus.Client.Model.DeploymentActionResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags
  name: ClearTenantTags
  nameWithType: ChannelEditor.ClearTenantTags
  fullName: Octopus.Client.Editors.Async.ChannelEditor.ClearTenantTags
- uid: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags
  name: AddOrUpdateTenantTags
  nameWithType: ChannelEditor.AddOrUpdateTenantTags
  fullName: Octopus.Client.Editors.Async.ChannelEditor.AddOrUpdateTenantTags
- uid: Octopus.Client.Model.TagResource[]
  isExternal: true
  name: TagResource[]
  nameWithType: TagResource[]
  fullName: Octopus.Client.Model.TagResource[]
  nameWithType.vb: TagResource()
  fullName.vb: Octopus.Client.Model.TagResource()
  name.vb: TagResource()
  spec.csharp:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Octopus.Client.Model.TagResource
    name: TagResource
    nameWithType: TagResource
    fullName: Octopus.Client.Model.TagResource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Octopus.Client.Editors.Async.ChannelEditor.Customize*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.Customize
  name: Customize
  nameWithType: ChannelEditor.Customize
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Customize
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Customize(System.Action{Octopus.Client.Model.ChannelResource})
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  name: Customize(Action<ChannelResource>)
  nameWithType: IResourceEditor<ChannelResource, ChannelEditor>.Customize(Action<ChannelResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>.Customize(System.Action<Octopus.Client.Model.ChannelResource>)
  nameWithType.vb: IResourceEditor(Of ChannelResource, ChannelEditor).Customize(Action(Of ChannelResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor).Customize(System.Action(Of Octopus.Client.Model.ChannelResource))
  name.vb: Customize(Action(Of ChannelResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<ChannelResource, ChannelEditor>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of ChannelResource, ChannelEditor).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Octopus.Client.Model.ChannelResource}
  commentId: T:System.Action{Octopus.Client.Model.ChannelResource}
  parent: System
  definition: System.Action`1
  name: Action<ChannelResource>
  nameWithType: Action<ChannelResource>
  fullName: System.Action<Octopus.Client.Model.ChannelResource>
  nameWithType.vb: Action(Of ChannelResource)
  fullName.vb: System.Action(Of Octopus.Client.Model.ChannelResource)
  name.vb: Action(Of ChannelResource)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Octopus.Client.Model.ChannelResource
    name: ChannelResource
    nameWithType: ChannelResource
    fullName: Octopus.Client.Model.ChannelResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
  isExternal: true
  name: Customize(Action<TResource>)
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize(Action<TResource>)
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize(System.Action<TResource>)
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Customize(Action(Of TResource))
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize(System.Action(Of TResource))
  name.vb: Customize(Action(Of TResource))
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Customize(System.Action{`0})
    name: Customize
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Customize
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Customize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.ChannelEditor.Save*
  commentId: Overload:Octopus.Client.Editors.Async.ChannelEditor.Save
  name: Save
  nameWithType: ChannelEditor.Save
  fullName: Octopus.Client.Editors.Async.ChannelEditor.Save
- uid: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}.Save
  parent: Octopus.Client.Editors.Async.IResourceEditor{Octopus.Client.Model.ChannelResource,Octopus.Client.Editors.Async.ChannelEditor}
  definition: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<ChannelResource, ChannelEditor>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>.Save()
  nameWithType.vb: IResourceEditor(Of ChannelResource, ChannelEditor).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<ChannelResource, ChannelEditor>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of ChannelResource, ChannelEditor).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of Octopus.Client.Model.ChannelResource, Octopus.Client.Editors.Async.ChannelEditor).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
  commentId: M:Octopus.Client.Editors.Async.IResourceEditor`2.Save
  name: Save()
  nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save()
  fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save()
  nameWithType.vb: IResourceEditor(Of TResource, TResourceBuilder).Save()
  fullName.vb: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save()
  spec.csharp:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor<TResource, TResourceBuilder>.Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor<TResource, TResourceBuilder>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Octopus.Client.Editors.Async.IResourceEditor`2.Save
    name: Save
    nameWithType: IResourceEditor(Of TResource, TResourceBuilder).Save
    fullName: Octopus.Client.Editors.Async.IResourceEditor(Of TResource, TResourceBuilder).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
